import{_ as a,c as s,o as e,a3 as n}from"./chunks/framework.zGi9i9Bf.js";const p="/ProgramLearnNotes/assets/64098487.CVNFTFrq.webp",r="/ProgramLearnNotes/assets/640-1713981430378-152.DPS4Pz0S.webp",l="/ProgramLearnNotes/assets/640-1713981430378-153.C7JC8Fvi.webp",t="/ProgramLearnNotes/assets/640-1713981430378-154.02yTxyA3.webp",i="/ProgramLearnNotes/assets/640-1713981430378-155.zMGs3uqk.webp",o="/ProgramLearnNotes/assets/640-1713981430379-156.I8LMDG5b.webp",c="/ProgramLearnNotes/assets/bg2024040703.DUieGKku.webp",b="/ProgramLearnNotes/assets/image-20240510215916741.nDN37orZ.png",d="/ProgramLearnNotes/assets/image-20240510215939060.BQIIDn8b.png",m="/ProgramLearnNotes/assets/image-20240510220008595.mLxtSH9v.png",h="/ProgramLearnNotes/assets/image-20240510220028156.C0KToCwW.png",u="/ProgramLearnNotes/assets/image-20240510220407816.CPK-ZMWz.png",g="/ProgramLearnNotes/assets/image-20240510215752974.Dqvt_5KR.png",q="/ProgramLearnNotes/assets/image-20240510215402674.CHHvNY0M.png",_="/ProgramLearnNotes/assets/image-20240510215419401.CE0vKO3L.png",v="/ProgramLearnNotes/assets/image-20240510215452978.D_PlxfyW.png",k="/ProgramLearnNotes/assets/image-20240510215507436.BZluVYVj.png",L="/ProgramLearnNotes/assets/image-20240510215521580.BJ-4Yyro.png",S="/ProgramLearnNotes/assets/image-20240510215532362.DkOwYF5H.png",f="/ProgramLearnNotes/assets/image-20240511181102787.BYWe9efK.png",y="/ProgramLearnNotes/assets/image-20240511181118763.DvfpHo76.png",P="/ProgramLearnNotes/assets/640-4894871987.nHJls0dH.webp",w="/ProgramLearnNotes/assets/640-1715422338875-94.DhEhLIn8.webp",Q="/ProgramLearnNotes/assets/640-1715422338875-95.BoO26l3Y.webp",D="/ProgramLearnNotes/assets/640-1715422338875-96.Bc0jshtc.webp",C="/ProgramLearnNotes/assets/640-1715422338875-97.BRKTRJR3.webp",x="/ProgramLearnNotes/assets/640-1715422338876-98.B7d44EAA.webp",N="/ProgramLearnNotes/assets/640-1715422338876-99.C4QNe8o1.webp",B="/ProgramLearnNotes/assets/640-1715422338876-100.CH7Be2x1.webp",M="/ProgramLearnNotes/assets/640-1715422338876-101.CjjPS6uK.webp",z="/ProgramLearnNotes/assets/640-1715422338876-102.CVQW3kgm.webp",A="/ProgramLearnNotes/assets/640-1715422338876-103.ZyxDssmF.webp",G="/ProgramLearnNotes/assets/640-1715422338876-104.nKSB6t2N.webp",F="/ProgramLearnNotes/assets/640-1715422338876-105.m04K6cnU.webp",R="/ProgramLearnNotes/assets/640-1715422338876-106.DXeL5A6D.webp",E="/ProgramLearnNotes/assets/640-1715422338876-107.sJgq0Xq8.webp",W="/ProgramLearnNotes/assets/640-1715422338876-108.mvUFGXCx.webp",H="/ProgramLearnNotes/assets/640-1715422338876-109.He2_5Z-T.webp",$=JSON.parse('{"title":"数据库工具","description":"","frontmatter":{},"headers":[],"relativePath":"Document/数据库/数据库工具.md","filePath":"Document/数据库/数据库工具.md","lastUpdated":1717759497000}'),O={name:"Document/数据库/数据库工具.md"},J=n('<h1 id="数据库工具" tabindex="-1">数据库工具 <a class="header-anchor" href="#数据库工具" aria-label="Permalink to &quot;数据库工具&quot;">​</a></h1><h2 id="数据库er图工具" tabindex="-1">数据库ER图工具 <a class="header-anchor" href="#数据库er图工具" aria-label="Permalink to &quot;数据库ER图工具&quot;">​</a></h2><p>现有的数据库客户端设计数据库不顺手，或者想要一张高规格的数据库结构图的话，可以试试下面这两个在线工具，至少我感觉比 Navicat 体验上要好一些。</p><h2 id="diagrams" tabindex="-1">Diagrams <a class="header-anchor" href="#diagrams" aria-label="Permalink to &quot;Diagrams&quot;">​</a></h2><p>一个在线通过图表结构化设计数据库结构的网站。</p><p>在线地址：<a href="https://drawdb.vercel.app/editor" target="_blank" rel="noreferrer">https://drawdb.vercel.app/editor</a></p><p>添加数据库表后直接在画布上显示表结构，非常直观，设计了几张表，还差几张表一眼就能看出来，不用在脑子里费劲巴拉的记了。</p><p>可以简单拖拽提现表之间的关系，关联关系一目了然。直接导出图片就可以作为数据库结构图使用了，放到设计文档中逼格满满。</p><p><img src="'+p+'" alt="图片"></p><p>可以直接导出为MySQL、PostgreSQL、SQLite、MariaDB、MSSQL 的 DDL 格式，之后直接导入到对应的数据库中即可。</p><p><img src="'+r+'" alt="图片"></p><p>另外，也可以直接将已有的数据库结构导入，显示对应的结构图。</p><h2 id="dbdiagram" tabindex="-1">dbDiagram <a class="header-anchor" href="#dbdiagram" aria-label="Permalink to &quot;dbDiagram&quot;">​</a></h2><p>又一个在线图形化数据库设计工具。</p><p>在线地址：<a href="https://dbdiagram.io/" target="_blank" rel="noreferrer">https://dbdiagram.io/</a></p><p><img src="'+l+'" alt="图片"></p><h3 id="通过-schemas-格式设计数据库" tabindex="-1">通过 Schemas 格式设计数据库 <a class="header-anchor" href="#通过-schemas-格式设计数据库" aria-label="Permalink to &quot;通过 Schemas 格式设计数据库&quot;">​</a></h3><p>如果你不喜欢像 Navicat 那样，在设计表结构的时候一行行的加字段、选类型的话，可以试试这种 Schemas 格式，直接在左侧像写代码一样创建表结构，右侧就会出现对应的图形化显示。毕竟有的人就是喜欢 Markdown 写东西，有的人就喜欢通过富文本框。</p><p>当然了，如果你直接手写 DDL ，那当然是 「Respect」了！</p><p><img src="'+t+`" alt="图片"></p><p>也可以通过下面这样的语法设置表字段之间的关联关系。</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>Ref: U.country_code &gt; countries.code  </span></span>
<span class="line"><span>Ref: ecommerce.merchants.country_code &gt; countries.code</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="生成数据库结构图" tabindex="-1">生成数据库结构图 <a class="header-anchor" href="#生成数据库结构图" aria-label="Permalink to &quot;生成数据库结构图&quot;">​</a></h3><p>如果单纯是为了生成一张漂亮的数据库结构图，也可以直接将 DDL 导入。</p><p><img src="`+i+'" alt="图片"></p><p>导出你想要的图片格式，然后塞到文档里。</p><p><img src="'+o+'" alt="图片"></p><h2 id="drawdb-在线数据库设计工具" tabindex="-1">Drawdb：在线数据库设计工具 <a class="header-anchor" href="#drawdb-在线数据库设计工具" aria-label="Permalink to &quot;Drawdb：在线数据库设计工具&quot;">​</a></h2><p>GitHub：<a href="https://github.com/drawdb-io/drawdb" target="_blank" rel="noreferrer">drawdb-io/drawdb：免费、简单、直观的在线数据库设计工具和 SQL 生成器。 (github.com)</a></p><p>官网：<a href="https://drawdb.vercel.app/" target="_blank" rel="noreferrer">drawdb.vercel.app</a></p><p>免费、简单、直观的在线数据库设计工具和 SQL 生成器。</p><p><img src="'+c+'" alt="img"></p><h2 id="chat2db-人工智能驱动的数据管理平台-超过-100-万开发者正在使用-chat2db" tabindex="-1">Chat2DB：人工智能驱动的数据管理平台 超过 100 万开发者正在使用 Chat2DB <a class="header-anchor" href="#chat2db-人工智能驱动的数据管理平台-超过-100-万开发者正在使用-chat2db" aria-label="Permalink to &quot;Chat2DB：人工智能驱动的数据管理平台 超过 100 万开发者正在使用 Chat2DB&quot;">​</a></h2><p>GitHub：<a href="https://github.com/chat2db/Chat2DB" target="_blank" rel="noreferrer">https://github.com/chat2db/Chat2DB</a></p><p>官网：<a href="http://chat2db.ai/" target="_blank" rel="noreferrer">http://chat2db.ai/</a></p><h2 id="dbgate-功能强大的多连接数据库管理工具" tabindex="-1">DbGate：功能强大的多连接数据库管理工具 <a class="header-anchor" href="#dbgate-功能强大的多连接数据库管理工具" aria-label="Permalink to &quot;DbGate：功能强大的多连接数据库管理工具&quot;">​</a></h2><p><strong>开源地址</strong>：<a href="https://github.com/dbgate/dbgate" target="_blank" rel="noreferrer">https://github.com/dbgate/dbgate</a></p><p>DBGate 是一个强大且易于使用的开源数据库管理工具，它提供了一个统一的Web界面，让你能够轻松地访问和管理多种类型的数据库。无论你是开发者、数据分析师还是DBA，DBGate都能帮助你提升工作效率，简化日常数据库操作。</p><p><img src="'+b+'" alt="image-20240510215916741"></p><h3 id="dbgate简介" tabindex="-1">DbGate简介 <a class="header-anchor" href="#dbgate简介" aria-label="Permalink to &quot;DbGate简介&quot;">​</a></h3><p>DbGate 是跨平台的数据库管理器。支持 MySQL、PostgreSQL、SQL Server、MongoDB、SQLite 等的数据库管理器。能够在 Windows、Linux、Mac 下运行或作为 Web 应用程序运行。DbGate 的设计简单易用且高效。但也有许多高级功能，如模式比较、可视化查询设计器、图表可视化或批量导出和导入。</p><p>DbGate是一款高度兼容多平台环境的数据库管理系统，专为满足对MySQL、PostgreSQL、SQL Server、MongoDB及SQLite等主流数据库的高效管控需求而设计。该系统不仅能够在Windows、Linux、Mac等主流操作系统上实现本地部署与运行，同时还支持以Web应用程序的形式无缝嵌入各类浏览器环境，实现跨平台、跨设备的灵活访问与操作。</p><p><img src="'+d+'" alt="image-20240510215939060"></p><h3 id="dbgate特性" tabindex="-1">DbGate特性 <a class="header-anchor" href="#dbgate特性" aria-label="Permalink to &quot;DbGate特性&quot;">​</a></h3><ul><li>表格数据编辑，带有SQL更改脚本预览：支持对表格数据进行编辑，并提供SQL更改脚本的预览功能。</li><li>编辑表格架构、索引、主键和外键：允许用户编辑表格的结构、索引以及定义主键和外键。</li><li>ER图：提供实体关系（ER）图，用于可视化数据库表格之间的关系。</li><li>浅色和深色主题：提供明亮和深色两种主题，以满足用户的个性化需求。</li><li>主/详细视图、外键查找：支持主/详细视图，以及外键查找功能。</li><li>查询设计器：提供查询设计器，使用户能够轻松设计查询。</li><li>表单视图：针对包含许多列的表格，提供表单视图以方便操作。</li><li>MongoDB集合的JSON视图：支持对MongoDB集合的JSON视图。</li><li>浏览表格、视图、存储过程、函数、MongoDB集合：提供对数据库各种对象的浏览功能。</li><li>SQL编辑器：包含SQL编辑器，支持执行SQL脚本。</li><li>SQL代码格式化、代码补全：提供SQL代码格式化和代码补全功能。</li><li>添加SQL LEFT/INNER/RIGHT连接实用工具：支持添加SQL左连接、内连接和右连接实用工具。</li><li>Mongo JavaScript编辑器：包含Mongo JavaScript编辑器，支持执行Mongo脚本（使用NodeJs语法）。</li><li>Redis树视图、从键生成脚本、运行Redis脚本：提供Redis树视图，能够从键生成脚本并运行Redis脚本。</li><li>适用于Windows、Linux和Mac的应用程序运行，或在服务器上作为Docker容器运行，客户端可以在Web浏览器中运行：具有跨平台性，用户可以选择在不同环境下运行，包括本地应用程序、服务器上的Docker容器和Web浏览器中。</li><li>导入、导出CSV、Excel、JSON、NDJSON、XML：支持与各种格式的数据进行导入和导出。</li><li>免费表格编辑器：提供免费表格编辑器，用于快速编辑表格数据，例如在导入/导出后进行数据清理或原型表格等操作。</li><li>存档：支持在本地文件系统（或在使用Web应用程序时在DbGate服务器上）备份数据到NDJSON文件中。</li></ul><p><img src="'+m+'" alt="image-20240510220008595"></p><h3 id="dbgate优势" tabindex="-1">DbGate优势 <a class="header-anchor" href="#dbgate优势" aria-label="Permalink to &quot;DbGate优势&quot;">​</a></h3><h4 id="优势" tabindex="-1">优势 <a class="header-anchor" href="#优势" aria-label="Permalink to &quot;优势&quot;">​</a></h4><p>**安全性：**支持SSL/TLS加密连接，保护你的数据在传输过程中的安全。</p><p>**实时同步：**实时查看和编辑数据，无需刷新页面。</p><p>数据导出与导入：可以将数据导出为CSV、JSON或其他文件格式，同时也支持从文件导入数据到数据库。</p><p>**SQL编辑器：**集成的智能SQL编辑器提供代码自动完成，查询性能统计等功能。</p><p>**权限控制：**通过角色和权限设置，你可以控制团队成员对特定数据库和表的访问权限。</p><p><img src="'+h+`" alt="image-20240510220028156"></p><h3 id="dbgate安装" tabindex="-1">DbGate安装 <a class="header-anchor" href="#dbgate安装" aria-label="Permalink to &quot;DbGate安装&quot;">​</a></h3><p>如果你正在寻找一个能够统一管理你所有文件，又希望数据隐私得到保障的工具，那么Filestash绝对值得尝试。无论是个人还是团队，Filestash都能为你的文件管理工作带来极大的便利。</p><p>如果你熟悉命令行，可能用 docker cli 更快捷</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 运行容器</span></span>
<span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> run</span><span style="color:#D19A66;"> -d</span><span style="color:#56B6C2;"> \\</span></span>
<span class="line"><span style="color:#D19A66;">	--name</span><span style="color:#98C379;"> dbgate</span><span style="color:#56B6C2;"> \\</span></span>
<span class="line"><span style="color:#D19A66;">	--restart</span><span style="color:#98C379;"> always</span><span style="color:#56B6C2;"> \\</span></span>
<span class="line"><span style="color:#D19A66;">	-p</span><span style="color:#98C379;"> 8483:3000</span><span style="color:#56B6C2;"> \\</span></span>
<span class="line"><span style="color:#98C379;">	dbgate/dbgate</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>也可以用 docker-compose 安装，将下面的内容保存为 docker-compose.yml 文件</p><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#98C379;">version :3</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">services</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">	dbgate</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">		image</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">dbgate/dbgate</span></span>
<span class="line"><span style="color:#98C379;">		container name:dbgate</span></span>
<span class="line"><span style="color:#E06C75;">		restart</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">always</span></span>
<span class="line"><span style="color:#E06C75;">		ports</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">			- </span><span style="color:#98C379;">8483:3000</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>然后执行下面的命令</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 新建文件来 dbgate</span></span>
<span class="line"><span style="color:#61AFEF;">mkdir</span><span style="color:#D19A66;"> -p</span><span style="color:#98C379;"> /volume2/docker/dbgate</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 进入目录</span></span>
<span class="line"><span style="color:#56B6C2;">cd</span><span style="color:#98C379;"> /volume2/docker/dbgate</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 将docker-compose.yml 放入当前目录</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># -键启动</span></span>
<span class="line"><span style="color:#61AFEF;">docker-compose</span><span style="color:#98C379;"> up</span><span style="color:#D19A66;"> -d</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>运行：在浏览器中输入 <a href="http://localhost:8483" target="_blank" rel="noreferrer">http://localhost:8483</a> 就能看到主界面</p><p><img src="`+u+'" alt="image-20240510220407816"></p><h1 id="sqlite工具" tabindex="-1">SQLite工具 <a class="header-anchor" href="#sqlite工具" aria-label="Permalink to &quot;SQLite工具&quot;">​</a></h1><h2 id="sqliteviz-轻量级sqlite可视化工具" tabindex="-1">Sqliteviz：轻量级SQLite可视化工具 <a class="header-anchor" href="#sqliteviz-轻量级sqlite可视化工具" aria-label="Permalink to &quot;Sqliteviz：轻量级SQLite可视化工具&quot;">​</a></h2><p>项目地址：<strong><a href="https://github.com/lana-k/sqliteviz" target="_blank" rel="noreferrer">https://github.com/lana-k/sqliteviz</a></strong></p><h3 id="什么是-sqliteviz" tabindex="-1">什么是 Sqliteviz ？ <a class="header-anchor" href="#什么是-sqliteviz" aria-label="Permalink to &quot;什么是 Sqliteviz ？&quot;">​</a></h3><p><code>sqliteviz</code>是一款基于JavaScript开发的单页Web应用，用于SQLite数据库或CSV文件的完全客户端可视化。它采用PWA（Progressive Web App）技术，可以离线使用，如同本地应用一样。</p><blockquote><p><code>Sqliteviz</code> 是一个单页面离线优先的渐进式网络应用（<code>PWA</code>），用于完全客户端的 <code>SQLite</code> 数据库或 <code>CSV</code> 文件的可视化。</p></blockquote><p>所谓完全客户端，就是您的数据库永远不会离开您的计算机。</p><p><code>sqliteviz</code>拥有简洁直观的界面，即使是初学者也能轻松上手。</p><p>通过sqliteviz，我们可以执行SQL查询、绘制Plotly图表、管理查询和图表设置等操作。</p><p>它主要包含以下功能：</p><ul><li>运行 SQL 查询并创建图表: 只需输入 SQL 查询，sqliteviz 就会自动执行并生成相应的图表，包括折线图、柱状图、饼图等。</li><li>导入 CSV 文件: sqliteviz 支持将 CSV 文件导入到 SQLite 数据库中，并对导入的数据进行可视化分析。</li><li>导出结果集: 可将查询结果导出为 CSV 文件，以便在其他应用中进行分析或处理。</li><li>管理查询: 支持保存和管理多个查询，方便您以后重复使用。</li><li>离线使用: 支持离线运行，即使在没有网络连接的情况下也能使用。</li></ul><h3 id="性能特色" tabindex="-1">性能特色 <a class="header-anchor" href="#性能特色" aria-label="Permalink to &quot;性能特色&quot;">​</a></h3><ul><li>完全客户端可视化：无需服务器端支持，只需在浏览器中运行，保护数据安全。</li><li>支持离线使用：作为PWA应用，sqliteviz可以在离线环境下正常工作，如同本地应用。</li><li>轻量级：占用资源少，运行速度快，给您带来流畅的体验。</li><li>易于使用：无需安装任何软件，只需打开网站即可开始使用。</li><li>功能丰富: sqliteviz 提供了丰富的可视化功能，能够满足多种数据分析需求。</li></ul><h3 id="项目快速使用" tabindex="-1">项目快速使用 <a class="header-anchor" href="#项目快速使用" aria-label="Permalink to &quot;项目快速使用&quot;">​</a></h3><p>直接浏览器访问 <code>https://sqliteviz.com/app</code> 即可使用最新的版本。</p><p>或者通过Chrome浏览器，打开上面地址，地址栏右上角点击安装，将其用作常规桌面应用程序。</p><p><img src="'+g+`" alt="image-20240510215752974"></p><h3 id="构建镜像" tabindex="-1">构建镜像 <a class="header-anchor" href="#构建镜像" aria-label="Permalink to &quot;构建镜像&quot;">​</a></h3><blockquote><p>如果你不想自己构建，可以跳过，直接阅读下一章节</p></blockquote><p>官方提供了本地测试的 <code>Dockerfile</code>，但其使用的基础镜像比较老，也未使用分层构建，所以老苏做了些许调整👇</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span># An easy way to run tests locally without Nodejs installed:      </span></span>
<span class="line"><span>#      </span></span>
<span class="line"><span>#     docker build -t sqliteviz/test -f Dockerfile.test .      </span></span>
<span class="line"><span>#      </span></span>
<span class="line"><span>      </span></span>
<span class="line"><span>FROM node:16.16 as build-base   </span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>RUN set -ex; \\    </span></span>
<span class="line"><span>    apt update; \\    </span></span>
<span class="line"><span>    apt install -y chromium firefox-esr; \\    </span></span>
<span class="line"><span>    npm install -g npm@7    </span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>WORKDIR /tmp/build    </span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>COPY package.json package-lock.json ./    </span></span>
<span class="line"><span>COPY lib lib      </span></span>
<span class="line"><span>RUN npm install      </span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>COPY . .    </span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>RUN set -ex; \\    </span></span>
<span class="line"><span>    sed -i &#39;s/browsers: \\[.*\\],/browsers: [&#39;&quot;&#39;FirefoxHeadlessTouch&#39;&quot;&#39;],/&#39; karma.conf.js    </span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>#RUN npm run lint -- --no-fix &amp;&amp; npm run test  </span></span>
<span class="line"><span>RUN npx browserslist@latest --update-db &amp;&amp; \\  </span></span>
<span class="line"><span>    npm run build  </span></span>
<span class="line"><span>  </span></span>
<span class="line"><span>FROM nginx:1.12-alpine  </span></span>
<span class="line"><span>COPY --from=build-base /tmp/build/dist /usr/share/nginx/html  </span></span>
<span class="line"><span>  </span></span>
<span class="line"><span>EXPOSE 80  </span></span>
<span class="line"><span>  </span></span>
<span class="line"><span>CMD [&quot;nginx&quot;, &quot;-g&quot;, &quot;daemon off;&quot;]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p>构建镜像和容器运行的基本命令如下👇</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span># 下载代码</span></span>
<span class="line"><span>git clone https://github.com/lana-k/sqliteviz.git</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 进入目录  </span></span>
<span class="line"><span>cd sqliteviz</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 构建镜像</span></span>
<span class="line"><span>docker build -t wbsu2003/sqliteviz:v1 -f Dockerfile.test .</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 运行容器</span></span>
<span class="line"><span>docker run -d \\</span></span>
<span class="line"><span>   --name sqliteviz \\</span></span>
<span class="line"><span>   -p 3366:80 \\</span></span>
<span class="line"><span>   wbsu2003/sqliteviz:v1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h3><p>在群晖上以 Docker 方式安装。</p><p>在注册表中搜索 <code>sqliteviz</code> ，选择第一个 <code>wbsu2003/sqliteviz</code>，版本选择 <code>latest</code>。</p><p><img src="`+q+`" alt="image-20240510215402674"></p><h3 id="端口" tabindex="-1">端口 <a class="header-anchor" href="#端口" aria-label="Permalink to &quot;端口&quot;">​</a></h3><p>本地端口不冲突就行，不确定的话可以用命令查一下</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span># 查看端口占用</span></span>
<span class="line"><span>netstat -tunlp | grep 端口号</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><table><thead><tr><th style="text-align:center;">本地端口</th><th style="text-align:center;">容器端口</th></tr></thead><tbody><tr><td style="text-align:center;"><code>3366</code></td><td style="text-align:center;"><code>80</code></td></tr></tbody></table><p><img src="`+_+`" alt="image-20240510215419401"></p><h3 id="命令行安装" tabindex="-1">命令行安装 <a class="header-anchor" href="#命令行安装" aria-label="Permalink to &quot;命令行安装&quot;">​</a></h3><p>如果你熟悉命令行，可能用 <code>docker cli</code> 更快捷</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span># 运行容器</span></span>
<span class="line"><span>docker run -d \\</span></span>
<span class="line"><span>   --name sqliteviz \\</span></span>
<span class="line"><span>   -p 3366:80 \\</span></span>
<span class="line"><span>   wbsu2003/sqliteviz</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>也可以用 <code>docker-compose</code> 安装，将下面的内容保存为 <code>docker-compose.yml</code> 文件</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>version: &#39;3&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>services:</span></span>
<span class="line"><span>  sqliteviz:</span></span>
<span class="line"><span>    image: wbsu2003/sqliteviz</span></span>
<span class="line"><span>    container_name: sqliteviz</span></span>
<span class="line"><span>    restart: unless-stopped</span></span>
<span class="line"><span>    ports:</span></span>
<span class="line"><span>      - 3366:80</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>然后执行下面的命令</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span># 新建文件夹 sqliteviz</span></span>
<span class="line"><span>mkdir -p /volume1/docker/sqliteviz</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 进入 sqliteviz 目录</span></span>
<span class="line"><span>cd /volume1/docker/sqliteviz</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 将 docker-compose.yml 放入当前目录</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 一键启动</span></span>
<span class="line"><span>docker-compose up -d</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="运行" tabindex="-1">运行 <a class="header-anchor" href="#运行" aria-label="Permalink to &quot;运行&quot;">​</a></h3><p>在浏览器中输入 <code>http://群晖IP:3366</code> 就能看到主界面</p><ul><li>①可以上传或者拖入一个已有的数据库文件；</li><li>②可以创建一个空的数据库；</li></ul><p><img src="`+v+'" alt="image-20240510215452978"></p><p>用来测试的还是 <code>homebox</code> 的数据库</p><p><img src="'+k+'" alt="image-20240510215507436"></p><p>点右上角的 <code>Create</code> 按钮创建查询，输入 <code>SQL</code> 语句会有提示</p><p><img src="'+L+'" alt="image-20240510215521580"></p><p>运行 <code>SQL</code> 查询</p><p><img src="'+S+'" alt="image-20240510215532362"></p><p>详细的使用方法，请参考官方文档：<a href="https://sqliteviz.com/docs/basic-usage" target="_blank" rel="noreferrer">https://sqliteviz.com/docs/basic-usage</a></p><h3 id="参考文档" tabindex="-1">参考文档 <a class="header-anchor" href="#参考文档" aria-label="Permalink to &quot;参考文档&quot;">​</a></h3><blockquote><p>lana-k/sqliteviz: Instant offline SQL-powered data visualisation in your browser 地址：<a href="https://github.com/lana-k/sqliteviz" target="_blank" rel="noreferrer">https://github.com/lana-k/sqliteviz</a></p><p>Home - sqliteviz 地址：<a href="https://sqliteviz.com/" target="_blank" rel="noreferrer">https://sqliteviz.com/</a></p><p>Introduction - sqliteviz 地址：<a href="https://sqliteviz.com/docs/" target="_blank" rel="noreferrer">https://sqliteviz.com/docs/</a></p></blockquote><h1 id="免费、开源、好用的-sql-客户端合集" tabindex="-1">免费、开源、好用的 SQL 客户端合集 <a class="header-anchor" href="#免费、开源、好用的-sql-客户端合集" aria-label="Permalink to &quot;免费、开源、好用的 SQL 客户端合集&quot;">​</a></h1><h2 id="_0、sql-chat" tabindex="-1">0、SQL Chat <a class="header-anchor" href="#_0、sql-chat" aria-label="Permalink to &quot;0、SQL Chat&quot;">​</a></h2><p>SQL Chat 是 2023 年 3 月推出的新型 SQL 客户端，它将数据库管理带入了基于聊天的新时代。</p><p>SQL Chat 由 ChatGPT 驱动，能够帮你编写和润色 SQL 语句，让数据库操作变得更加智能和便捷。</p><p>目前支持 MySQL、PostgreSQL 和 MSSQL 数据库。</p><p>***官方地址：*<em><a href="https://www.sqlchat.ai/" target="_blank" rel="noreferrer">https://www.sqlchat.ai/</a></em></p><p>***开源地址：*<em><a href="https://github.com/sqlchat/sqlchat" target="_blank" rel="noreferrer">https://github.com/sqlchat/sqlchat</a></em></p><p><img src="'+f+'" alt="image-20240511181102787"></p><p><img src="'+y+'" alt="image-20240511181118763"></p><h2 id="_1、dbeaver" tabindex="-1">1、DBeaver <a class="header-anchor" href="#_1、dbeaver" aria-label="Permalink to &quot;1、DBeaver&quot;">​</a></h2><p>一个老牌的 SQL 客户端，除了基本的可视化和管理功能外，还具备SQL编辑器、数据和架构迁移能力、监控数据库连接等功能。</p><p>支持广泛的数据库类型（包括 SQL 和 NoSQL）。</p><p>与 GPT-3 集成，可以将自然语言转换为 SQL 语句。</p><p>***官方地址：*<em><a href="https://dbeaver.io/" target="_blank" rel="noreferrer">https://dbeaver.io/</a></em></p><p>***开源地址：*<em><a href="https://github.com/dbeaver/dbeaver?tab=readme-ov-file" target="_blank" rel="noreferrer">https://github.com/dbeaver/dbeaver?tab=readme-ov-file</a></em></p><p><img src="'+P+'" alt="图片"></p><p><img src="'+w+'" alt="图片"></p><p><img src="'+Q+'" alt="图片"></p><h2 id="_2、beekeeper-studio" tabindex="-1">2、Beekeeper Studio <a class="header-anchor" href="#_2、beekeeper-studio" aria-label="Permalink to &quot;2、Beekeeper Studio&quot;">​</a></h2><p>一个现代且轻量级的 SQL 客户端，支持 MySQL、Postgres、SQLite、SQL Server 等。</p><p>适用于 Linux、Mac 和 Windows 系统。</p><p>***官方地址：*<em><a href="https://www.beekeeperstudio.io/" target="_blank" rel="noreferrer">https://www.beekeeperstudio.io/</a></em></p><p>***开源地址：*<em><a href="https://github.com/beekeeper-studio/beekeeper-studio" target="_blank" rel="noreferrer">https://github.com/beekeeper-studio/beekeeper-studio</a></em></p><p><img src="'+D+'" alt="图片"></p><p><img src="'+C+'" alt="图片"></p><p><img src="'+x+'" alt="图片"></p><h2 id="_3、dbgate" tabindex="-1">3、DbGate <a class="header-anchor" href="#_3、dbgate" aria-label="Permalink to &quot;3、DbGate&quot;">​</a></h2><p>DbGate 是一个全面而强大的数据库管理工具。</p><p>DbGate 在 Windows、Linux、Mac 和 Web浏览器上都能运行，提供一致的体验。</p><p>无论是 MySQL、PostgreSQL、SQL Server、MongoDB、SQLite 还是 CockroachDB，DbGate 都能轻松应对。</p><p>DbGate 不仅支持基本的数据库操作，还提供了数据可视化、模式设计、数据迁移等高级功能。</p><p>***官方网站：*<em><a href="https://dbgate.org/" target="_blank" rel="noreferrer">https://dbgate.org/</a></em></p><p>***开源地址：*<em><a href="https://github.com/dbgate/dbgate" target="_blank" rel="noreferrer">https://github.com/dbgate/dbgate</a></em></p><p><img src="'+N+'" alt="图片"></p><p><img src="'+B+'" alt="图片"></p><p><img src="'+M+'" alt="图片"></p><h2 id="_4、sqlectron" tabindex="-1">4、Sqlectron <a class="header-anchor" href="#_4、sqlectron" aria-label="Permalink to &quot;4、Sqlectron&quot;">​</a></h2><p>Sqlectron 以其轻量级、跨平台和开源的特性，成为了数据库管理工具中的一股清流。</p><p>支持包括 PostgreSQL、Redshift、MySQL、MariaDB、SQL Server、Cassandra 和 SQLite 在内的多种数据库系统。</p><p>支持 Mac、Linux 以及 Windows。</p><p>***官方地址：*<em><a href="https://sqlectron.github.io/" target="_blank" rel="noreferrer">https://sqlectron.github.io/</a></em></p><p>***开源地址：*<em><a href="https://github.com/sqlectron/sqlectron-gui" target="_blank" rel="noreferrer">https://github.com/sqlectron/sqlectron-gui</a></em></p><p><img src="'+z+'" alt="图片"></p><p><img src="'+A+'" alt="图片"></p><h2 id="_5、heidisql" tabindex="-1">5、HeidiSQL <a class="header-anchor" href="#_5、heidisql" aria-label="Permalink to &quot;5、HeidiSQL&quot;">​</a></h2><p>HeidiSQL 以其轻量级、多功能和用户友好的设计，成为了数据库管理工具中的佼佼者。</p><p>支持包括 MariaDB、MySQL、MS SQL、PostgreSQL、SQLite、Interbase和 Firebird 在内的多种数据库系统。</p><p>除了基本的 SQL 客户端功能，HeidiSQL 还允许用户导出结构和数据到 SQL 文件，或者复制到剪贴板或其他服务器，极大方便了数据的迁移和管理。</p><p>***官方地址：*<em><a href="https://www.heidisql.com/" target="_blank" rel="noreferrer">https://www.heidisql.com/</a></em></p><p>***开源地址：*<em><a href="https://github.com/HeidiSQL/HeidiSQL" target="_blank" rel="noreferrer">https://github.com/HeidiSQL/HeidiSQL</a></em></p><p><img src="'+G+'" alt="图片"></p><p><img src="'+F+'" alt="图片"></p><h2 id="_6、phpmyadmin" tabindex="-1">6、phpMyAdmin <a class="header-anchor" href="#_6、phpmyadmin" aria-label="Permalink to &quot;6、phpMyAdmin&quot;">​</a></h2><p>自 1998 年诞生以来，phpMyAdmin 一直是数据库管理领域的经典之作。</p><p>作为 LAMP、LNMP 和 MAMP 环境的默认工具，phpMyAdmin 在全球拥有庞大的用户基础，已发展成为管理 MySQL 和类 MySQL 数据库（例如 MariaDB）的领先工具之一。</p><p>phpMyAdmin 不仅仅是一个简单的数据库管理工具，它还提供了数据导入导出、用户权限管理、数据库结构编辑等高级功能。</p><p>phpMyAdmin 每月有超过 20 万的直接下载量。</p><p>***官方地址：*<em><a href="https://www.phpmyadmin.net/" target="_blank" rel="noreferrer">https://www.phpmyadmin.net/</a></em></p><p>***开源地址：*<em><a href="https://github.com/phpmyadmin/phpmyadmin" target="_blank" rel="noreferrer">https://github.com/phpmyadmin/phpmyadmin</a></em></p><p><img src="'+R+'" alt="图片"></p><p><img src="'+E+'" alt="图片"></p><h2 id="_7、pgadmin-4" tabindex="-1">7、pgAdmin 4 <a class="header-anchor" href="#_7、pgadmin-4" aria-label="Permalink to &quot;7、pgAdmin 4&quot;">​</a></h2><p>对于 PostgreSQL 来说，pgAdmin 就像 phpMyAdmin 对于 MySQL 一样。</p><p>pgAdmin 是为 PostgreSQL 量身定制的管理工具，提供了无与伦比的兼容性和性能。</p><p>无论是在 Linux、Unix、macOS 还是 Windows，pgAdmin 都能提供一致的用户体验。</p><p>pgAdmin不仅仅是一个简单的数据库管理工具，它还提供了数据备份、还原、用户权限管理、数据库架构设计等高级功能。</p><p>pgAdmin 4 是 pgAdmin 系列的最新版本，它使用 Python 和 Javascript/jQuery 进行了完全重写，带来了全新的用户界面和改进的性能。</p><p>***官方地址：*<em><a href="https://www.pgadmin.org/" target="_blank" rel="noreferrer">https://www.pgadmin.org/</a></em></p><p>***开源地址：*<em><a href="https://github.com/pgadmin-org/pgadmin4" target="_blank" rel="noreferrer">https://github.com/pgadmin-org/pgadmin4</a></em></p><p><img src="'+W+'" alt="图片"></p><p><img src="'+H+'" alt="图片"></p>',187),T=[J];function V(I,K,U,Y,j,X){return e(),s("div",null,T)}const aa=a(O,[["render",V]]);export{$ as __pageData,aa as default};
