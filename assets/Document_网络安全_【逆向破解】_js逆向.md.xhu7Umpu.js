import{_ as s,c as n,o as a,a3 as l}from"./chunks/framework.zGi9i9Bf.js";const p="/ProgramLearnNotes/assets/640-7525782.MgA61O2q.webp",o="/ProgramLearnNotes/assets/640-1715338793889-207.4YKH9FZr.webp",t="/ProgramLearnNotes/assets/640-1715338793889-208.BHDQIbZ3.webp",e="/ProgramLearnNotes/assets/640-1715338793889-209.D870fUT5.webp",r="/ProgramLearnNotes/assets/640-1715338793889-210.Bs3z1Q3F.webp",c="/ProgramLearnNotes/assets/640-1715338793889-211.jSpJW4eD.webp",B="/ProgramLearnNotes/assets/640-1715338793889-212.Dh-JoGTf.webp",y="/ProgramLearnNotes/assets/640-1715338793889-213.BfOIKlAW.webp",i="/ProgramLearnNotes/assets/640-1715338793889-214.CvxgiFOh.webp",F="/ProgramLearnNotes/assets/640-1715338793890-215.D2q2lxVk.webp",b="/ProgramLearnNotes/assets/640-1715338793890-216.D0tphlj_.webp",A="/ProgramLearnNotes/assets/640-1715338793890-217.WgQlix9L.webp",_=JSON.parse('{"title":"js 逆向","description":"","frontmatter":{},"headers":[],"relativePath":"Document/网络安全/【逆向破解】/js逆向.md","filePath":"Document/网络安全/【逆向破解】/js逆向.md","lastUpdated":1715339327000}'),u={name:"Document/网络安全/【逆向破解】/js逆向.md"},C=l('<h1 id="js-逆向" tabindex="-1">js 逆向 <a class="header-anchor" href="#js-逆向" aria-label="Permalink to &quot;js 逆向&quot;">​</a></h1><h2 id="自用油猴脚本" tabindex="-1">自用油猴脚本 <a class="header-anchor" href="#自用油猴脚本" aria-label="Permalink to &quot;自用油猴脚本&quot;">​</a></h2><h3 id="准备工作" tabindex="-1">准备工作 <a class="header-anchor" href="#准备工作" aria-label="Permalink to &quot;准备工作&quot;">​</a></h3><h4 id="你需要知道的网站运行的时间轴" tabindex="-1">你需要知道的网站运行的时间轴 <a class="header-anchor" href="#你需要知道的网站运行的时间轴" aria-label="Permalink to &quot;你需要知道的网站运行的时间轴&quot;">​</a></h4><p>url--&gt;加载 html--&gt;加载 js--&gt;运行 js 初始化--&gt;用户触发某个事件--调用了某段 js--&gt;明文数据--&gt;加密函数--&gt;加密后的 数据--&gt;send（给服务器发信息{XHR--SEND}） --&gt;接收到服务器数据--&gt;解密函数--&gt;刷新函数--&gt;刷新网页渲染</p><h4 id="认识浏览器的调试功能" tabindex="-1">认识浏览器的调试功能 <a class="header-anchor" href="#认识浏览器的调试功能" aria-label="Permalink to &quot;认识浏览器的调试功能&quot;">​</a></h4><blockquote><p>❝</p><p>Chrome 高阶调试指南：<a href="https://zhuanlan.zhihu.com/p/62177097" target="_blank" rel="noreferrer">https://zhuanlan.zhihu.com/p/62177097</a></p></blockquote><p><img src="'+p+`" alt="图片"></p><h4 id="如何快速定位加解密函数" tabindex="-1">如何快速定位加解密函数 <a class="header-anchor" href="#如何快速定位加解密函数" aria-label="Permalink to &quot;如何快速定位加解密函数&quot;">​</a></h4><ul><li>搜索关键字：登陆时的 uri、passwd、Encrypt、Decrypt、.....</li><li>使用一个神奇的脚本提高效率：<a href="https://github.com/Cha111Ng1/Tampermonkey_cha11/blob/main/HookScript.js" target="_blank" rel="noreferrer">https://github.com/Cha111Ng1/Tampermonkey_cha11/blob/main/HookScript.js</a></li></ul><h4 id="如何利用加解密函数" tabindex="-1">如何利用加解密函数 <a class="header-anchor" href="#如何利用加解密函数" aria-label="Permalink to &quot;如何利用加解密函数&quot;">​</a></h4><blockquote><p>❝</p><p>有一些加密函数是可以直接扣出来使用的，而有一些却不能，以下是测试过程中我常用的三种方式。</p></blockquote><ul><li>复原原加密逻辑</li><li>抠出原有 js</li><li>rpc 主动调用</li></ul><h4 id="当你懒-你会用什么工具" tabindex="-1">当你懒，你会用什么工具？ <a class="header-anchor" href="#当你懒-你会用什么工具" aria-label="Permalink to &quot;当你懒，你会用什么工具？&quot;">​</a></h4><blockquote><p>❝</p><p>项目地址：<a href="https://github.com/Cha111Ng1/Tampermonkey_cha11" target="_blank" rel="noreferrer">https://github.com/Cha111Ng1/Tampermonkey_cha11</a></p><p>一个渗透测试油猴脚本库，整理常用脚本</p></blockquote><h4 id="hookscript-js" tabindex="-1">HookScript.js <a class="header-anchor" href="#hookscript-js" aria-label="Permalink to &quot;HookScript.js&quot;">​</a></h4><ul><li>一些用于 hook 的常用断点+禁用无限 debug</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// ==UserScript==</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// @name        「Hook Script」fuck断点</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// @namespace    http://tampermonkey.net/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// @version      0.1</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// @description  一些用于hook的常用断点，禁用无限debug</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// @author       Cha111Ng1</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// @match        http*://*/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// @icon</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// @grant        none</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// @run-at       document-start</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// ==/UserScript==</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 取消vm debug</span></span>
<span class="line"><span style="color:#ABB2BF;">	(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {}).</span><span style="color:#E06C75;">constructor</span><span style="color:#56B6C2;"> ===</span><span style="color:#E06C75;"> Function</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">	Function</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">constructor</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">	(</span><span style="color:#98C379;">&quot;use strict&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;# ++++++++++++++++++++++++++++++++++++++++++&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;# +  微信公众号：攻有道       By:Cha111Ng1    +&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;# ++++++++++++++++++++++++++++++++++++++++++&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">	var</span><span style="color:#E06C75;"> userChoices</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> prompt</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#98C379;">		&quot; ━━━━━━️☠─────── </span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">请选择要启动的插件（多选用逗号分隔）</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;"> ━━━━━━️☠─────── </span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">1. JSON.parse调用断点</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">2. 每当尝试设置document.cookie时断点</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">3.每当调用XMLHttpRequest时断点</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">4.当发送POST请求时断点&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">	);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">	if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">userChoices</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">		var</span><span style="color:#E06C75;"> choicesArray</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> userChoices</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">split</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;,&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">map</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">choice</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">			return</span><span style="color:#E5C07B;"> choice</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">trim</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">		});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">		choicesArray</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">chosenPlugin</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">			switch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">chosenPlugin</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">				case</span><span style="color:#98C379;"> &quot;1&quot;</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">					//alert(&quot;JSON.parse调用断点&quot;);</span></span>
<span class="line"><span style="color:#C678DD;">					var</span><span style="color:#E06C75;"> _parse</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> JSON</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">parse</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">					JSON</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">parse</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">arg</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">						console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;[+]「油猴」JSON.parse调用断点:&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">arg</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">						debugger</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">						return</span><span style="color:#61AFEF;"> _parse</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">arg</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">					};</span></span>
<span class="line"><span style="color:#C678DD;">					break</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">				case</span><span style="color:#98C379;"> &quot;2&quot;</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">					//alert(&quot;每当尝试设置document.cookie时断点&quot;);</span></span>
<span class="line"><span style="color:#E5C07B;">					Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">defineProperty</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">document</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;cookie&quot;</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#61AFEF;">						set</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">a</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">							debugger</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">						},</span></span>
<span class="line"><span style="color:#ABB2BF;">					});</span></span>
<span class="line"><span style="color:#C678DD;">					break</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">				case</span><span style="color:#98C379;"> &quot;3&quot;</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">					//alert(&quot;每当调用XMLHttpRequest.prototype.open时断点&quot;);</span></span>
<span class="line"><span style="color:#C678DD;">					var</span><span style="color:#E06C75;"> _open</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> XMLHttpRequest</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">open</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">					XMLHttpRequest</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">open</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">						method</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">						url</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">						async</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">						user</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">						password</span></span>
<span class="line"><span style="color:#ABB2BF;">					) {</span></span>
<span class="line"><span style="color:#E5C07B;">						console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#98C379;">							&quot;[+]「油猴」调用XMLHttpRequest.prototype.open断点:&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">							method</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">							url</span></span>
<span class="line"><span style="color:#ABB2BF;">						);</span></span>
<span class="line"><span style="color:#C678DD;">						debugger</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">						return</span><span style="color:#E5C07B;"> _open</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">apply</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">arguments</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">					};</span></span>
<span class="line"><span style="color:#C678DD;">					break</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">				case</span><span style="color:#98C379;"> &quot;4&quot;</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">					//alert(&quot;每当调用XMLHttpRequest.prototype.send时断点&quot;);</span></span>
<span class="line"><span style="color:#C678DD;">					var</span><span style="color:#E06C75;"> _send</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> XMLHttpRequest</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">send</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">					XMLHttpRequest</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">send</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">data</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">						console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;[+]「油猴」POST请求发送数据:&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">						debugger</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">						_send</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">apply</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">arguments</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">					};</span></span>
<span class="line"><span style="color:#C678DD;">					break</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">				default</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#61AFEF;">					alert</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;未知插件：&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> chosenPlugin</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">					break</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#ABB2BF;">		});</span></span>
<span class="line"><span style="color:#ABB2BF;">	} </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		//alert(&quot;没有选择插件&quot;);</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;[x]没有选择插件&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">})();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br></div></div><h4 id="nodebugger-js" tabindex="-1">NoDebugger.js <a class="header-anchor" href="#nodebugger-js" aria-label="Permalink to &quot;NoDebugger.js&quot;">​</a></h4><ul><li>代码中禁用无限 Debugger</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// ==UserScript==</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// @name         代码中禁用无限Debugger</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// @namespace    http://tampermonkey.net/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// @version      0.1</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// @description  禁用无限Debugger</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// @author       Cha111Ng1</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// @match        http*://*/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// @icon</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// @grant        none</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// @run-at       document-start</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// ==/UserScript==</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 破解无限Debugger</span></span>
<span class="line"><span style="color:#C678DD;">	var</span><span style="color:#E06C75;"> constructorHook</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> constructor</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">	Function</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">constructor</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">s</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">		if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">s</span><span style="color:#56B6C2;"> ==</span><span style="color:#98C379;"> &quot;debugger&quot;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">			return</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {};</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#C678DD;">		return</span><span style="color:#61AFEF;"> constructorHook</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">s</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	};</span></span>
<span class="line"><span style="color:#C678DD;">	const</span><span style="color:#E5C07B;"> setInterval</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> window</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">setInterval</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">	window</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setInterval</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">fun</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">time</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// console.log(time, &#39;ddddd&#39;, fun.toString());</span></span>
<span class="line"><span style="color:#C678DD;">		if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">fun</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#E5C07B;"> fun</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">toString</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> funString</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> fun</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toString</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#C678DD;">			if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">funString</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">indexOf</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;debugger&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">&gt;</span><span style="color:#56B6C2;"> -</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">			if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">funString</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">indexOf</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;window.close&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">&gt;</span><span style="color:#56B6C2;"> -</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">		return</span><span style="color:#61AFEF;"> setInterval</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">fun</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">time</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	};</span></span>
<span class="line"><span style="color:#ABB2BF;">})();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h4 id="jsrpc-js" tabindex="-1">jsrpc.js <a class="header-anchor" href="#jsrpc-js" aria-label="Permalink to &quot;jsrpc.js&quot;">​</a></h4><ul><li>加解密 jsrpc 自动化脚本，配合 sekiro、Mitmproxy（可选）使用</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// ==UserScript==</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// @name         jsrpc模版</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// @namespace    http://tampermonkey.net/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// @version      0.1</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// @description  加解密jsrpc自动化脚本</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// @author       Cha111Ng1</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// @match        https://此处修改为需要使用的域名/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// @icon</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// @grant        none</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// @run-at       document-start</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// ==/UserScript==</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 需配合Sekiro、Mitmproxy（自行百度）,需要找到加密位置，并把加密函数设置为全局函数，本例子为window._h(data)，在源码加密函数下方插入\`if (!window._h){window._h = h}\`</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 例如：</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 加密</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// http://127.0.0.1:5612/business-demo/invoke?group=test_cha11&amp;action=encrypt&amp;data=</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 解密</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// http://127.0.0.1:5612/business-demo/invoke?group=test_cha11&amp;action=decode&amp;data=</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 取消debug</span></span>
<span class="line"><span style="color:#ABB2BF;">	(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {}).</span><span style="color:#E06C75;">constructor</span><span style="color:#56B6C2;"> ===</span><span style="color:#E06C75;"> Function</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">	Function</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">constructor</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">	(</span><span style="color:#98C379;">&quot;use strict&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;# ++++++++++++++++++++++++++++++++++++++++++&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;# +  微信公众号：攻有道       By:Cha111Ng1    +&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;# ++++++++++++++++++++++++++++++++++++++++++&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// Your code here...</span></span>
<span class="line"><span style="color:#C678DD;">	function</span><span style="color:#61AFEF;"> SekiroClient</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">		if</span><span style="color:#ABB2BF;"> (((</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">wsURL</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> e</span><span style="color:#ABB2BF;">), (</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">handlers</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {}), (</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">socket</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {}), </span><span style="color:#56B6C2;">!</span><span style="color:#E06C75;">e</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#C678DD;">			throw</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Error</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;wsURL can not be empty!!&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">		(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">webSocketFactory</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolveWebSocketFactory</span><span style="color:#ABB2BF;">()), </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">connect</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">	(</span><span style="color:#E5C07B;">SekiroClient</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolveWebSocketFactory</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#C678DD;">		if</span><span style="color:#ABB2BF;"> (</span><span style="color:#98C379;">&quot;object&quot;</span><span style="color:#56B6C2;"> ==</span><span style="color:#C678DD;"> typeof</span><span style="color:#E06C75;"> window</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> e</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> window</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">WebSocket</span><span style="color:#C678DD;"> ?</span><span style="color:#E5C07B;"> window</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">WebSocket</span><span style="color:#C678DD;"> :</span><span style="color:#E5C07B;"> window</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">MozWebSocket</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">			return</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">o</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">				function</span><span style="color:#61AFEF;"> t</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">o</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">					this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">mSocket</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> e</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">o</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">				}</span></span>
<span class="line"><span style="color:#C678DD;">				return</span><span style="color:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#ABB2BF;">					(</span><span style="color:#E5C07B;">t</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">close</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">						this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">mSocket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">close</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">					}),</span></span>
<span class="line"><span style="color:#ABB2BF;">					(</span><span style="color:#E5C07B;">t</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onmessage</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">						this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">mSocket</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">onmessage</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> e</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">					}),</span></span>
<span class="line"><span style="color:#ABB2BF;">					(</span><span style="color:#E5C07B;">t</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onopen</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">						this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">mSocket</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">onopen</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> e</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">					}),</span></span>
<span class="line"><span style="color:#ABB2BF;">					(</span><span style="color:#E5C07B;">t</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onclose</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">						this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">mSocket</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">onclose</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> e</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">					}),</span></span>
<span class="line"><span style="color:#ABB2BF;">					(</span><span style="color:#E5C07B;">t</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">send</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">						this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">mSocket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">send</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">e</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">					}),</span></span>
<span class="line"><span style="color:#C678DD;">					new</span><span style="color:#61AFEF;"> t</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">o</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">				);</span></span>
<span class="line"><span style="color:#ABB2BF;">			};</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#C678DD;">		if</span><span style="color:#ABB2BF;"> (</span><span style="color:#98C379;">&quot;object&quot;</span><span style="color:#56B6C2;"> ==</span><span style="color:#C678DD;"> typeof</span><span style="color:#E06C75;"> weex</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">			try</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">				console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;test webSocket for weex&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">				var</span><span style="color:#E06C75;"> o</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> weex</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">requireModule</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;webSocket&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">				return</span><span style="color:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#E5C07B;">					console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;find webSocket for weex:&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> o</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#C678DD;">					function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">						try</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">							o</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">close</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">						} </span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">e</span><span style="color:#ABB2BF;">) {}</span></span>
<span class="line"><span style="color:#C678DD;">						return</span><span style="color:#E5C07B;"> o</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">WebSocket</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">e</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#ABB2BF;">), </span><span style="color:#E06C75;">o</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">					}</span></span>
<span class="line"><span style="color:#ABB2BF;">				);</span></span>
<span class="line"><span style="color:#ABB2BF;">			} </span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">e</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">				console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">e</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#C678DD;">		if</span><span style="color:#ABB2BF;"> (</span><span style="color:#98C379;">&quot;object&quot;</span><span style="color:#56B6C2;"> ==</span><span style="color:#C678DD;"> typeof</span><span style="color:#E06C75;"> WebSocket</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">			return</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">o</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">				return</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> e</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">o</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			};</span></span>
<span class="line"><span style="color:#C678DD;">		throw</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Error</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;the js environment do not support websocket&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	}),</span></span>
<span class="line"><span style="color:#ABB2BF;">		(</span><span style="color:#E5C07B;">SekiroClient</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">connect</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;sekiro: begin of connect to wsURL: &quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">wsURL</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> e</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">			try</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">				this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">socket</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">webSocketFactory</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">wsURL</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			} </span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">o</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">				return</span><span style="color:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#E5C07B;">					console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#98C379;">						&quot;sekiro: create connection failed,reconnect after 2s:&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> o</span></span>
<span class="line"><span style="color:#ABB2BF;">					),</span></span>
<span class="line"><span style="color:#C678DD;">					void</span><span style="color:#61AFEF;"> setTimeout</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">						e</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">connect</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">					}, </span><span style="color:#D19A66;">2e3</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">				);</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#E5C07B;">			this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onmessage</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">o</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">				e</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">handleSekiroRequest</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">o</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			}),</span></span>
<span class="line"><span style="color:#E5C07B;">				this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onopen</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">					console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;sekiro: open a sekiro client connection&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">				}),</span></span>
<span class="line"><span style="color:#E5C07B;">				this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onclose</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">o</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">					console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;sekiro: disconnected ,reconnection after 2s&quot;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#61AFEF;">						setTimeout</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#E5C07B;">							e</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">connect</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">						}, </span><span style="color:#D19A66;">2e3</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">				});</span></span>
<span class="line"><span style="color:#ABB2BF;">		}),</span></span>
<span class="line"><span style="color:#ABB2BF;">		(</span><span style="color:#E5C07B;">SekiroClient</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">handleSekiroRequest</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;receive sekiro request: &quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> e</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> o</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> JSON</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">parse</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">e</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#E06C75;">				t</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> o</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">__sekiro_seq__</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">			if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">o</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">action</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">				var</span><span style="color:#E06C75;"> n</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> o</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">action</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">				if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">handlers</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">n</span><span style="color:#ABB2BF;">]) {</span></span>
<span class="line"><span style="color:#C678DD;">					var</span><span style="color:#E06C75;"> s</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">handlers</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">n</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#E06C75;">						i</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">					try</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">						s</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#E06C75;">							o</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#C678DD;">							function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">								try</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">									i</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">sendSuccess</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">t</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">e</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">								} </span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">e</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">									i</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">sendFailed</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">t</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;e:&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> e</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">								}</span></span>
<span class="line"><span style="color:#ABB2BF;">							},</span></span>
<span class="line"><span style="color:#C678DD;">							function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">								i</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">sendFailed</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">t</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">e</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">							}</span></span>
<span class="line"><span style="color:#ABB2BF;">						);</span></span>
<span class="line"><span style="color:#ABB2BF;">					} </span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">e</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">						console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;error: &quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> e</span><span style="color:#ABB2BF;">), </span><span style="color:#E5C07B;">i</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">sendFailed</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">t</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;:&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> e</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">					}</span></span>
<span class="line"><span style="color:#ABB2BF;">				} </span><span style="color:#C678DD;">else</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">sendFailed</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">t</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;no action handler: &quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> n</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &quot; defined&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			} </span><span style="color:#C678DD;">else</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">sendFailed</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">t</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;need request param {action}&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">		}),</span></span>
<span class="line"><span style="color:#ABB2BF;">		(</span><span style="color:#E5C07B;">SekiroClient</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">sendSuccess</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">o</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> t</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">			if</span><span style="color:#ABB2BF;"> (</span><span style="color:#98C379;">&quot;string&quot;</span><span style="color:#56B6C2;"> ==</span><span style="color:#C678DD;"> typeof</span><span style="color:#E06C75;"> o</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">				try</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">					t</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> JSON</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">parse</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">o</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">				} </span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">e</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">					(</span><span style="color:#E06C75;">t</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {}).</span><span style="color:#E06C75;">data</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> o</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">				}</span></span>
<span class="line"><span style="color:#C678DD;">			else</span><span style="color:#98C379;"> &quot;object&quot;</span><span style="color:#56B6C2;"> ==</span><span style="color:#C678DD;"> typeof</span><span style="color:#E06C75;"> o</span><span style="color:#C678DD;"> ?</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">t</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> o</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> ((</span><span style="color:#E06C75;">t</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {}).</span><span style="color:#E06C75;">data</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> o</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			(</span><span style="color:#E5C07B;">Array</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">isArray</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">t</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">||</span><span style="color:#98C379;"> &quot;string&quot;</span><span style="color:#56B6C2;"> ==</span><span style="color:#C678DD;"> typeof</span><span style="color:#E06C75;"> t</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">t</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">t</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">code</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;"> }),</span></span>
<span class="line"><span style="color:#E5C07B;">				t</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">code</span><span style="color:#C678DD;"> ?</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">t</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">code</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">t</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">status</span><span style="color:#ABB2BF;">, (</span><span style="color:#E5C07B;">t</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">status</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">)),</span></span>
<span class="line"><span style="color:#ABB2BF;">				(</span><span style="color:#E5C07B;">t</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">__sekiro_seq__</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> e</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> n</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> JSON</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">stringify</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">t</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;response :&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> n</span><span style="color:#ABB2BF;">), </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">send</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">n</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">		}),</span></span>
<span class="line"><span style="color:#ABB2BF;">		(</span><span style="color:#E5C07B;">SekiroClient</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">sendFailed</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">o</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#98C379;">			&quot;string&quot;</span><span style="color:#56B6C2;"> !=</span><span style="color:#C678DD;"> typeof</span><span style="color:#E06C75;"> o</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">o</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> JSON</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">stringify</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">o</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> t</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {};</span></span>
<span class="line"><span style="color:#ABB2BF;">			(</span><span style="color:#E5C07B;">t</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">message</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> o</span><span style="color:#ABB2BF;">), (</span><span style="color:#E5C07B;">t</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">status</span><span style="color:#56B6C2;"> =</span><span style="color:#56B6C2;"> -</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">), (</span><span style="color:#E5C07B;">t</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">__sekiro_seq__</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> e</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">			var</span><span style="color:#E06C75;"> n</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> JSON</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">stringify</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">t</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;sekiro: response :&quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> n</span><span style="color:#ABB2BF;">), </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">send</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">n</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">		}),</span></span>
<span class="line"><span style="color:#ABB2BF;">		(</span><span style="color:#E5C07B;">SekiroClient</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">registerAction</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">o</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">			if</span><span style="color:#ABB2BF;"> (</span><span style="color:#98C379;">&quot;string&quot;</span><span style="color:#56B6C2;"> !=</span><span style="color:#C678DD;"> typeof</span><span style="color:#E06C75;"> e</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">throw</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Error</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;an action must be string&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">			if</span><span style="color:#ABB2BF;"> (</span><span style="color:#98C379;">&quot;function&quot;</span><span style="color:#56B6C2;"> !=</span><span style="color:#C678DD;"> typeof</span><span style="color:#E06C75;"> o</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">throw</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Error</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;a handler must be function&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">			return</span><span style="color:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#E5C07B;">				console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;sekiro: register action: &quot;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> e</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">				(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">handlers</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">e</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> o</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#E5C07B;">				this</span></span>
<span class="line"><span style="color:#ABB2BF;">			);</span></span>
<span class="line"><span style="color:#ABB2BF;">		});</span></span>
<span class="line"><span style="color:#C678DD;">	var</span><span style="color:#E06C75;"> client</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> SekiroClient</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#98C379;">		&quot;ws://127.0.0.1:5612/business-demo/register?group=test_cha11&amp;clientId=&quot;</span><span style="color:#56B6C2;"> +</span></span>
<span class="line"><span style="color:#E5C07B;">			Math</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">random</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">	);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 加密接口1</span></span>
<span class="line"><span style="color:#E5C07B;">	client</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">registerAction</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;encrypt&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">request</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">resolve</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">reject</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">		var</span><span style="color:#E06C75;"> data</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> request</span><span style="color:#ABB2BF;">[</span><span style="color:#98C379;">&quot;data&quot;</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;[+]「油猴加密」明文：&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">		var</span><span style="color:#E06C75;"> cha</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> window</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">_v</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;[+]「油猴加密」密文：&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">cha</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#61AFEF;">		resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">cha</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 解密接口1</span></span>
<span class="line"><span style="color:#E5C07B;">	client</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">registerAction</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;decode&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">request</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">resolve</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">reject</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">		var</span><span style="color:#E06C75;"> data</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> request</span><span style="color:#ABB2BF;">[</span><span style="color:#98C379;">&quot;data&quot;</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;[+]「油猴解密」密文：&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">		var</span><span style="color:#E06C75;"> chaa</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> window</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">_h</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;[+]「油猴解密」明文：&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">chaa</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#61AFEF;">		resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">chaa</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"><span style="color:#ABB2BF;">})();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br></div></div><h3 id="实战" tabindex="-1">实战 <a class="header-anchor" href="#实战" aria-label="Permalink to &quot;实战&quot;">​</a></h3><h4 id="脚本简单演示" tabindex="-1">脚本简单演示 <a class="header-anchor" href="#脚本简单演示" aria-label="Permalink to &quot;脚本简单演示&quot;">​</a></h4><blockquote><p>❝</p><p>接下来我们通过一个简单的示例，初步的了解并应用以上的内容，由于是教你偷懒的教程，so 这边直接使用最快捷的方式进行操作。</p></blockquote><h5 id="例子-1-寻找加密位置「hookscript-js」" tabindex="-1">例子 1:寻找加密位置「HookScript.js」 <a class="header-anchor" href="#例子-1-寻找加密位置「hookscript-js」" aria-label="Permalink to &quot;例子 1:寻找加密位置「HookScript.js」&quot;">​</a></h5><p>首先我们使用 HookScript.js 脚本快速定位发送请求的位置，此处我们选择方式 4:</p><p><img src="`+o+'" alt="图片"></p><p><img src="'+t+'" alt="图片"></p><p>相同密码多次重复登陆但其值不一样可判断其加盐了</p><p><img src="'+e+'" alt="图片"></p><p>点击堆栈 nfn，然后下断点逐步调试，最终获得加密位置，然后可根据该加密流程写对应的脚本进行后续的渗透测试等操作。</p><p><img src="'+r+`" alt="图片"></p><h5 id="例子-2-jsrpc-主动调用「jsrpc-js」" tabindex="-1">例子 2:jsrpc 主动调用「jsrpc.js」 <a class="header-anchor" href="#例子-2-jsrpc-主动调用「jsrpc-js」" aria-label="Permalink to &quot;例子 2:jsrpc 主动调用「jsrpc.js」&quot;">​</a></h5><h6 id="启动-sekiro" tabindex="-1">启动 sekiro <a class="header-anchor" href="#启动-sekiro" aria-label="Permalink to &quot;启动 sekiro&quot;">​</a></h6><blockquote><p>❝</p><p>项目地址：<a href="https://sekiro.iinti.cn/sekiro-doc" target="_blank" rel="noreferrer">https://sekiro.iinti.cn/sekiro-doc</a></p></blockquote><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># win 运行</span></span>
<span class="line"><span style="color:#61AFEF;">bin/sekiro.bat</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># linux 运行</span></span>
<span class="line"><span style="color:#61AFEF;">bin/sekiro.sh</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># mac 运行</span></span>
<span class="line"><span style="color:#61AFEF;">bin/sekiro</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><img src="`+c+'" alt="图片"></p><p>浏览器加载脚本，为方便，所以写成了油猴脚本<code>jsrpc.js</code>，加载油猴脚本</p><p><img src="'+B+'" alt="图片"></p><h5 id="登陆暴力实战「yakit-sekiro-油猴」" tabindex="-1">登陆暴力实战「yakit+sekiro+油猴」 <a class="header-anchor" href="#登陆暴力实战「yakit-sekiro-油猴」" aria-label="Permalink to &quot;登陆暴力实战「yakit+sekiro+油猴」&quot;">​</a></h5><p>本例子：</p><p><img src="'+y+'" alt="图片"></p><p>配置完成后启用，并测试：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">http://127.0.0.1:5612/business-demo/invoke?group</span><span style="color:#98C379;">=xxxxxxxx</span><span style="color:#ABB2BF;">&amp;</span><span style="color:#E06C75;">action</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">login</span><span style="color:#ABB2BF;">&amp;</span><span style="color:#E06C75;">pwd</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">``</span><span style="color:#ABB2BF;">&lt;明文&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+i+'" alt="图片"></p><p>使用 yak 进行暴力破解</p><blockquote><p>❝</p><p>官方教程：<a href="https://www.yaklang.io/products/Web%20Fuzzer/fuzz-sequence" target="_blank" rel="noreferrer">https://www.yaklang.io/products/Web Fuzzer/fuzz-sequence</a></p></blockquote><p>请求包 1 配置：</p><p><img src="'+F+'" alt="图片"></p><p>请求包 2 配置：</p><p><img src="'+b+'" alt="图片"></p><p>开始执行，即可对密码进行暴力破解，以下为效果演示</p><p><img src="'+A+'" alt="图片"></p><h3 id="拓展资料" tabindex="-1">拓展资料 <a class="header-anchor" href="#拓展资料" aria-label="Permalink to &quot;拓展资料&quot;">​</a></h3><p>sekiro 官方手册：<a href="https://sekiro.iinti.cn/sekiro-doc" target="_blank" rel="noreferrer">https://sekiro.iinti.cn/sekiro-doc</a></p><p>Chrome 高阶调试指南：<a href="https://zhuanlan.zhihu.com/p/62177097" target="_blank" rel="noreferrer">https://zhuanlan.zhihu.com/p/62177097</a></p><p>项目地址：<a href="https://github.com/Cha111Ng1/Tampermonkey_cha11" target="_blank" rel="noreferrer">https://github.com/Cha111Ng1/Tampermonkey_cha11</a></p>',60),E=[C];function m(D,h,d,f,q,g){return a(),n("div",null,E)}const w=s(u,[["render",m]]);export{_ as __pageData,w as default};
