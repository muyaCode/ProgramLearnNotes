import{_ as s,c as a,o as n,a3 as e}from"./chunks/framework.zGi9i9Bf.js";const p="/ProgramLearnNotes/assets/640-489489.DnyKYAeW.webp",l="/ProgramLearnNotes/assets/640-1715763453844-12.C-fiUoZp.webp",r="/ProgramLearnNotes/assets/640-1715763453844-13.DmLJfFy6.webp",o="/ProgramLearnNotes/assets/640-1715763453844-14.D-uaFq3Z.webp",i="/ProgramLearnNotes/assets/640-1715763453844-15.D9FmTQ58.webp",t="/ProgramLearnNotes/assets/640-1715763453844-16.BDBhI2Sk.webp",c="/ProgramLearnNotes/assets/640-1715763453844-17.qZTM3RO9.webp",d="/ProgramLearnNotes/assets/640-1715763453844-18.BXiytx0R.webp",b="/ProgramLearnNotes/assets/640-1715763453844-19.BHLpzdbj.webp",u="/ProgramLearnNotes/assets/640-1715763453845-20.Duqrz9Yv.webp",m="/ProgramLearnNotes/assets/640-1715763453845-21.Dx-CpoD9.webp",y="/ProgramLearnNotes/assets/640-1715763453845-22.wdml9bYG.webp",h="/ProgramLearnNotes/assets/640-1715763453845-23.GsYJH3kT.webp",v="/ProgramLearnNotes/assets/640-1715763453845-24.DbyArAY4.webp",g="/ProgramLearnNotes/assets/640-1715763453845-25.EylvobqP.webp",C="/ProgramLearnNotes/assets/640-1715763453845-26.CW7ojxom.webp",F="/ProgramLearnNotes/assets/640-1715763453845-27.DVhrwYBV.webp",_="/ProgramLearnNotes/assets/640-1715763453845-28.DWJJH4nZ.webp",P="/ProgramLearnNotes/assets/640-1715763453845-29.B2CxmY7_.webp",w="/ProgramLearnNotes/assets/640-1715763453845-30.DMJ57jWh.webp",k="/ProgramLearnNotes/assets/640-1715763453845-31.Bf4F5kM7.webp",W=JSON.parse('{"title":"基于Linux内核的VPN工具","description":"","frontmatter":{},"headers":[],"relativePath":"Document/网络安全/【思路】/基于Linux内核的VPN工具.md","filePath":"Document/网络安全/【思路】/基于Linux内核的VPN工具.md","lastUpdated":1717759497000}'),A={name:"Document/网络安全/【思路】/基于Linux内核的VPN工具.md"},x=e(`<h1 id="基于linux内核的vpn工具" tabindex="-1">基于Linux内核的VPN工具 <a class="header-anchor" href="#基于linux内核的vpn工具" aria-label="Permalink to &quot;基于Linux内核的VPN工具&quot;">​</a></h1><p>wireguard工具在linux内核5.6版本中已合并，它相对于其他VPN软件来说，使用更加方便，运行速度也更快，支持不同类型的终端设备，重点还可以在手机端上使用。</p><h2 id="_1-测试环境" tabindex="-1">1. 测试环境 <a class="header-anchor" href="#_1-测试环境" aria-label="Permalink to &quot;1. 测试环境&quot;">​</a></h2><p>我的测试环境使用一台云服务器测试，用于部署WireGuard工具。</p><p>操作系统：CentOS7.6；</p><p>关闭SELinux服务；</p><h3 id="_1-1-配置阿里源" tabindex="-1">1.1 配置阿里源 <a class="header-anchor" href="#_1-1-配置阿里源" aria-label="Permalink to &quot;1.1 配置阿里源&quot;">​</a></h3><p>配置阿里的YUM源：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">wget</span><span style="color:#D19A66;"> -O</span><span style="color:#98C379;"> /etc/yum.repos.d/CentOS-Base.repo</span><span style="color:#98C379;"> https://mirrors.aliyun.com/repo/Centos-7.repo</span></span>
<span class="line"><span style="color:#61AFEF;">wget</span><span style="color:#D19A66;"> -O</span><span style="color:#98C379;"> /etc/yum.repos.d/epel.repo</span><span style="color:#98C379;"> https://mirrors.aliyun.com/repo/epel-7.repo</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>操作前可以先备份一下默认的YUM源文件；</p><h3 id="_1-2-转发配置" tabindex="-1">1.2 转发配置 <a class="header-anchor" href="#_1-2-转发配置" aria-label="Permalink to &quot;1.2 转发配置&quot;">​</a></h3><p>（1）服务器端开启转发</p><p>vim /etc/sysctl.conf</p><p>#文档末尾添加</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>net.ipv4.ip_forward = 1</span></span>
<span class="line"><span>net.ipv4.conf.all.proxy_arp = 1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>将配置内容写入内核：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>sysctl -p</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>设置IP地址伪装(NAT)：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>systemctl start firewalld</span></span>
<span class="line"><span>systemctl enable firewalld</span></span>
<span class="line"><span>firewall-cmd --zone=public --add-masquerade --permanent</span></span>
<span class="line"><span>firewall-cmd --reload</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_1-3-逻辑拓扑图" tabindex="-1">1.3 逻辑拓扑图 <a class="header-anchor" href="#_1-3-逻辑拓扑图" aria-label="Permalink to &quot;1.3 逻辑拓扑图&quot;">​</a></h3><p><img src="`+p+`" alt="图片"></p><p>测试目的使所有ECS云服务器可以与VPN Client01通过指定的内网地址相互通信；</p><h2 id="_2-安装配置wireguard" tabindex="-1">2. 安装配置WireGuard <a class="header-anchor" href="#_2-安装配置wireguard" aria-label="Permalink to &quot;2. 安装配置WireGuard&quot;">​</a></h2><h3 id="_2-1-安装wireguard" tabindex="-1">2.1 安装WireGuard <a class="header-anchor" href="#_2-1-安装wireguard" aria-label="Permalink to &quot;2.1 安装WireGuard&quot;">​</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">yum</span><span style="color:#98C379;"> install</span><span style="color:#98C379;"> elrepo-release</span></span>
<span class="line"><span style="color:#61AFEF;">yum</span><span style="color:#98C379;"> install</span><span style="color:#98C379;"> yum-plugin-elrepo</span></span>
<span class="line"><span style="color:#61AFEF;">yum</span><span style="color:#98C379;"> install</span><span style="color:#98C379;"> kmod-wireguard</span><span style="color:#98C379;"> wireguard-tools</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>安装完成后需要重启WireGuard服务器，检查WireGuard的安装版本：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">wg</span><span style="color:#D19A66;"> --version</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="`+l+'" alt="图片"></p><h3 id="_2-2-生成公私钥" tabindex="-1">2.2 生成公私钥 <a class="header-anchor" href="#_2-2-生成公私钥" aria-label="Permalink to &quot;2.2 生成公私钥&quot;">​</a></h3><p>进入配置文件目录：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#56B6C2;">cd</span><span style="color:#98C379;"> /etc/wireguard/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>创建服务端的公私钥:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">wg</span><span style="color:#98C379;"> genkey</span><span style="color:#ABB2BF;"> | </span><span style="color:#61AFEF;">tee</span><span style="color:#98C379;"> privatekey-server</span><span style="color:#ABB2BF;"> | </span><span style="color:#61AFEF;">wg</span><span style="color:#98C379;"> pubkey</span><span style="color:#ABB2BF;"> &gt; </span><span style="color:#98C379;">publickey-server</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>创建客户端端的公私钥:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">wg</span><span style="color:#98C379;"> genkey</span><span style="color:#ABB2BF;"> | </span><span style="color:#61AFEF;">tee</span><span style="color:#98C379;"> privatekey-client</span><span style="color:#ABB2BF;"> | </span><span style="color:#61AFEF;">wg</span><span style="color:#98C379;"> pubkey</span><span style="color:#ABB2BF;"> &gt; </span><span style="color:#98C379;">publickey-client</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+r+`" alt="图片"></p><p>执行完命令后，会在执行命令的当前文件夹自动生成4个文件。</p><h3 id="_2-3-创建配置文件" tabindex="-1">2.3 创建配置文件 <a class="header-anchor" href="#_2-3-创建配置文件" aria-label="Permalink to &quot;2.3 创建配置文件&quot;">​</a></h3><p>vim /etc/wireguard/vpnserver.conf</p><p>#增加内容如下</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">[Interface]</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># Name = vpnserver</span></span>
<span class="line"><span style="color:#61AFEF;">Address</span><span style="color:#98C379;"> =</span><span style="color:#98C379;"> 192.168.10.1/24</span></span>
<span class="line"><span style="color:#61AFEF;">ListenPort</span><span style="color:#98C379;"> =</span><span style="color:#D19A66;"> 51820</span></span>
<span class="line"><span style="color:#61AFEF;">PrivateKey</span><span style="color:#98C379;"> =</span><span style="color:#98C379;"> IOOjo3Ka836LYXQLmTz9ZekW6FLbKOb/LQL1yrvBt2w=</span></span>
<span class="line"><span style="color:#ABB2BF;">[Peer]</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># Name = client01</span></span>
<span class="line"><span style="color:#61AFEF;">PublicKey</span><span style="color:#98C379;"> =</span><span style="color:#98C379;"> bC4QKdgoZ+1ztarok1jpcIvo5s2lbJYr/RX/PALntQc=</span></span>
<span class="line"><span style="color:#61AFEF;">AllowedIPs</span><span style="color:#98C379;"> =</span><span style="color:#98C379;"> 192.168.10.2/32</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><img src="`+o+`" alt="图片"></p><p>参数说明：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">[Interface]：定义当前节点的配置</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># Name：这是 INI 语法中的标准注释，用于展示该配置部分属于哪个节点。</span></span>
<span class="line"><span style="color:#61AFEF;">Address：定义当前节点应该对哪个地址范围进行路由。如果是常规的客户端，则将其设置为节点本身的单个</span><span style="color:#98C379;"> IP（使用</span><span style="color:#98C379;"> CIDR</span><span style="color:#98C379;"> 指定，例如</span><span style="color:#98C379;"> 192.168.168.10/32）；如果是中继服务器，则将其设置为可路由的子网范围。</span></span>
<span class="line"><span style="color:#61AFEF;">例如：</span></span>
<span class="line"><span style="color:#61AFEF;">常规客户端，只路由自身的流量：Address</span><span style="color:#98C379;"> =</span><span style="color:#98C379;"> 192.168.100.1/32</span></span>
<span class="line"><span style="color:#61AFEF;">中继服务器，可以将流量转发到其他节点（peer）：Address</span><span style="color:#98C379;"> =</span><span style="color:#98C379;"> 192.168.100.0/24</span></span>
<span class="line"><span style="color:#61AFEF;">这个地址是用于VPN连接的，不要与服务器的私网IP地址一样。</span></span>
<span class="line"><span style="color:#61AFEF;">ListenPort：当前节点是中继服务器时，需要通过该参数指定端口来监听传入</span><span style="color:#98C379;"> VPN</span><span style="color:#98C379;"> 连接，默认端口号是51820。常规客户端不需要此选项。</span></span>
<span class="line"><span style="color:#61AFEF;">注意在系统防火墙和服务器安全组中放行该端口。大部分连不通都是端口原因。</span></span>
<span class="line"><span style="color:#61AFEF;">PrivateKey：当前节点的私钥，所有节点（包括中继服务器）都必须设置。不可与其他服务器共用。</span></span>
<span class="line"><span style="color:#ABB2BF;">[Peer]：定义对等节点（其他节点）的配置。可以有多个。</span></span>
<span class="line"><span style="color:#61AFEF;">中继服务器必须将所有的节点（除了自身节点）定义为对等节点（peer）。其他的节点只需定义中继服务器作为对等节点（peer）。</span></span>
<span class="line"><span style="color:#61AFEF;">PublicKey：对等节点（peer）的公钥，所有节点（包括中继服务器）都必须设置。</span></span>
<span class="line"><span style="color:#61AFEF;">AllowedIPs：如果对等节点（peer）是常规的客户端，则将其设置为节点本身的单个</span><span style="color:#98C379;"> IP；如果对等节点（peer）是中继服务器，则将其设置为可路由的子网范围。可以指定多个</span><span style="color:#98C379;"> IP</span><span style="color:#98C379;"> 或子网范围。该字段也可以指定多次。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>这个地址也是用于VPN连接的，不要与客户端的私网IP地址一样。</p><h3 id="_2-4-启动server节点" tabindex="-1">2.4 启动server节点 <a class="header-anchor" href="#_2-4-启动server节点" aria-label="Permalink to &quot;2.4 启动server节点&quot;">​</a></h3><p>语法：<em>wg-quick up [vpn配置文件中的名称]</em></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">wg-quick</span><span style="color:#98C379;"> up</span><span style="color:#98C379;"> vpnserver</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="`+i+'" alt="图片"></p><p>启动后会生成名为vpnserver的网卡：</p><p><img src="'+t+'" alt="图片"></p><p>自动生成路由条目：</p><p><img src="'+c+'" alt="图片"></p><p>注意，服务启动后，监控的是UDP端口：</p><p><img src="'+d+`" alt="图片"></p><p>停止服务使用：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">wg-quick</span><span style="color:#98C379;"> down</span><span style="color:#98C379;"> vpnserver</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_2-5-配置防火墙" tabindex="-1">2.5 配置防火墙 <a class="header-anchor" href="#_2-5-配置防火墙" aria-label="Permalink to &quot;2.5 配置防火墙&quot;">​</a></h3><p>把udp端口51820放通：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">firewall-cmd</span><span style="color:#D19A66;"> --zone=public</span><span style="color:#D19A66;"> --permanent</span><span style="color:#D19A66;"> --add-port=51820/udp</span></span>
<span class="line"><span style="color:#61AFEF;">firewall-cmd</span><span style="color:#D19A66;"> --reload</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="_3-安装客户端" tabindex="-1"><strong>3. 安装客户端</strong> <a class="header-anchor" href="#_3-安装客户端" aria-label="Permalink to &quot;**3. 安装客户端**&quot;">​</a></h2><p>客户端为Windows 10操作系统，客户端：wireguard-amd64-0.4.11.msi</p><p>客户端下载地址：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">https://git.zx2c4.com/wireguard-windows/snapshot/wireguard-windows-0.4.11.zip</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>其他版本下载地址：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">https://git.zx2c4.com/wireguard-windows</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>GitHub地址：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">https://github.com/WireGuard</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>运行后会自动安装：</p><p><img src="`+b+'" alt="图片"></p><p>默认安装目录：C:\\Program Files\\WireGuard</p><h3 id="_3-1-新建空隧道" tabindex="-1">3.1 新建空隧道 <a class="header-anchor" href="#_3-1-新建空隧道" aria-label="Permalink to &quot;3.1 新建空隧道&quot;">​</a></h3><p><img src="'+u+`" alt="图片"></p><p>名称填写：client01，然后把以下内容粘贴进入：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">[Interface]</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># Name = client01</span></span>
<span class="line"><span style="color:#61AFEF;">Address</span><span style="color:#98C379;"> =</span><span style="color:#98C379;"> 192.168.10.2/32</span></span>
<span class="line"><span style="color:#61AFEF;">PrivateKey</span><span style="color:#98C379;"> =</span><span style="color:#98C379;"> aM8nqMI2Vk7iL34RLFTOltg1JqMcWdDkxONvmWxJ/GQ=</span></span>
<span class="line"><span style="color:#ABB2BF;">[Peer]</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># Name = vpnserver</span></span>
<span class="line"><span style="color:#61AFEF;">PublicKey</span><span style="color:#98C379;"> =</span><span style="color:#98C379;"> W1UTRpSVySvtEqdOfElOLnKvtR8826j48OH7oI/QSCk=</span></span>
<span class="line"><span style="color:#61AFEF;">Endpoint</span><span style="color:#98C379;"> =</span><span style="color:#98C379;"> x.x.x.x:51820</span></span>
<span class="line"><span style="color:#61AFEF;">AllowedIPs</span><span style="color:#98C379;"> =</span><span style="color:#98C379;"> 192.168.10.0/24,192.168.100.0/24</span></span>
<span class="line"><span style="color:#61AFEF;">PersistentKeepalive</span><span style="color:#98C379;"> =</span><span style="color:#D19A66;"> 25</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><img src="`+m+`" alt="图片"></p><p>配置说明，跟vpnserver节点配置相比，有以下不同之处：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">[Interface]：Address设置的单一IP，表示当前节点的IP。去掉了ListenPort项（当前节点是中继服务器时才需要）；PrivateKey填写的是client的privatekey文件中的内容。</span></span>
<span class="line"><span style="color:#ABB2BF;">[Peer]：增加了Endpoint项，该项通常指定中继服务器的公网IP，当然有稳定公网 IP 的节点也可以指定。PublicKey填写的是vpnserver的publickey文件中的内容；PersistentKeepalive = 25表示每隔 25 秒发送一次 ping 来检查并维持连接（如果本节点没有固定的公网IP，必须指定）。</span></span>
<span class="line"><span style="color:#61AFEF;">192.168.100.0/24是服务器内网其他客户端的网段，用于在客户端上生成路由条目；</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><img src="`+y+'" alt="图片"></p><p>点击连接：</p><p><img src="'+h+'" alt="图片"></p><p>连接成功后会提示已连接：</p><p><img src="'+v+'" alt="图片"></p><p>在客户端上查看路由条件，执行命令：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">route</span><span style="color:#98C379;"> print</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+g+'" alt="图片"></p><p>可以看到两组明细路由；</p><h3 id="_3-2-在服务器查看连接状态" tabindex="-1">3.2 在服务器查看连接状态 <a class="header-anchor" href="#_3-2-在服务器查看连接状态" aria-label="Permalink to &quot;3.2 在服务器查看连接状态&quot;">​</a></h3><p>在VPN服务器上可以查看到客户端的连接状态：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">wg</span><span style="color:#98C379;"> show</span><span style="color:#98C379;"> vpnserver</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+C+'" alt="图片"></p><h3 id="_3-3-在客户上测试" tabindex="-1">3.3 在客户上测试 <a class="header-anchor" href="#_3-3-在客户上测试" aria-label="Permalink to &quot;3.3 在客户上测试&quot;">​</a></h3><p>在客户端上ping服务器VPN端口IP地址：</p><p><img src="'+F+'" alt="图片"></p><p>从客户端到服务端访问正常；</p><p>ping服务器内部网段IP：</p><p><img src="'+_+'" alt="图片"></p><p>VPN服务器流量转发已经生效，可正常访问。</p><h3 id="_3-4-在服务器端ping" tabindex="-1">3.4 在服务器端ping <a class="header-anchor" href="#_3-4-在服务器端ping" aria-label="Permalink to &quot;3.4 在服务器端ping&quot;">​</a></h3><p>在VPN server上ping客户端：</p><p><img src="'+P+'" alt="图片"></p><p>在VPN Server后端的客户端上ping：</p><p><img src="'+w+`" alt="图片"></p><h2 id="_4-将服务设置为后台运行" tabindex="-1">4. 将服务设置为后台运行 <a class="header-anchor" href="#_4-将服务设置为后台运行" aria-label="Permalink to &quot;4. 将服务设置为后台运行&quot;">​</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">systemctl</span><span style="color:#98C379;"> enable</span><span style="color:#98C379;"> wg-quick@vpnserver</span></span>
<span class="line"><span style="color:#61AFEF;">systemctl</span><span style="color:#98C379;"> start</span><span style="color:#98C379;"> wg-quick@vpnserver</span></span>
<span class="line"><span style="color:#61AFEF;">systemctl</span><span style="color:#98C379;"> status</span><span style="color:#98C379;"> wg-quick@vpnserver</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><img src="`+k+'" alt="图片"></p>',106),E=[x];function B(N,f,q,L,I,D){return n(),a("div",null,E)}const K=s(A,[["render",B]]);export{W as __pageData,K as default};
