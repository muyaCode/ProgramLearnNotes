import{_ as a,c as s,o,a3 as t}from"./chunks/framework.zGi9i9Bf.js";const n="/ProgramLearnNotes/assets/640.DNjcWHm9.webp",e="/ProgramLearnNotes/assets/640-1713527711870-93.BaXY0Uv4.webp",r="/ProgramLearnNotes/assets/640-1713527711870-94.ClV3xRGa.webp",l="/ProgramLearnNotes/assets/640-1713527711870-95.BsqLHDRP.gif",g=JSON.parse('{"title":"开源的C-C+包管理工具","description":"","frontmatter":{},"headers":[],"relativePath":"Document/C-C++/开源的C-C+包管理工具.md","filePath":"Document/C-C++/开源的C-C+包管理工具.md","lastUpdated":1717759497000}'),p={name:"Document/C-C++/开源的C-C+包管理工具.md"},c=t('<h1 id="开源的c-c-包管理工具" tabindex="-1">开源的C-C+包管理工具 <a class="header-anchor" href="#开源的c-c-包管理工具" aria-label="Permalink to &quot;开源的C-C+包管理工具&quot;">​</a></h1><p>包管理器可以帮助你更方便地安装依赖关系，并决定所安装的版本，提高你的开发幸福感。许多语言都有自己的包管理器，像 Node.js 的 npm/yarn、Rust 的 Cargo、Python 的 pip 等等。当然，C/C++ 也有它自己的包管理器！</p><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h2><p>Conan-Center：<a href="https://bintray.com/conan/conan-center" target="_blank" rel="noreferrer">https://bintray.com/conan/conan-center</a></p><p>Quick Install：<a href="https://github.com/LoopPerfect/buckaroo#quick-install" target="_blank" rel="noreferrer">https://github.com/LoopPerfect/buckaroo#quick-install</a></p><p>Quick Start：<a href="https://github.com/microsoft/vcpkg#quick-start" target="_blank" rel="noreferrer">https://github.com/microsoft/vcpkg#quick-start</a></p><h2 id="_1-conan" tabindex="-1">1.Conan <a class="header-anchor" href="#_1-conan" aria-label="Permalink to &quot;1.Conan&quot;">​</a></h2><ul><li>GitHub 项目地址：<a href="https://github.com/conan-io/conan" target="_blank" rel="noreferrer">https://github.com/conan-io/conan</a></li><li>Star 数：3k</li><li>文档：<a href="https://docs.conan.io/en/latest/" target="_blank" rel="noreferrer">https://docs.conan.io/en/latest/</a></li></ul><p>首先出场的是 Conan（注意，不是柯南！），一个用 Python 编写的 C/C++ 包管理器。它是完全分散的，你可以自己托管服务器中的包。它适用于<strong>所有平台</strong>，包括 Linux、OS X、Windows、Solaris、FreeBSD、嵌入式和交叉编译、docker、WSL。它可以与任何构建系统集成，为 CMake、MSBuild、Makefiles 等工具提供了经过测试的支持。除此之外，它还获得了奔驰、华为等大公司用户。你还可以在 <strong>Conan-Center</strong>**[1]** 寻找或分享你的 C/C++ 包。</p><p>想要安装 Conan 也很简单：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">$</span><span style="color:#98C379;"> pip</span><span style="color:#98C379;"> install</span><span style="color:#98C379;"> conan</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+n+`" alt="图片"></p><h2 id="_2-buckaroo" tabindex="-1">2.Buckaroo <a class="header-anchor" href="#_2-buckaroo" aria-label="Permalink to &quot;2.Buckaroo&quot;">​</a></h2><ul><li>GitHub 项目地址：<a href="https://github.com/LoopPerfect/buckaroo" target="_blank" rel="noreferrer">https://github.com/LoopPerfect/buckaroo</a></li><li>Star 数：600</li><li>文档：<a href="https://github.com/LoopPerfect/buckaroo/wiki" target="_blank" rel="noreferrer">https://github.com/LoopPerfect/buckaroo/wiki</a></li></ul><p>这个 C++ 包管理器是使用 F# 语言开发的。它的独特之处就是直接从 GitHub、BitBucket、GitLab、托管的 Git 和 HTTP 中提取依赖项。同样的，它也是完全分散的，没有中央服务器。Buckaroo 使用 TOML 配置文件。</p><p>安装方法详见 <a href="https://github.com/LoopPerfect/buckaroo#quick-install" target="_blank" rel="noreferrer">Quick Install</a>。</p><p>它的工作流大概是这样的：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 初始化项目文件</span></span>
<span class="line"><span style="color:#61AFEF;">$</span><span style="color:#98C379;"> buckaroo</span><span style="color:#98C379;"> init</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 安装依赖</span></span>
<span class="line"><span style="color:#61AFEF;">$</span><span style="color:#98C379;"> buckaroo</span><span style="color:#98C379;"> add</span><span style="color:#98C379;"> github.com/buckaroo-pm/boost-thread@branch=master</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 运行你的代码</span></span>
<span class="line"><span style="color:#61AFEF;">$</span><span style="color:#98C379;"> buck</span><span style="color:#98C379;"> run</span><span style="color:#98C379;"> :my-app</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><img src="`+e+'" alt="图片"></p><h2 id="_3-vcpkg" tabindex="-1">3.vcpkg <a class="header-anchor" href="#_3-vcpkg" aria-label="Permalink to &quot;3.vcpkg&quot;">​</a></h2><ul><li>GitHub 项目地址：<a href="https://github.com/microsoft/vcpkg" target="_blank" rel="noreferrer">https://github.com/microsoft/vcpkg</a></li><li>Star 数：6k</li><li>文档：<a href="https://vcpkg.readthedocs.io/" target="_blank" rel="noreferrer">https://vcpkg.readthedocs.io/</a></li></ul><p>vcpkg 是由微软爸爸开发的支持 Windows、Linux、Mac OS 的 C++ 库管理器，解决了 Windows 下<strong>常用依赖包</strong>的管理问题！它方便与 Visual Studio 集成，你可以使用 <code>vcpkg search</code> 搜索可用的包。它也可以从 Bitbucket、GitHub、GitLab 等获取包。</p><p>安装方法详见 <strong>Quick Start</strong>**[3]**。</p><h2 id="_4-clib" tabindex="-1">4.clib <a class="header-anchor" href="#_4-clib" aria-label="Permalink to &quot;4.clib&quot;">​</a></h2><ul><li>GitHub 项目地址：<a href="https://github.com/clibs/clib" target="_blank" rel="noreferrer">https://github.com/clibs/clib</a></li><li>Star 数：3k</li><li>文档：<a href="https://github.com/clibs/clib/wiki" target="_blank" rel="noreferrer">https://github.com/clibs/clib/wiki</a></li></ul><p>clib 是一个 C 包管理器（非 C++），使用起来较简单。同样的，它也可以直接从 GitHub 上安装库。类似于 Node.js，它也是用 <code>package.json</code> 管理的。下面是一个例子：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{  </span><span style="color:#E06C75;">&quot;name&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;term&quot;</span><span style="color:#ABB2BF;">,  </span><span style="color:#E06C75;">&quot;version&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;0.0.1&quot;</span><span style="color:#ABB2BF;">,  </span><span style="color:#E06C75;">&quot;repo&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;clibs/term&quot;</span><span style="color:#ABB2BF;">,  </span><span style="color:#E06C75;">&quot;description&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;Terminal ansi escape goodies&quot;</span><span style="color:#ABB2BF;">,  </span><span style="color:#E06C75;">&quot;keywords&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;terminal&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;term&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;tty&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;ansi&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;escape&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;colors&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;console&quot;</span><span style="color:#ABB2BF;">],  </span><span style="color:#E06C75;">&quot;license&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;MIT&quot;</span><span style="color:#ABB2BF;">,  </span><span style="color:#E06C75;">&quot;src&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;src/term.c&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;src/term.h&quot;</span><span style="color:#ABB2BF;">]}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+r+'" alt="图片"></p><h2 id="_5-poac" tabindex="-1">5.poac <a class="header-anchor" href="#_5-poac" aria-label="Permalink to &quot;5.poac&quot;">​</a></h2><ul><li>GitHub 项目地址：<a href="https://github.com/poacpm/poac" target="_blank" rel="noreferrer">https://github.com/poacpm/poac</a></li><li>Star 数：341</li><li>文档：<a href="https://doc.poac.pm/en/" target="_blank" rel="noreferrer">https://doc.poac.pm/en/</a></li></ul><p>别看 poac 现在 stars 数量少，它其实很适合新手使用。它具有直观且易于使用的界面（像 npm 和 Cargo 一样）。独特的是，你可以在<strong>不了解</strong> CMake 的情况下使用 poac 开发应用程序和库，专注于学习 C++ 而不会绊倒。作者还计划实现与其他构建系统和包管理器的集成，让你能够无缝切换。</p><p>安装也是一行命令搞定：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">curl</span><span style="color:#D19A66;"> -fsSL</span><span style="color:#98C379;"> https://sh.poac.pm</span><span style="color:#ABB2BF;"> | </span><span style="color:#61AFEF;">bash</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+l+'" alt="图片"></p>',34),i=[c];function u(b,h,d,m,C,y){return o(),s("div",null,i)}const B=a(p,[["render",u]]);export{g as __pageData,B as default};
