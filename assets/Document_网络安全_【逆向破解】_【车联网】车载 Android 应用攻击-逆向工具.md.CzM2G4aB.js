import{_ as a,c as e,o,a3 as r}from"./chunks/framework.zGi9i9Bf.js";const k=JSON.parse('{"title":"【车联网】车载 Android 应用攻击-逆向工具","description":"","frontmatter":{},"headers":[],"relativePath":"Document/网络安全/【逆向破解】/【车联网】车载 Android 应用攻击-逆向工具.md","filePath":"Document/网络安全/【逆向破解】/【车联网】车载 Android 应用攻击-逆向工具.md","lastUpdated":1717759497000}'),t={name:"Document/网络安全/【逆向破解】/【车联网】车载 Android 应用攻击-逆向工具.md"},p=r('<h1 id="【车联网】车载-android-应用攻击-逆向工具" tabindex="-1">【车联网】车载 Android 应用攻击-逆向工具 <a class="header-anchor" href="#【车联网】车载-android-应用攻击-逆向工具" aria-label="Permalink to &quot;【车联网】车载 Android 应用攻击-逆向工具&quot;">​</a></h1><h2 id="静态分析工具" tabindex="-1">静态分析工具 <a class="header-anchor" href="#静态分析工具" aria-label="Permalink to &quot;静态分析工具&quot;">​</a></h2><h3 id="逆向工具" tabindex="-1">逆向工具 <a class="header-anchor" href="#逆向工具" aria-label="Permalink to &quot;逆向工具&quot;">​</a></h3><h4 id="jadx" tabindex="-1">JADX <a class="header-anchor" href="#jadx" aria-label="Permalink to &quot;JADX&quot;">​</a></h4><p>1）逆向工具jadx，最主流的逆向工具，不解释</p><p>下载地址：<a href="https://github.com/skylot/jadx" target="_blank" rel="noreferrer">https://github.com/skylot/jadx</a></p><p>![图片](./【车联网】车载 Android 应用攻击-逆向工具.assets/640.webp)</p><h4 id="gdb" tabindex="-1">GDB <a class="header-anchor" href="#gdb" aria-label="Permalink to &quot;GDB&quot;">​</a></h4><p>GDA 也是一个强大的逆向分析工具。它不仅支持基本的反编译操作 还支持恶意行为检测、隐私泄露检测、漏洞检测、路径求解、打包者识别、变量跟踪分析，解混、Python 和Java 脚本编写、设备内存提取、数据解密和加密等众多功能。另外，它只支持 Windows。</p><p><a href="https://github.com/charles2gan/GDA-android-reversing-Tool" target="_blank" rel="noreferrer">https://github.com/charles2gan/GDA-android-reversing-Tool</a></p><p>![图片](./【车联网】车载 Android 应用攻击-逆向工具.assets/640-1714243502467-806.webp)</p><p>2）是否存在敏感字符串</p><p>检查 APK中是否存在一些敏感的明文字符串，比如Passwords、URL、API、Encryption、 Backdoors、Tokens、Bluetooth UUID。该过程可以使用反编译工具手动搜索，也可以使用以下 自动化工具。</p><h4 id="apkurlgrep" tabindex="-1">apkurlgrep <a class="header-anchor" href="#apkurlgrep" aria-label="Permalink to &quot;apkurlgrep&quot;">​</a></h4><p>地址为 <a href="https://github.com/ndelphit/apkurlgrep%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%B8%AE%E5%8A%A9%E6%89%AB%E6%8F%8F%E5%87%BA" target="_blank" rel="noreferrer">https://github.com/ndelphit/apkurlgrep，可以帮助扫描出</a> APK 中使用的 URL。</p><p>安装步骤如下：</p><ol><li>安装apkurlgrep工具本身</li></ol><p>![图片](./【车联网】车载 Android 应用攻击-逆向工具.assets/640-1714243502467-807.webp)</p><p>![图片](./【车联网】车载 Android 应用攻击-逆向工具.assets/640-1714243502467-808.webp)</p><ol start="2"><li>安装apktool，步骤如下（用的linux平台）</li></ol><ol><li><p>Download the Linux wrapper script. (Right click, Save Link As <code>apktool</code>)</p><p>![图片](./【车联网】车载 Android 应用攻击-逆向工具.assets/640-1714243502468-809.webp)</p></li><li><p>Download the latest version of Apktool.</p><p>![图片](./【车联网】车载 Android 应用攻击-逆向工具.assets/640-1714243502468-810.webp)</p></li><li><p>Rename the downloaded jar to <code>apktool.jar</code>.</p><p>![图片](./【车联网】车载 Android 应用攻击-逆向工具.assets/640-1714243502468-811.webp)</p></li><li><p>Move both <code>apktool.jar</code> and <code>apktool</code> to <code>/usr/local/bin</code>. (root needed)</p><p>![图片](./【车联网】车载 Android 应用攻击-逆向工具.assets/640-1714243502468-812.webp)</p></li><li><p>Make sure both files are executable. ( <code>chmod+x</code>)</p><p>![图片](./【车联网】车载 Android 应用攻击-逆向工具.assets/640-1714243502468-813.webp)</p></li><li><p>Try running <code>apktool</code> via CLI.</p><p>![图片](./【车联网】车载 Android 应用攻击-逆向工具.assets/640-1714243502468-814.webp)</p></li></ol><p>使用方式如下：</p><p>![图片](./【车联网】车载 Android 应用攻击-逆向工具.assets/640-1714243502468-815.webp)</p><h4 id="apkleaks" tabindex="-1">apkleaks <a class="header-anchor" href="#apkleaks" aria-label="Permalink to &quot;apkleaks&quot;">​</a></h4><p>apkleaks，地址为：<a href="https://github.com/dwisiswant0/apkleaks%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%B8%AE%E5%8A%A9%E6%89%AB%E6%8F%8FAPK%E4%B8%AD%E7%9A%84%E5%AF%86" target="_blank" rel="noreferrer">https://github.com/dwisiswant0/apkleaks，可以帮助扫描APK中的密</a> 钥、URI，可以建立自己的规则文件。</p><p>安装如下：</p><p>![图片](./【车联网】车载 Android 应用攻击-逆向工具.assets/640-1714243502468-816.webp)</p><p>使用如下</p><p>![图片](./【车联网】车载 Android 应用攻击-逆向工具.assets/640-1714243502468-817.webp)</p>',29),d=[p];function s(i,l,n,h,c,A){return o(),e("div",null,d)}const b=a(t,[["render",s]]);export{k as __pageData,b as default};
