import{_ as s,c as n,o as a,a3 as l}from"./chunks/framework.zGi9i9Bf.js";const p="/ProgramLearnNotes/assets/640-1714647936152-27.CXltA9-s.webp",o="/ProgramLearnNotes/assets/640-1714647936152-28.BfauaQq9.webp",e="/ProgramLearnNotes/assets/640-1714647936152-29.DLxzFHzt.webp",t="/ProgramLearnNotes/assets/640-1714647936152-30.C5fIZGo9.webp",r="/ProgramLearnNotes/assets/640-1714647936152-31.B4jefaas.webp",c="/ProgramLearnNotes/assets/640-1714647936152-32.Br2tto8G.webp",B="/ProgramLearnNotes/assets/640-1714647936152-33.eaLdGS3c.webp",y="/ProgramLearnNotes/assets/640-1714647936152-34.BSiAyOOR.gif",i="/ProgramLearnNotes/assets/640-1714647936152-35.w6Zd10Na.webp",q=JSON.parse('{"title":"Python 爬虫","description":"","frontmatter":{},"headers":[],"relativePath":"Document/Python/Python爬虫.md","filePath":"Document/Python/Python爬虫.md","lastUpdated":1717759497000}'),A={name:"Document/Python/Python爬虫.md"},F=l('<h1 id="python-爬虫" tabindex="-1">Python 爬虫 <a class="header-anchor" href="#python-爬虫" aria-label="Permalink to &quot;Python 爬虫&quot;">​</a></h1><h1 id="爬虫知识-从入门到精通" tabindex="-1">爬虫知识，从入门到精通 <a class="header-anchor" href="#爬虫知识-从入门到精通" aria-label="Permalink to &quot;爬虫知识，从入门到精通&quot;">​</a></h1><p>网络爬虫（Web Scraping 或 Web Crawling）是一种用于自动化获取网络上信息的技术。这里，我将尽量概述从入门到精通的各个阶段应掌握的知识。</p><h3 id="入门阶段" tabindex="-1">入门阶段 <a class="header-anchor" href="#入门阶段" aria-label="Permalink to &quot;入门阶段&quot;">​</a></h3><ol><li><strong>基础编程知识</strong>：掌握一门编程语言，通常是 Python。</li><li><strong>HTTP 协议基础</strong>：了解 HTTP 请求和响应的基本概念。</li><li><strong>HTML 和 CSS 基础</strong>：理解 DOM 结构，以及如何使用 CSS 选择器。</li><li><strong>基础库和工具</strong>：熟悉如 Requests、BeautifulSoup 或 lxml。</li><li><strong>简单的文本处理</strong>：能够解析和提取需要的信息。</li><li><strong>文件操作</strong>：读写文件，通常是文本或 CSV 格式。</li></ol><h3 id="进阶阶段" tabindex="-1">进阶阶段 <a class="header-anchor" href="#进阶阶段" aria-label="Permalink to &quot;进阶阶段&quot;">​</a></h3><ol><li><strong>JavaScript 基础</strong>：了解如何处理动态网站。</li><li><strong>更高级的库和工具</strong>：如 Selenium、Scrapy 或 Puppeteer。</li><li><strong>API 交互</strong>：了解如何使用 API 获取数据。</li><li><strong>数据存储</strong>：掌握如何使用数据库，通常是 SQL 或 NoSQL。</li><li><strong>数据清洗</strong>：使用 Pandas 或其他工具进行数据处理。</li><li><strong>异常处理</strong>：能够处理各种网络异常和错误。</li><li><strong>爬虫策略</strong>：了解如何避免被封禁，例如设置合适的延迟、使用代理等。</li></ol><h3 id="高级阶段" tabindex="-1">高级阶段 <a class="header-anchor" href="#高级阶段" aria-label="Permalink to &quot;高级阶段&quot;">​</a></h3><ol><li><strong>分布式爬虫</strong>：使用多台机器或云服务来进行爬取。</li><li><strong>反反爬虫策略</strong>：能够处理复杂的反爬机制。</li><li><strong>数据分析与可视化</strong>：使用工具如 Matplotlib、Tableau 或 Power BI 进行数据分析。</li><li><strong>自然语言处理（NLP）</strong>：对抓取的文本数据进行更深入的分析。</li><li><strong>机器学习与图像识别</strong>：用于处理更为复杂的数据形式或验证码。</li><li><strong>流程自动化</strong>：自动化整个数据获取、处理和存储的流程。</li><li><strong>合法与伦理考量</strong>：了解相关法律法规，确保爬虫活动是合法和道德的。</li></ol><h3 id="精通阶段" tabindex="-1">精通阶段 <a class="header-anchor" href="#精通阶段" aria-label="Permalink to &quot;精通阶段&quot;">​</a></h3><ol><li><strong>大数据处理</strong>：能够处理大规模数据的存储和分析。</li><li><strong>实时爬取与分析</strong>：实现几乎实时的数据获取和分析。</li><li><strong>自适应爬虫</strong>：能够自动适应网站结构或内容的变化。</li><li><strong>高级监控与报告</strong>：构建高级的监控系统，及时报告各种指标和可能的问题。</li><li><strong>安全性</strong>：高度关注爬虫和数据存储的安全性问题。</li><li><strong>商业应用与咨询</strong>：能够为企业构建和维护爬虫系统，或提供相关的咨询服务。</li></ol><p>在不同的阶段，除了技术能力之外，对项目管理、团队协作、代码质量等软性技能的掌握也非常重要。而且，随着大数据和 AI 技术的发展，网络爬虫的应用场景和相关技术也在不断演进，持续学习和适应是非常必要的。</p><p>爬取策略是网络爬虫在执行网页抓取任务时所遵循的规则或策略。这些策略决定了爬虫如何从一个页面转到另一个页面，什么时间进行抓取，以及应该抓取哪些内容。以下是几种常见的爬取策略：</p><p><strong>常见的爬虫策略</strong></p><p><strong>深度优先搜索（DFS）</strong></p><p>在这种策略下，爬虫会尽可能深入地遍历一个网站。也就是说，它会从一个页面开始，然后跟踪该页面上的第一个链接，然后继续跟踪找到页面上的第一个链接，如此往复。</p><p><strong>广度优先搜索（BFS）</strong></p><p>在广度优先搜索策略下，爬虫会首先访问初始页面上的所有链接，然后再转向这些链接的页面，依此类推。</p><p><strong>PageRank</strong></p><p>这种策略模仿了谷歌的搜索算法。它不仅考虑页面间的链接，还考虑页面的“重要性”。这通常需要预先计算或者实时更新。</p><p><strong>反向链接策略</strong></p><p>这种策略会查找指向特定页面的所有链接，以确定这个页面的价值或相关性。</p><p><strong>随机遍历</strong></p><p>这种策略不按照任何特定顺序遍历链接，而是随机选择下一个要访问的页面。</p><p><strong>按需爬取</strong></p><p>这是一种更为复杂的策略，通常基于用户需求或预先设定的条件来抓取数据。</p><p><strong>遵守 Robots 协议</strong></p><p>大多数网站都有一个 <code>robots.txt</code> 文件，该文件描述了哪些页面可以抓取，哪些不可以。遵循这些规则是良好网络公民的标志。</p><p><strong>延迟和时间策略</strong></p><p>避免在短时间内发送大量的请求，以免给网站服务器造成负担。</p><p><strong>重试策略</strong></p><p>如果某个页面暂时无法访问，应该设置一个重试策略。</p><p><strong>数据去重</strong></p><p>在多次爬取和更新过程中，需要有策略去除重复的数据。</p><p><strong>用户代理和头信息</strong></p><p>合理设置用户代理和请求头，以模拟不同的浏览器和设备，有时这也是为了遵守网站的使用政策。</p><p><strong>失败恢复</strong></p><p>保存爬虫的状态，以便在出现问题时可以从断点恢复。</p><p><strong>IP 轮换和代理</strong></p><p>为了避免被封锁，一些爬虫会使用多个 IP 地址或代理服务器。</p><p>每种策略都有其优缺点，通常最好的做法是结合多种策略，以适应不同的爬取需求和场景。</p><p><strong>常见的反爬虫策略</strong></p><p>反爬虫策略是一组用于防止或限制自动化网络爬虫（或称为网络蜘蛛、抓取器）访问网站内容的技术和方法。由于爬虫可能导致服务器压力增加、消耗带宽或滥用获取的数据，因此许多网站都会使用一定的反爬虫策略。</p><p>下面是一些常见的反爬虫策略：</p><p><strong>Robots.txt 文件</strong></p><p>通过在网站根目录下放置一个 <code>robots.txt</code> 文件，网站所有者可以指明哪些页面或路径是禁止爬取的。</p><p><strong>用户代理（User-Agent）检测</strong></p><p>服务器会检查请求的用户代理字段，如果判断为爬虫或非常规浏览器，可能会拒绝访问。</p><p><strong>IP 地址限制</strong></p><p>当从同一个 IP 地址来的请求量异常高时，服务器可能会限制或封禁该 IP 地址。</p><p><strong>速率限制</strong></p><p>限制单个用户（通常通过 IP 地址或会话标识符）在特定时间内的请求次数。</p><p><strong>验证码</strong></p><p>在多次连续请求后，或在触发某种模式后，要求用户输入验证码。</p><p><strong>JavaScript 挑战</strong></p><p>一些网站使用 JavaScript 生成页面内容或执行某种计算，然后将结果用于验证。这样做的目的是因为大多数基础爬虫不执行 JavaScript。</p><p><strong>AJAX 数据加载</strong></p><p>数据并不直接嵌入在 HTML 页面中，而是通过 JavaScript 异步加载。这增加了爬虫获取数据的复杂性。</p><p><strong>Cookie 和 Session 检查</strong></p><p>检查请求是否携带了有效的 Cookie 和 Session 信息，如果没有，可能会被视为非法访问。</p><p><strong>Honey Pot</strong></p><p>设置一些对正常用户不可见，但对爬虫可见的“陷阱”链接。如果访问了这些链接，则很可能是爬虫。</p><p><strong>动态改变网页结构</strong></p><p>不定期地改变网页的 HTML 结构和 CSS 选择器，这样基于旧结构编写的爬虫程序将无法正常工作。</p><p><strong>HTTP Header 检查</strong></p><p>除了检查用户代理外，还可以检查其它 HTTP 头信息，如<code>Referer</code>、<code>Origin</code>等，来确定请求是否合法。</p><p><strong>时间戳检查</strong></p><p>验证请求之间的时间间隔，如果过于快速，可能是自动化操作。</p><p><strong>Web Application Firewalls (WAF)</strong></p><p>使用 Web 应用防火墙来识别并阻止爬虫或恶意请求。</p><p>请注意，过度使用反爬虫措施可能会影响网站的用户体验。因此，在实施这些措施时应当权衡各方面的因素。同时，也应注意法律和伦理问题，确保这些措施不违反相关法律规定。</p><p>常见反反爬策略</p><p>反反爬策略是一种用于应对反爬虫机制的手段。这通常涉及模仿人类用户行为、使用更复杂的请求头、设置合适的延迟、使用代理等。然而，值得注意的是，在不具备明确许可的情况下对一个网站使用这些手段可能是违法的，或者至少是不道德的。因此，在应用这些策略之前，一定要仔细阅读并理解目标网站的服务条款。</p><p>以下是一些常用的反反爬策略：</p><p><strong>修改用户代理（User-Agent）</strong></p><p>使用不同的用户代理字符串以模仿不同的浏览器和设备。</p><p><strong>IP 代理和轮换</strong></p><p>使用多个 IP 地址或代理服务以规避 IP 限制。</p><p><strong>请求头定制</strong></p><p>模仿常规浏览器行为，如设置合适的<code>Referer</code>、<code>Accept-Language</code>等 HTTP 头信息。</p><p><strong>遵守 Robots.txt</strong></p><p>虽然这并不是一种反反爬策略，但遵守网站的 <code>robots.txt</code> 文件是合法和道德爬取的基础。</p><p><strong>动态延时</strong></p><p>设置动态的请求间隔时间，尽量模仿人类行为，避免触发速率限制。</p><p><strong>模拟登录和保持会话</strong></p><p>对于需要登录才能访问的网站，模拟登录过程并保持会话。</p><p><strong>JavaScript 执行</strong></p><p>使用如 Selenium、Puppeteer 等工具来执行 JavaScript，以获取动态加载的内容。</p><p><strong>分布式爬虫</strong></p><p>使用多台机器或多个云服务进行爬取，以分散单一点的请求压力。</p><p><strong>分析和适应</strong></p><p>有些网站会定期更改其 HTML 结构或 JavaScript 代码，以阻断爬虫。持续监控并适应这些变化是很重要的。</p><p><strong>验证码处理</strong></p><p>使用图像识别或其他机器学习算法来自动解决验证码。</p><p><strong>数据指纹和哈希避免</strong></p><p>有时服务器通过检测请求参数或页面交互行为的模式来识别爬虫。在这种情况下，可以尝试通过随机化这些信息来避免被检测。</p><p><strong>使用第三方 API 或数据源</strong></p><p>有时候，网站或服务提供了 API，或者有第三方服务提供了相同或类似的数据，合法使用这些 API 通常比爬取网页更为可靠和高效。</p><p><strong>Web 应用防火墙（WAF）绕过</strong></p><p>识别并绕过 Web 应用防火墙的特定规则，这通常涉及对请求头、参数或路径的细微调整。</p><p>请再次注意，这些策略可能触及法律问题，因此在应用之前务必进行适当的法律咨询。</p><h1 id="python-爬虫入门指南" tabindex="-1">Python 爬虫入门指南 <a class="header-anchor" href="#python-爬虫入门指南" aria-label="Permalink to &quot;Python 爬虫入门指南&quot;">​</a></h1><h2 id="_1-python-爬虫概述与基本概念" tabindex="-1">1.Python 爬虫概述与基本概念 <a class="header-anchor" href="#_1-python-爬虫概述与基本概念" aria-label="Permalink to &quot;1.Python 爬虫概述与基本概念&quot;">​</a></h2><p>在如今这个信息爆炸的时代，数据量呈现出井喷式增长，Python 爬虫作为一种获取数据的便捷手段，逐渐成为程序员的必备技能。Python 爬虫，顾名思义，就是利用 Python 编程语言对网络数据进行抓取、解析和处理的技术。它可以帮助我们从网页中提取有用信息，为数据分析和挖掘提供原始数据支持。接下来，我们将分别介绍 Python 爬虫的基本概念、常用工具与库。</p><p>首先，让我们了解一下 Python 爬虫的基本概念。网络爬虫，又称网络蜘蛛，是一种自动获取网页信息的程序。它按照一定的规则和策略，模拟浏览器访问网页，从而获取页面内容。爬虫的核心任务是解决三个问题：如何抓取网页内容、如何解析网页数据以及如何存储和处理获取到的数据。</p><h2 id="_2-python-爬虫工具与库介绍" tabindex="-1">2. Python 爬虫工具与库介绍 <a class="header-anchor" href="#_2-python-爬虫工具与库介绍" aria-label="Permalink to &quot;2. Python 爬虫工具与库介绍&quot;">​</a></h2><p><strong>接下来，我们来介绍一些 Python 爬虫中常用的工具与库。在实际应用中，Python 爬虫主要依赖于以下几个库：</strong></p><ol><li>Requests：一个用于发送 HTTP 请求的库，可以方便地获取网页内容。</li><li>BeautifulSoup：一个用于解析 HTML 和 XML 文档的库，可以轻松地提取页面中的有用信息。</li><li>Scrapy：一个强大的爬虫框架，可以快速地构建定制化的爬虫程序。</li><li>PyQuery：一个基于 jQuery 语法的解析库，适用于处理现代网页结构。</li><li>Selenium：一个可用于模拟浏览器行为的库，支持多种浏览器和操作系统。</li></ol><p>掌握这些库和工具，将有助于提高爬虫开发的效率和稳定性。</p><p><strong>在实际进行 Python 爬虫开发时，还需注意以下几点：</strong></p><ol><li>遵守网站的 robots.txt 协议，遵循合理的爬虫策略，避免对目标网站造成过多负担。</li><li>合理设置爬取间隔，以免触发网站的反爬虫机制。</li><li>使用代理 IP 和用户代理，增加爬虫的隐蔽性。</li><li>针对目标网站的动态加载数据，可以使用 Javascript 钩子或异步请求等技术进行抓取。</li><li>注重数据存储和处理，确保数据的完整性和准确性。</li></ol><p>接下来的部分将详细介绍网络数据抓取方法与技巧、网页解析与数据提取技术、数据存储与处理方法，并通过实战案例与项目实践经验分享，帮助您更好地入门 Python 爬虫。在这个过程中，希望您能够不断积累经验，掌握更多技巧，成为一名出色的 Python 爬虫开发者。</p><h2 id="_3-网络数据抓取方法与技巧" tabindex="-1">3. 网络数据抓取方法与技巧 <a class="header-anchor" href="#_3-网络数据抓取方法与技巧" aria-label="Permalink to &quot;3. 网络数据抓取方法与技巧&quot;">​</a></h2><p><strong>在 Python 爬虫中，网络数据抓取方法与技巧是至关重要的。它们可以帮助我们更有效地获取所需数据，提高爬虫的稳定性和效率。以下是一些常用的网络数据抓取方法与技巧：</strong></p><ol><li>使用 HTTP 请求库（如 Requests）发送请求，获取网页内容。此外，我们还需了解如何处理 HTTP 状态码、设置请求头（User-Agent）以及处理响应内容。</li><li>针对网页的动态加载数据，可以使用 Selenium 模拟浏览器行为，或者使用 Javascript 钩子（如 eval()函数）等技术进行抓取。</li><li>使用代理 IP 和用户代理，以增加爬虫的隐蔽性，避免被目标网站识别和封禁。</li><li>合理设置爬取间隔，遵循网站的 robots.txt 协议，以免对目标网站造成负担。</li><li>处理反爬虫措施，如使用随机 User-Agent、设置请求头中的“Referer”字段等</li></ol><h2 id="_4-网页解析与数据提取技术" tabindex="-1">4. 网页解析与数据提取技术 <a class="header-anchor" href="#_4-网页解析与数据提取技术" aria-label="Permalink to &quot;4. 网页解析与数据提取技术&quot;">​</a></h2><p><strong>在获取到网页内容后，我们需要对其进行解析，提取出有用的数据。这里涉及到两种主要的网页解析方法：</strong></p><p>使用 HTML/XML 解析库（如 BeautifulSoup、PyQuery 等）对网页进行解析。这类库可以轻松地定位到网页中的元素，提取出我们需要的数据。在使用这类库时，了解 HTML/XML 标签和属性至关重要。</p><p><strong>使用 Javascript 解析库（如 SoupSelect、Cheerio 等）处理动态加载的网页数据。这类库可以解析现代网页结构，支持 JavaScript 渲染的内容提取。 此外，在数据提取过程中，我们还需注意以下几点：</strong></p><ol><li>处理网页中的编码问题，如 UTF-8、GBK 等。</li><li>处理乱码和异常情况，如网页内容编码错误、字符串编码转换问题等。</li><li>使用正则表达式或其他文本处理方法，提取网页中的有用信息。</li><li>对于复杂或嵌套的结构，可以使用递归算法或递归解析技术进行处理。</li></ol><p>通过以上网络数据抓取方法与网页解析技术，我们可以更加高效地获取和提取所需数据，为数据分析和挖掘奠定基础。在接下来的部分，我们将介绍数据存储与处理方法，以及实战案例和项目实践经验，帮助您更好地入门 Python 爬虫。</p><h2 id="_5-数据存储与处理方法" tabindex="-1">5. 数据存储与处理方法 <a class="header-anchor" href="#_5-数据存储与处理方法" aria-label="Permalink to &quot;5. 数据存储与处理方法&quot;">​</a></h2><p><strong>在完成网页数据抓取和解析后，我们需要将提取到的数据进行存储和处理。数据存储方法可以根据实际需求和场景进行选择，以下是一些常见的数据存储方法</strong>：</p><p>（1）CSV：适用于结构简单、数据量不大的情况，易于读取和处理。</p><p>（2）Excel：适用于轻度结构化数据存储，支持公式、图表等高级功能。</p><p>（3）JSON：适用于轻量级数据存储，易于传输和解析。</p><p>（4）SQL 数据库：适用于结构复杂、数据量较大的场景，支持查询和关联操作。</p><p><strong>在数据处理方面，我们需要根据实际需求进行数据清洗、转换、统计和分析等操作。以下是一些常用的数据处理方法：</strong></p><p>（1）使用 Python 内置的 NumPy、Pandas 等库进行数据处理和分析。</p><p>（2）使用数据可视化库（如 Matplotlib、Seaborn 等）进行数据可视化展示。</p><p>（3）运用机器学习算法对数据进行挖掘和预测。</p><h2 id="_6-实战案例与项目实践经验分享" tabindex="-1">6.实战案例与项目实践经验分享 <a class="header-anchor" href="#_6-实战案例与项目实践经验分享" aria-label="Permalink to &quot;6.实战案例与项目实践经验分享&quot;">​</a></h2><p>为了帮助您更好地入门 Python 爬虫，这里分享两个实战案例和项目实践经验：</p><p>案例一：爬取豆瓣电影 TOP 250 影评数据 本项目使用 Python 爬虫抓取豆瓣电影 TOP 250 的影评数据，包括电影名称、导演、主演、评分等信息。项目采用 Requests 和 BeautifulSoup 库进行网络数据抓取和解析，使用 Pandas 库进行数据存储和处理。具体实现过程如下：</p><p>（1）分析目标网站的结构，找到影评数据的 URL 和数据模板。</p><p>（2）编写爬虫程序，模拟浏览器访问，获取影评数据。</p><p>（3）对获取到的数据进行解析，提取有用信息，存储为 CSV 文件。</p><p>（4）使用 Pandas 库对数据进行清洗和处理，如去除空值、合并字段等。</p><p>（5）利用数据可视化库对影评数据进行可视化展示。</p><p>案例二：电商网站价格监控系统 本项目旨在监控电商网站（如淘宝、京东等）特定商品的价格变化。项目采用 Python 爬虫定时抓取商品页面信息，使用自然语言处理技术对价格进行提取和分析，实时监控价格波动。项目实践经验如下：</p><p>（1）根据目标网站的页面结构和商品信息模板，编写爬虫程序。</p><p>（2）使用代理 IP 和用户代理，设置合理的爬取间隔，遵循网站的 robots.txt 协议。</p><p>（3）对抓取到的数据进行解析和处理，提取商品价格信息。</p><p>（4）利用 Python 消息队列（如 RabbitMQ）实现爬虫任务调度和结果通知。</p><p>（5）结合机器学习算法，对价格波动进行预测和分析。</p><h1 id="抖音无水印视频-url-地址提取和视频快速下载" tabindex="-1">抖音无水印视频 URL 地址提取和视频快速下载 <a class="header-anchor" href="#抖音无水印视频-url-地址提取和视频快速下载" aria-label="Permalink to &quot;抖音无水印视频 URL 地址提取和视频快速下载&quot;">​</a></h1><h2 id="一、采集背景" tabindex="-1">一、采集背景 <a class="header-anchor" href="#一、采集背景" aria-label="Permalink to &quot;一、采集背景&quot;">​</a></h2><p>本次实验案例是下载抖音某用户下的视频以及视频 URL 地址提取。</p><h2 id="二、需求分析" tabindex="-1">二、需求分析 <a class="header-anchor" href="#二、需求分析" aria-label="Permalink to &quot;二、需求分析&quot;">​</a></h2><h3 id="_2-1、用户主页链接了解" tabindex="-1">2.1、用户主页链接了解 <a class="header-anchor" href="#_2-1、用户主页链接了解" aria-label="Permalink to &quot;2.1、用户主页链接了解&quot;">​</a></h3><p>随便打开一个抖音用户，这里我们打开脱口秀的鼻祖老罗的主页。</p><blockquote><p>交个朋友直播间：<a href="https://www.douyin.com/user/MS4wLjABAAAAlwXCzzm7SmBfdZAsqQ_wVVUbpTvUSX1WC_x8HAjMa3gLb88-MwKL7s4OqlYntX4r" target="_blank" rel="noreferrer">https://www.douyin.com/user/MS4wLjABAAAAlwXCzzm7SmBfdZAsqQ_wVVUbpTvUSX1WC_x8HAjMa3gLb88-MwKL7s4OqlYntX4r</a></p></blockquote><p>注意：上面 user 后面的 id 比较长，以前是数字形式，现在改成这种字母+数字的组合了</p><p>当你从手机抖音上点【分享主页】-【复制链接】后，把链接输入浏览器地址栏里，会发现就自动转换为这个长地址。</p><p>例如：<code>https://v.douyin.com/i2NLeaJr/ 9@7.com :7pm</code>这个是手机里分享出来的链接，粘贴到浏览器后会变成<code>https://www.douyin.com/user/MS4wLjABAAAAlwXCzzm7SmBfdZAsqQ_wVVUbpTvUSX1WC_x8HAjMa3gLb88-MwKL7s4OqlYntX4r</code></p><h3 id="_2-2、分析视频链接" tabindex="-1">2.2、分析视频链接 <a class="header-anchor" href="#_2-2、分析视频链接" aria-label="Permalink to &quot;2.2、分析视频链接&quot;">​</a></h3><p>了解完用户链接的形式后，接下来分析需求。</p><p>随便搜索一下用户的视频作品，开发者模式下，随便点击一个请求，搜索<code>开播四个年头了</code></p><p><img src="'+p+'" alt="图片"></p><p>发现请求地址是<code>https://www.douyin.com/aweme/v1/web/aweme/post</code>后面跟着一大堆参数</p><p><img src="'+o+'" alt="图片"></p><p>鼠标在页面上滚动，向下翻动几页。可以看到每次滚动时确实也发了请求，但是请求参数中只有 3 个参数一直在变化。</p><p><img src="'+e+'" alt="图片"></p><p>这里我们不深入研究这些 token 是怎么生成的，本节我们重点讲解视频下载。</p><p>分析接口返回的 json 数据，可以发现在 list 的每个元素中有 video 等 url_list 参数值。</p><p><img src="'+t+'" alt="图片"></p><p><strong>视频 URL 参数值位置： <code>aweme_list&gt;video&gt;play_addr&gt;url_list</code></strong></p><p>尝试了几个可以看到每个视频都有 3 个 URL 地址，随便复制打开一个。</p><p><img src="'+r+'" alt="图片"></p><p>把地址在浏览器中打开，就出现熟悉的画面，并且该视频是直接可以下载的。</p><p>手动下载完后，本地播放正常。</p><p><img src="'+c+`" alt="图片"></p><h2 id="三、代码实现" tabindex="-1">三、代码实现 <a class="header-anchor" href="#三、代码实现" aria-label="Permalink to &quot;三、代码实现&quot;">​</a></h2><p>经过以上分析，我们清楚了怎么拿到视频下载地址</p><p><strong>代码实现</strong></p><p>由于请求接口中参数很多，还有反爬策略，研究起来很困难，本次代码我们未说明如何登录，获取用户主页，以及请求<code>https://www.douyin.com/aweme/v1/web/aweme/post</code>获取用户视频作品这些步骤了，大家可以自己私下研究。</p><p>这里，我们假设你已经拿到了刚才的 url_list 中的视频地址，那么直接写个 Python 函数来处理下载动作即可。</p><p><strong>根据 URL 下载视频代码：</strong></p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> requests</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 视频URL</span></span>
<span class="line"><span style="color:#ABB2BF;">url </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &#39;http://v3-webe.douyinvod.com/02416bff1210255f9ea73aecc9c92c9f/6631fd93/video/tos/cn/tos-cn-ve-15/oM1LCrsKDfueQ3YAeALQ6c3Q76VQnBgXBbzIxG/?a=6383&amp;ch=10010&amp;cr=3&amp;dr=0&amp;lr=all&amp;cd=0%7C0%7C0%7C3&amp;cv=1&amp;br=555&amp;bt=555&amp;cs=0&amp;ds=4&amp;ft=3X_zklXvvBQ3AUq8yq8Z.C~km4Z1mApGclbyS6BJE.F&amp;mime_type=video_mp4&amp;qs=0&amp;rc=ODc1OzpmOTM4OWdkMzw6ZEBpM3IzdGU6ZnF0cTMzNGkzM0AuLzMzXzIuNjQxMDFjYV5gYSNrZGlxcjRvcm5gLS1kLTBzcw%3D%3D&amp;btag=80000e00028000&amp;cquery=101r_100B_100x_100z_100a&amp;dy_q=1714548536&amp;feature_id=46a7bb47b4fd1280f3d3825bf2b29388&amp;l=20240501152855BABC6723A9A22EF420BC&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 发送请求</span></span>
<span class="line"><span style="color:#ABB2BF;">response </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> requests.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(url, </span><span style="color:#E06C75;font-style:italic;">stream</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">True</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 检查请求是否成功</span></span>
<span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> response.status_code </span><span style="color:#56B6C2;">==</span><span style="color:#D19A66;"> 200</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    # 打开文件进行写入</span></span>
<span class="line"><span style="color:#C678DD;">    with</span><span style="color:#56B6C2;"> open</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;video.mp4&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;wb&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> f:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        # 写入响应内容</span></span>
<span class="line"><span style="color:#C678DD;">        for</span><span style="color:#ABB2BF;"> chunk </span><span style="color:#C678DD;">in</span><span style="color:#ABB2BF;"> response.</span><span style="color:#61AFEF;">iter_content</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">chunk_size</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">1024</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#C678DD;">            if</span><span style="color:#ABB2BF;"> chunk:  </span><span style="color:#7F848E;font-style:italic;"># 过滤掉保持连接的chunk</span></span>
<span class="line"><span style="color:#ABB2BF;">                f.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(chunk)</span></span>
<span class="line"><span style="color:#56B6C2;">    print</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;视频下载成功&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#56B6C2;">    print</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;视频下载失败，状态码:&#39;</span><span style="color:#ABB2BF;">, response.status_code)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>注意：这段代码假定视频 URL 是直接指向视频文件的，并且服务器允许通过 HTTP 请求直接下载视频。如果视频受到版权保护或有特殊的下载要求，直接下载可能不被允许，或者需要额外的认证步骤。</p><p>运行代码，下载成功</p><p><img src="`+B+'" alt="图片"></p><p>并且也可以正常播放。</p><p><img src="'+y+'" alt="图片"></p><p>还有另外一种视频 URL 形式比较常见，就是<code>https://www.douyin.com/video/7363905160818511140</code></p><p><img src="'+i+`" alt="图片"></p><p>这种形式的 URL 视频，其实也是一样，URL 地址在<code>https://www.douyin.com/aweme/v1/web/aweme/detail/</code>接口中</p><h1 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h1><p>1.手机上分享出来的链接地址，大多数都是短链接，粘贴到浏览器后会自动转为长链接 2.长链接的 url_list 中视频播放地址中有 3 个，随便选择一个都可以打开（为什么 3 个我也不清楚）3.通过以上方式，即使不写代码，也是可以非常方便的下载视频，然市面上有很多这种工具。</p><h1 id="爬虫文章" tabindex="-1">爬虫文章 <a class="header-anchor" href="#爬虫文章" aria-label="Permalink to &quot;爬虫文章&quot;">​</a></h1><p><a href="https://mp.weixin.qq.com/s/Awrsi-4cqUI7NCfvLgZ3Yg" target="_blank" rel="noreferrer">爬虫入门-js 端 cookie 反爬与无限 debugger (qq.com)</a></p><h1 id="python-网络爬虫-怎样改造成并发爬取" tabindex="-1">Python 网络爬虫，怎样改造成并发爬取 <a class="header-anchor" href="#python-网络爬虫-怎样改造成并发爬取" aria-label="Permalink to &quot;Python 网络爬虫，怎样改造成并发爬取&quot;">​</a></h1><h3 id="背景目标" tabindex="-1">背景目标 <a class="header-anchor" href="#背景目标" aria-label="Permalink to &quot;背景目标&quot;">​</a></h3><p>一个爬虫程序，默认情况下，是单线程爬取的，速度会比较慢</p><p>如果改造成多线程爬取，就可以利用多 CPU 能力，加速爬取。</p><p>如下代码，爬取了一个小说的内容，存储到文件里。</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> requests</span></span>
<span class="line"><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> bs4 </span><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> BeautifulSoup</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">headers </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#98C379;">    &quot;User-Agent&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#ABB2BF;">root_url </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;http://antpython.net/novels/01.html&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">resp_root </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> requests.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(root_url, </span><span style="color:#E06C75;font-style:italic;">headers</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">headers)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">soup </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> BeautifulSoup</span><span style="color:#ABB2BF;">(resp_root.text, </span><span style="color:#98C379;">&quot;html.parser&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">chapter_links </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> soup.</span><span style="color:#61AFEF;">find</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;div&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">id</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;novel_chapters&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">find_all</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;div&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">class_</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;chapter_link&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> time</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">start </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> time.</span><span style="color:#61AFEF;">time</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># file out</span></span>
<span class="line"><span style="color:#ABB2BF;">fout </span><span style="color:#56B6C2;">=</span><span style="color:#56B6C2;"> open</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;小说.txt&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;w&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">encoding</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;utf8&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">count </span><span style="color:#56B6C2;">=</span><span style="color:#56B6C2;"> len</span><span style="color:#ABB2BF;">(chapter_links)</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> idx, chapter_link </span><span style="color:#C678DD;">in</span><span style="color:#56B6C2;"> enumerate</span><span style="color:#ABB2BF;">(chapter_links):</span></span>
<span class="line"><span style="color:#ABB2BF;">    link </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> chapter_link.</span><span style="color:#61AFEF;">find</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;a&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    href </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;http://antpython.net</span><span style="color:#D19A66;">%s</span><span style="color:#98C379;">&quot;</span><span style="color:#56B6C2;"> %</span><span style="color:#ABB2BF;"> link[</span><span style="color:#98C379;">&quot;href&quot;</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">    title </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> link.</span><span style="color:#61AFEF;">get_text</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#56B6C2;">    print</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;爬取链接：&quot;</span><span style="color:#ABB2BF;">, href, title, idx, count, idx </span><span style="color:#56B6C2;">/</span><span style="color:#ABB2BF;"> count </span><span style="color:#56B6C2;">*</span><span style="color:#D19A66;"> 100</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    resp_cont </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> requests.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(href, </span><span style="color:#E06C75;font-style:italic;">headers</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">headers)</span></span>
<span class="line"><span style="color:#ABB2BF;">    soup_cont </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> BeautifulSoup</span><span style="color:#ABB2BF;">(resp_cont.text, </span><span style="color:#98C379;">&quot;html.parser&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    cont </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> soup_cont.</span><span style="color:#61AFEF;">find</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;div&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">id</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;chapter_content&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">get_text</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">    fout.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(title </span><span style="color:#56B6C2;">+</span><span style="color:#98C379;"> &quot;</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    fout.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(cont </span><span style="color:#56B6C2;">+</span><span style="color:#98C379;"> &quot;</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">fout.</span><span style="color:#61AFEF;">close</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#56B6C2;">print</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;爬取时间：&quot;</span><span style="color:#ABB2BF;">, time.</span><span style="color:#61AFEF;">time</span><span style="color:#ABB2BF;">() </span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;"> start)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><p>执行后，看到花费时间为爬取时间：56.08 秒钟。</p><h3 id="代码改造" tabindex="-1">代码改造 <a class="header-anchor" href="#代码改造" aria-label="Permalink to &quot;代码改造&quot;">​</a></h3><p>需要注意的是，如果是并发爬取，那么爬取的顺序是不一致的。我们可以给每次 URL 给一个序号，将来做排序。</p><h4 id="首先-将每章爬取改造成函数" tabindex="-1">首先，将每章爬取改造成函数 <a class="header-anchor" href="#首先-将每章爬取改造成函数" aria-label="Permalink to &quot;首先，将每章爬取改造成函数&quot;">​</a></h4><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">def</span><span style="color:#61AFEF;"> craw_single</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;font-style:italic;">index</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;font-style:italic;">title</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;font-style:italic;">chapter_link</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#98C379;">    &quot;&quot;&quot;爬取单章内容，返回需要、标题、内容&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">    resp_cont </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> requests.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(chapter_link, </span><span style="color:#E06C75;font-style:italic;">headers</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">headers)</span></span>
<span class="line"><span style="color:#ABB2BF;">    soup_cont </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> BeautifulSoup</span><span style="color:#ABB2BF;">(resp_cont.text, </span><span style="color:#98C379;">&quot;html.parser&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    cont </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> soup_cont.</span><span style="color:#61AFEF;">find</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;div&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">id</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;chapter_content&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">get_text</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#ABB2BF;"> index, title, cont</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>其中 index 参数，纯粹是为了将来的排序使用。</p><h4 id="然后-启动每章的爬取-提交给线程池" tabindex="-1">然后，启动每章的爬取，提交给线程池 <a class="header-anchor" href="#然后-启动每章的爬取-提交给线程池" aria-label="Permalink to &quot;然后，启动每章的爬取，提交给线程池&quot;">​</a></h4><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> time</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">start </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> time.</span><span style="color:#61AFEF;">time</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">count </span><span style="color:#56B6C2;">=</span><span style="color:#56B6C2;"> len</span><span style="color:#ABB2BF;">(chapter_links)</span></span>
<span class="line"><span style="color:#ABB2BF;">pool </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> ThreadPoolExecutor</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">futures </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> []</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> idx, chapter_link </span><span style="color:#C678DD;">in</span><span style="color:#56B6C2;"> enumerate</span><span style="color:#ABB2BF;">(chapter_links):</span></span>
<span class="line"><span style="color:#ABB2BF;">    link </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> chapter_link.</span><span style="color:#61AFEF;">find</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;a&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    href </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;http://antpython.net</span><span style="color:#D19A66;">%s</span><span style="color:#98C379;">&quot;</span><span style="color:#56B6C2;"> %</span><span style="color:#ABB2BF;"> link[</span><span style="color:#98C379;">&quot;href&quot;</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">    title </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> link.</span><span style="color:#61AFEF;">get_text</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    futures.</span><span style="color:#61AFEF;">append</span><span style="color:#ABB2BF;">(pool.</span><span style="color:#61AFEF;">submit</span><span style="color:#ABB2BF;">(craw_single, </span><span style="color:#E06C75;font-style:italic;">index</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">idx, </span><span style="color:#E06C75;font-style:italic;">title</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">title, </span><span style="color:#E06C75;font-style:italic;">chapter_link</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">href))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>我们使用 pool.submit 做任务的提交，然后用 futures 收集 future 的结果对象。</p><h4 id="等待所有线程的结束" tabindex="-1">等待所有线程的结束 <a class="header-anchor" href="#等待所有线程的结束" aria-label="Permalink to &quot;等待所有线程的结束&quot;">​</a></h4><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">results </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> []</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> future </span><span style="color:#C678DD;">in</span><span style="color:#ABB2BF;"> concurrent.futures.</span><span style="color:#61AFEF;">as_completed</span><span style="color:#ABB2BF;">(futures):</span></span>
<span class="line"><span style="color:#ABB2BF;">    results.</span><span style="color:#61AFEF;">append</span><span style="color:#ABB2BF;">(future.</span><span style="color:#61AFEF;">result</span><span style="color:#ABB2BF;">())</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>该代码会挨个等待子线程的结束。将结果 future.result()，也就是函数的返回数据，存入列表中</p><h4 id="将结果存入文件" tabindex="-1">将结果存入文件 <a class="header-anchor" href="#将结果存入文件" aria-label="Permalink to &quot;将结果存入文件&quot;">​</a></h4><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">results.</span><span style="color:#61AFEF;">sort</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">key</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">lambda</span><span style="color:#D19A66;font-style:italic;"> x</span><span style="color:#ABB2BF;">: x[</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">])</span></span>
<span class="line"><span style="color:#C678DD;">with</span><span style="color:#56B6C2;"> open</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;小说结果.txt&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;w&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">encoding</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;utf8&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> fout:</span></span>
<span class="line"><span style="color:#C678DD;">    for</span><span style="color:#ABB2BF;"> index, title, cont </span><span style="color:#C678DD;">in</span><span style="color:#ABB2BF;"> results:</span></span>
<span class="line"><span style="color:#ABB2BF;">        fout.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(title </span><span style="color:#56B6C2;">+</span><span style="color:#98C379;"> &quot;</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        fout.</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(cont </span><span style="color:#56B6C2;">+</span><span style="color:#98C379;"> &quot;</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">pool.</span><span style="color:#61AFEF;">shutdown</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#56B6C2;">print</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;爬取时间：&quot;</span><span style="color:#ABB2BF;">, time.</span><span style="color:#61AFEF;">time</span><span style="color:#ABB2BF;">() </span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;"> start)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>这里对数据做了排序，按章节的顺序。</p><p>然后打开文件写入内容。</p><p>最后关闭了线程池。</p><h3 id="总结-1" tabindex="-1">总结 <a class="header-anchor" href="#总结-1" aria-label="Permalink to &quot;总结&quot;">​</a></h3><p>要把任务改造成多线程，先把要拆分的任务改成单个函数。然后用线程池做任务提交。都提交后，可以等待获取任务的返回。对返回数据做处理后，写出到文件里。</p><h1 id="mediacrawler-小红书爬虫源码分析" tabindex="-1">MediaCrawler 小红书爬虫源码分析 <a class="header-anchor" href="#mediacrawler-小红书爬虫源码分析" aria-label="Permalink to &quot;MediaCrawler 小红书爬虫源码分析&quot;">​</a></h1><h2 id="前言" tabindex="-1"><strong>前言</strong> <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;**前言**&quot;">​</a></h2><p>MediaCrawler 是最近冲上 Github 热搜的开源多社交平台爬虫。虽然现在已删库，但还好我眼疾手快，有幸还 Fork 了一份，乘着周末，简单分析了下小红书平台的相关代码。</p><h2 id="爬虫难点" tabindex="-1"><strong>爬虫难点</strong> <a class="header-anchor" href="#爬虫难点" aria-label="Permalink to &quot;**爬虫难点**&quot;">​</a></h2><p>一般写爬虫，都需要面对以下几个问题</p><ol><li>如果 app/网页需要登录，如何获取登录态（cookie/jwt）</li><li>大部分 app/网页都会对请求参数进行 sign，如果有，如何获取 sign 逻辑</li><li>绕过其它遇到的反爬措施</li></ol><p>我将带着这三个问题，阅读 MediaCrawler 小红书代码，看看 MediaCrawler 是怎么处理的。</p><h2 id="获取登录态" tabindex="-1"><strong>获取登录态</strong> <a class="header-anchor" href="#获取登录态" aria-label="Permalink to &quot;**获取登录态**&quot;">​</a></h2><p>提供了三种方式</p><ol><li>QRCode （login_by_qrcode）</li><li>手机号 (login_by_mobile)</li><li>Cookie (login_by_cookies)</li></ol><p>登录相关代码都在 <code>media_platform/xhs/login.py</code> 文件中</p><h3 id="qrcode-登录" tabindex="-1"><strong>QRCode 登录</strong> <a class="header-anchor" href="#qrcode-登录" aria-label="Permalink to &quot;**QRCode 登录**&quot;">​</a></h3><p>实现代码为 <code>login_by_qrcode</code> 方法。代码为:</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">async</span><span style="color:#C678DD;"> def</span><span style="color:#61AFEF;"> login_by_qrcode</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;font-style:italic;">self</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#98C379;">    &quot;&quot;&quot;Login to Xiaohongshu website and keep webdriver login state.&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">    utils.logger.</span><span style="color:#61AFEF;">info</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;[XHSLogin.login_by_qrcode] Begin login to Xiaohongshu by QR code...&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    qrcode_img_selector </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;xpath=//img[@class=&#39;qrcode-img&#39;]&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    # Find login QR code</span></span>
<span class="line"><span style="color:#ABB2BF;">    base64_qrcode_img </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> await</span><span style="color:#ABB2BF;"> utils.</span><span style="color:#61AFEF;">find_login_qrcode</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#E5C07B;">        self</span><span style="color:#ABB2BF;">.context_page,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">        selector</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">qrcode_img_selector</span></span>
<span class="line"><span style="color:#ABB2BF;">    )</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#C678DD;"> not</span><span style="color:#ABB2BF;"> base64_qrcode_img:</span></span>
<span class="line"><span style="color:#ABB2BF;">        utils.logger.</span><span style="color:#61AFEF;">info</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;[XHSLogin.login_by_qrcode] Login failed, QR code not found, please check....&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        # If this website does not automatically popup login dialog box,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        # we will manually click login button</span></span>
<span class="line"><span style="color:#C678DD;">        await</span><span style="color:#ABB2BF;"> asyncio.</span><span style="color:#61AFEF;">sleep</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0.5</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        login_button_ele </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> self</span><span style="color:#ABB2BF;">.context_page.</span><span style="color:#61AFEF;">locator</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;xpath=//*[@id=&#39;app&#39;]/div[1]/div[2]/div[1]/ul/div[1]/button&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">        await</span><span style="color:#ABB2BF;"> login_button_ele.</span><span style="color:#61AFEF;">click</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">        base64_qrcode_img </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> await</span><span style="color:#ABB2BF;"> utils.</span><span style="color:#61AFEF;">find_login_qrcode</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#E5C07B;">            self</span><span style="color:#ABB2BF;">.context_page,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">            selector</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">qrcode_img_selector</span></span>
<span class="line"><span style="color:#ABB2BF;">        )</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#C678DD;"> not</span><span style="color:#ABB2BF;"> base64_qrcode_img:</span></span>
<span class="line"><span style="color:#ABB2BF;">            sys.</span><span style="color:#61AFEF;">exit</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    # Get not logged session</span></span>
<span class="line"><span style="color:#ABB2BF;">    current_cookie </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> await</span><span style="color:#E5C07B;"> self</span><span style="color:#ABB2BF;">.browser_context.</span><span style="color:#61AFEF;">cookies</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">    _, cookie_dict </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> utils.</span><span style="color:#61AFEF;">convert_cookies</span><span style="color:#ABB2BF;">(current_cookie)</span></span>
<span class="line"><span style="color:#ABB2BF;">    no_logged_in_session </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> cookie_dict.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;web_session&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    # Show login QR code</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    # We need to use partial function to call show_qrcode function and run in executor</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    # then current asyncio event loop will not be blocked</span></span>
<span class="line"><span style="color:#ABB2BF;">    partial_show_qrcode </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> functools.</span><span style="color:#61AFEF;">partial</span><span style="color:#ABB2BF;">(utils.show_qrcode, base64_qrcode_img)</span></span>
<span class="line"><span style="color:#ABB2BF;">    asyncio.</span><span style="color:#61AFEF;">get_running_loop</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">run_in_executor</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">executor</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">None</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">func</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">partial_show_qrcode)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    utils.logger.</span><span style="color:#61AFEF;">info</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">f</span><span style="color:#98C379;">&quot;[XHSLogin.login_by_qrcode] Waiting for scan code login, remaining time is 120s&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">    try</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#C678DD;">        await</span><span style="color:#E5C07B;"> self</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">check_login_state</span><span style="color:#ABB2BF;">(no_logged_in_session)</span></span>
<span class="line"><span style="color:#C678DD;">    except</span><span style="color:#ABB2BF;"> RetryError:</span></span>
<span class="line"><span style="color:#ABB2BF;">        utils.logger.</span><span style="color:#61AFEF;">info</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;[XHSLogin.login_by_qrcode] Login to Xiaohongshu failed by QR code login method...&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        sys.</span><span style="color:#61AFEF;">exit</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    wait_redirect_seconds </span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;"> 5</span></span>
<span class="line"><span style="color:#ABB2BF;">    utils.logger.</span><span style="color:#61AFEF;">info</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">f</span><span style="color:#98C379;">&quot;[XHSLogin.login_by_qrcode] Login successful then wait for </span><span style="color:#D19A66;">{</span><span style="color:#ABB2BF;">wait_redirect_seconds</span><span style="color:#D19A66;">}</span><span style="color:#98C379;"> seconds redirect...&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">    await</span><span style="color:#ABB2BF;"> asyncio.</span><span style="color:#61AFEF;">sleep</span><span style="color:#ABB2BF;">(wait_redirect_seconds)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><p>大致逻辑：</p><ol><li><p>启动 headless 浏览器并且 headless 模式必须设为 <code>False</code>, 因为不会把 QRCode 显示在终端或者通过信息转发服务转发到你的手机上</p></li><li><p>通过<code>utils.find_login_qrcode</code>工具函数以及<code>qrcode_img_selector</code>获取 headless 浏览器所渲染页面中的 QRCode 图片元素</p></li><li><p>如果没有获取到，则点击<code>login_button_ele</code> , 弹出登录对话框，然后再重复一次步骤 2，如果依旧没有获取到，则退出爬虫，爬取失败。</p></li><li><p>如果获取到了，则等待用户扫码完成登录。</p></li><li><p>其中可能会出现验证码的情况，此时会提示需要手动验证，<strong>没有实现自动验证，需要人工手动操作干预。</strong></p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">async</span><span style="color:#C678DD;"> def</span><span style="color:#61AFEF;"> check_login_state</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;font-style:italic;">self</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;font-style:italic;">no_logged_in_session</span><span style="color:#ABB2BF;">: </span><span style="color:#56B6C2;">str</span><span style="color:#ABB2BF;">) -&gt; </span><span style="color:#56B6C2;">bool</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  # ......</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#98C379;"> &quot;请通过验证&quot;</span><span style="color:#C678DD;"> in</span><span style="color:#C678DD;"> await</span><span style="color:#E5C07B;"> self</span><span style="color:#ABB2BF;">.context_page.</span><span style="color:#61AFEF;">content</span><span style="color:#ABB2BF;">():</span></span>
<span class="line"><span style="color:#ABB2BF;">        utils.logger.</span><span style="color:#61AFEF;">info</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;[XHSLogin.check_login_state] A verification code appeared during the login process, please verify manually.&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  # ......</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></li></ol><h3 id="手机号登录" tabindex="-1"><strong>手机号登录</strong> <a class="header-anchor" href="#手机号登录" aria-label="Permalink to &quot;**手机号登录**&quot;">​</a></h3><p>实现代码为 <code>login_by_mobile</code> 方法。代码为:</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">async</span><span style="color:#C678DD;"> def</span><span style="color:#61AFEF;"> login_by_mobile</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;font-style:italic;">self</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#98C379;">    &quot;&quot;&quot;Login xiaohongshu by mobile&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">    utils.logger.</span><span style="color:#61AFEF;">info</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;[XHSLogin.login_by_mobile] Begin login xiaohongshu by mobile ...&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">    await</span><span style="color:#ABB2BF;"> asyncio.</span><span style="color:#61AFEF;">sleep</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">    try</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        # 小红书进入首页后，有可能不会自动弹出登录框，需要手动点击登录按钮</span></span>
<span class="line"><span style="color:#ABB2BF;">        login_button_ele </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> await</span><span style="color:#E5C07B;"> self</span><span style="color:#ABB2BF;">.context_page.</span><span style="color:#61AFEF;">wait_for_selector</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">            selector</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;xpath=//*[@id=&#39;app&#39;]/div[1]/div[2]/div[1]/ul/div[1]/button&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">            timeout</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">5000</span></span>
<span class="line"><span style="color:#ABB2BF;">        )</span></span>
<span class="line"><span style="color:#C678DD;">        await</span><span style="color:#ABB2BF;"> login_button_ele.</span><span style="color:#61AFEF;">click</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        # 弹窗的登录对话框也有两种形态，一种是直接可以看到手机号和验证码的</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        # 另一种是需要点击切换到手机登录的</span></span>
<span class="line"><span style="color:#ABB2BF;">        element </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> await</span><span style="color:#E5C07B;"> self</span><span style="color:#ABB2BF;">.context_page.</span><span style="color:#61AFEF;">wait_for_selector</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">            selector</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;xpath=//div[@class=&quot;login-container&quot;]//div[@class=&quot;other-method&quot;]/div[1]&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">            timeout</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">5000</span></span>
<span class="line"><span style="color:#ABB2BF;">        )</span></span>
<span class="line"><span style="color:#C678DD;">        await</span><span style="color:#ABB2BF;"> element.</span><span style="color:#61AFEF;">click</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#C678DD;">    except</span><span style="color:#ABB2BF;"> Exception </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> e:</span></span>
<span class="line"><span style="color:#ABB2BF;">        utils.logger.</span><span style="color:#61AFEF;">info</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;[XHSLogin.login_by_mobile] have not found mobile button icon and keep going ...&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    await</span><span style="color:#ABB2BF;"> asyncio.</span><span style="color:#61AFEF;">sleep</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    login_container_ele </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> await</span><span style="color:#E5C07B;"> self</span><span style="color:#ABB2BF;">.context_page.</span><span style="color:#61AFEF;">wait_for_selector</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;div.login-container&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    input_ele </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> await</span><span style="color:#ABB2BF;"> login_container_ele.</span><span style="color:#61AFEF;">query_selector</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;label.phone &gt; input&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">    await</span><span style="color:#ABB2BF;"> input_ele.</span><span style="color:#61AFEF;">fill</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">.login_phone)</span></span>
<span class="line"><span style="color:#C678DD;">    await</span><span style="color:#ABB2BF;"> asyncio.</span><span style="color:#61AFEF;">sleep</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0.5</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    send_btn_ele </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> await</span><span style="color:#ABB2BF;"> login_container_ele.</span><span style="color:#61AFEF;">query_selector</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;label.auth-code &gt; span&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">    await</span><span style="color:#ABB2BF;"> send_btn_ele.</span><span style="color:#61AFEF;">click</span><span style="color:#ABB2BF;">()  </span><span style="color:#7F848E;font-style:italic;"># 点击发送验证码</span></span>
<span class="line"><span style="color:#ABB2BF;">    sms_code_input_ele </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> await</span><span style="color:#ABB2BF;"> login_container_ele.</span><span style="color:#61AFEF;">query_selector</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;label.auth-code &gt; input&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    submit_btn_ele </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> await</span><span style="color:#ABB2BF;"> login_container_ele.</span><span style="color:#61AFEF;">query_selector</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;div.input-container &gt; button&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    redis_obj </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> redis.</span><span style="color:#61AFEF;">Redis</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">host</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">config.</span><span style="color:#D19A66;">REDIS_DB_HOST</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">password</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">config.</span><span style="color:#D19A66;">REDIS_DB_PWD</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    max_get_sms_code_time </span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;"> 60</span><span style="color:#56B6C2;"> *</span><span style="color:#D19A66;"> 2</span><span style="color:#7F848E;font-style:italic;">  # 最长获取验证码的时间为2分钟</span></span>
<span class="line"><span style="color:#ABB2BF;">    no_logged_in_session </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;&quot;</span></span>
<span class="line"><span style="color:#C678DD;">    while</span><span style="color:#ABB2BF;"> max_get_sms_code_time </span><span style="color:#56B6C2;">&gt;</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">        utils.logger.</span><span style="color:#61AFEF;">info</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">f</span><span style="color:#98C379;">&quot;[XHSLogin.login_by_mobile] get sms code from redis remaining time </span><span style="color:#D19A66;">{</span><span style="color:#ABB2BF;">max_get_sms_code_time</span><span style="color:#D19A66;">}</span><span style="color:#98C379;">s ...&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">        await</span><span style="color:#ABB2BF;"> asyncio.</span><span style="color:#61AFEF;">sleep</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        sms_code_key </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> f</span><span style="color:#98C379;">&quot;xhs_</span><span style="color:#D19A66;">{</span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">.login_phone</span><span style="color:#D19A66;">}</span><span style="color:#98C379;">&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">        sms_code_value </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> redis_obj.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(sms_code_key)</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#C678DD;"> not</span><span style="color:#ABB2BF;"> sms_code_value:</span></span>
<span class="line"><span style="color:#ABB2BF;">            max_get_sms_code_time </span><span style="color:#56B6C2;">-=</span><span style="color:#D19A66;"> 1</span></span>
<span class="line"><span style="color:#C678DD;">            continue</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        current_cookie </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> await</span><span style="color:#E5C07B;"> self</span><span style="color:#ABB2BF;">.browser_context.</span><span style="color:#61AFEF;">cookies</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">        _, cookie_dict </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> utils.</span><span style="color:#61AFEF;">convert_cookies</span><span style="color:#ABB2BF;">(current_cookie)</span></span>
<span class="line"><span style="color:#ABB2BF;">        no_logged_in_session </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> cookie_dict.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;web_session&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">        await</span><span style="color:#ABB2BF;"> sms_code_input_ele.</span><span style="color:#61AFEF;">fill</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">value</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">sms_code_value.</span><span style="color:#61AFEF;">decode</span><span style="color:#ABB2BF;">())  </span><span style="color:#7F848E;font-style:italic;"># 输入短信验证码</span></span>
<span class="line"><span style="color:#C678DD;">        await</span><span style="color:#ABB2BF;"> asyncio.</span><span style="color:#61AFEF;">sleep</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0.5</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        agree_privacy_ele </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> self</span><span style="color:#ABB2BF;">.context_page.</span><span style="color:#61AFEF;">locator</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;xpath=//div[@class=&#39;agreements&#39;]//*[local-name()=&#39;svg&#39;]&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">        await</span><span style="color:#ABB2BF;"> agree_privacy_ele.</span><span style="color:#61AFEF;">click</span><span style="color:#ABB2BF;">()  </span><span style="color:#7F848E;font-style:italic;"># 点击同意隐私协议</span></span>
<span class="line"><span style="color:#C678DD;">        await</span><span style="color:#ABB2BF;"> asyncio.</span><span style="color:#61AFEF;">sleep</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0.5</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">        await</span><span style="color:#ABB2BF;"> submit_btn_ele.</span><span style="color:#61AFEF;">click</span><span style="color:#ABB2BF;">()  </span><span style="color:#7F848E;font-style:italic;"># 点击登录</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        # todo ... 应该还需要检查验证码的正确性有可能输入的验证码不正确</span></span>
<span class="line"><span style="color:#C678DD;">        break</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    try</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#C678DD;">        await</span><span style="color:#E5C07B;"> self</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">check_login_state</span><span style="color:#ABB2BF;">(no_logged_in_session)</span></span>
<span class="line"><span style="color:#C678DD;">    except</span><span style="color:#ABB2BF;"> RetryError:</span></span>
<span class="line"><span style="color:#ABB2BF;">        utils.logger.</span><span style="color:#61AFEF;">info</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;[XHSLogin.login_by_mobile] Login xiaohongshu failed by mobile login method ...&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        sys.</span><span style="color:#61AFEF;">exit</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    wait_redirect_seconds </span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;"> 5</span></span>
<span class="line"><span style="color:#ABB2BF;">    utils.logger.</span><span style="color:#61AFEF;">info</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">f</span><span style="color:#98C379;">&quot;[XHSLogin.login_by_mobile] Login successful then wait for </span><span style="color:#D19A66;">{</span><span style="color:#ABB2BF;">wait_redirect_seconds</span><span style="color:#D19A66;">}</span><span style="color:#98C379;"> seconds redirect ...&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">    await</span><span style="color:#ABB2BF;"> asyncio.</span><span style="color:#61AFEF;">sleep</span><span style="color:#ABB2BF;">(wait_redirect_seconds)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br></div></div><p>大致逻辑：</p><ol><li><p>启动 headless 浏览器</p></li><li><p>点击 <code>login_button_ele</code> , 弹出登录对话框</p></li><li><p>获取 phone <code>input_ele</code>，并填入手机号</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">login_container_ele </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> await</span><span style="color:#E5C07B;"> self</span><span style="color:#ABB2BF;">.context_page.</span><span style="color:#61AFEF;">wait_for_selector</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;div.login-container&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">input_ele </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> await</span><span style="color:#ABB2BF;"> login_container_ele.</span><span style="color:#61AFEF;">query_selector</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;label.phone &gt; input&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">await</span><span style="color:#ABB2BF;"> input_ele.</span><span style="color:#61AFEF;">fill</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">.login_phone)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p>点击<code>send_btn_ele</code>， 发送验证码</p></li><li><p>每隔 1 秒从 Redis 数据库中获取验证码。如果 120 秒后，依旧没有获取到，则退出爬虫，爬取失败</p></li><li><p>如果获取到了，则将验证码，填入验证码输入框(<code>sms_code_btn_ele</code>)，并勾选同意隐私协议按钮（<code>agree_privacy_ele</code>）以及提交按钮(<code>submit_btn_ele</code>)</p></li><li><p>因为依赖了 Redis 数据库组件，所以可以通过短信转发软件或者短信获取接口实现短信验证码输入的自动化，实现自动化手机号登录</p></li><li><ol><li>代码中<strong>没有检测验证码的正确性。</strong></li><li>代码中<strong>没有登录失败重试机制</strong></li></ol></li></ol><h3 id="cookie-登录" tabindex="-1"><strong>Cookie 登录</strong> <a class="header-anchor" href="#cookie-登录" aria-label="Permalink to &quot;**Cookie 登录**&quot;">​</a></h3><p>实现代码为 <code>login_by_cookies</code> 方法。就是将用户提供的 <code>cookie(web_session)</code>信息放到<code>browser_context</code> 中</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">async</span><span style="color:#C678DD;"> def</span><span style="color:#61AFEF;"> login_by_cookies</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;font-style:italic;">self</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#C678DD;">    for</span><span style="color:#ABB2BF;"> key, value </span><span style="color:#C678DD;">in</span><span style="color:#ABB2BF;"> utils.</span><span style="color:#61AFEF;">convert_str_cookie_to_dict</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">.cookie_str).</span><span style="color:#61AFEF;">items</span><span style="color:#ABB2BF;">():</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#ABB2BF;"> key </span><span style="color:#56B6C2;">!=</span><span style="color:#98C379;"> &quot;web_session&quot;</span><span style="color:#ABB2BF;">:  </span><span style="color:#7F848E;font-style:italic;"># Only set web_session cookie attribute</span></span>
<span class="line"><span style="color:#C678DD;">            continue</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">        await</span><span style="color:#E5C07B;"> self</span><span style="color:#ABB2BF;">.browser_context.</span><span style="color:#61AFEF;">add_cookies</span><span style="color:#ABB2BF;">([</span></span>
<span class="line"><span style="color:#ABB2BF;">            {</span></span>
<span class="line"><span style="color:#98C379;">                &#39;name&#39;</span><span style="color:#ABB2BF;">: key,</span></span>
<span class="line"><span style="color:#98C379;">                &#39;value&#39;</span><span style="color:#ABB2BF;">: value,</span></span>
<span class="line"><span style="color:#98C379;">                &#39;domain&#39;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;.xiaohongshu.com&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">                &#39;path&#39;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;/&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        ])</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="sign-签名算法" tabindex="-1"><strong>Sign 签名算法</strong> <a class="header-anchor" href="#sign-签名算法" aria-label="Permalink to &quot;**Sign 签名算法**&quot;">​</a></h2><p>小红书浏览器端接口有做<code>sign</code>验签，MediaCrawler 生成 <code>sign</code>相关参数的代码位于 <code>media_platform/xhs/client.py</code> 文件中的 <code>_pre_headers</code> 方法。代码如下:</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">async</span><span style="color:#C678DD;"> def</span><span style="color:#61AFEF;"> _pre_headers</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;font-style:italic;">self</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;font-style:italic;">url</span><span style="color:#ABB2BF;">: </span><span style="color:#56B6C2;">str</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;font-style:italic;">data</span><span style="color:#ABB2BF;">=</span><span style="color:#D19A66;">None</span><span style="color:#ABB2BF;">) -&gt; Dict:</span></span>
<span class="line"><span style="color:#ABB2BF;">    encrypt_params </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> await</span><span style="color:#E5C07B;"> self</span><span style="color:#ABB2BF;">.playwright_page.</span><span style="color:#61AFEF;">evaluate</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;([url, data]) =&gt; window._webmsxyw(url,data)&quot;</span><span style="color:#ABB2BF;">, [url, data])</span></span>
<span class="line"><span style="color:#ABB2BF;">    local_storage </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> await</span><span style="color:#E5C07B;"> self</span><span style="color:#ABB2BF;">.playwright_page.</span><span style="color:#61AFEF;">evaluate</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;() =&gt; window.localStorage&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    signs </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> sign</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">        a1</span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;">self</span><span style="color:#ABB2BF;">.cookie_dict.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;a1&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">        b1</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">local_storage.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;b1&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">        x_s</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">encrypt_params.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;X-s&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">        x_t</span><span style="color:#56B6C2;">=str</span><span style="color:#ABB2BF;">(encrypt_params.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;X-t&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;">    )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    headers </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#98C379;">        &quot;X-S&quot;</span><span style="color:#ABB2BF;">: signs[</span><span style="color:#98C379;">&quot;x-s&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#98C379;">        &quot;X-T&quot;</span><span style="color:#ABB2BF;">: signs[</span><span style="color:#98C379;">&quot;x-t&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#98C379;">        &quot;x-S-Common&quot;</span><span style="color:#ABB2BF;">: signs[</span><span style="color:#98C379;">&quot;x-s-common&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#98C379;">        &quot;X-B3-Traceid&quot;</span><span style="color:#ABB2BF;">: signs[</span><span style="color:#98C379;">&quot;x-b3-traceid&quot;</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#E5C07B;">    self</span><span style="color:#ABB2BF;">.headers.</span><span style="color:#61AFEF;">update</span><span style="color:#ABB2BF;">(headers)</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E5C07B;"> self</span><span style="color:#ABB2BF;">.headers</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><ol><li>没有逆向后用 Python 重新实现<code>window._webmsxyw</code>函数，而是通过 <code>self.playwright_page.evaluate(&quot;([url, data]) =&gt; window._webmsxyw(url,data)&quot;, [url, data])</code> 直接主动调用浏览器运行时中的 <code>window._webmsxyw</code> 生成 <code>encrypt_params</code></li><li>通过<code>self.playwright_page.evaluate(&quot;() =&gt; window.localStorage&quot;)</code> 获取浏览器<code>local_storage</code>对象</li><li>将 <code>cookie</code> 中的 <code>a1</code>, <code>local_storage</code> 中的 <code>b1</code>, <code>encrypt_params</code> 中的 <code>X-s</code>, <code>encrypt_params</code> 中的 <code>X_t</code>, 作为参数传给 <code>sign</code>函数</li><li><code>sign</code> 函数最终返回签名后的值<code>signs</code></li><li>将 <code>signs</code> 赋值给<code>headers</code></li></ol><p>所以主要签名逻辑就是 <code>sign</code> 函数，深入进去看下。代码位于 <code>media_platform/xhs/help.py</code> 文件。代码如下:</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">def</span><span style="color:#61AFEF;"> sign</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;font-style:italic;">a1</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;font-style:italic;">b1</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;font-style:italic;">x_s</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;font-style:italic;">x_t</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#98C379;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#98C379;">    takes in a URI (uniform resource identifier), an optional data dictionary, and an optional ctime parameter. It returns a dictionary containing two keys: &quot;x-s&quot; and &quot;x-t&quot;.</span></span>
<span class="line"><span style="color:#98C379;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">    common </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#98C379;">        &quot;s0&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">,  </span><span style="color:#7F848E;font-style:italic;"># getPlatformCode</span></span>
<span class="line"><span style="color:#98C379;">        &quot;s1&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">        &quot;x0&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;1&quot;</span><span style="color:#ABB2BF;">,  </span><span style="color:#7F848E;font-style:italic;"># localStorage.getItem(&quot;b1b1&quot;)</span></span>
<span class="line"><span style="color:#98C379;">        &quot;x1&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;3.3.0&quot;</span><span style="color:#ABB2BF;">,  </span><span style="color:#7F848E;font-style:italic;"># version</span></span>
<span class="line"><span style="color:#98C379;">        &quot;x2&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;Windows&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">        &quot;x3&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;xhs-pc-web&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">        &quot;x4&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;1.4.4&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">        &quot;x5&quot;</span><span style="color:#ABB2BF;">: a1,  </span><span style="color:#7F848E;font-style:italic;"># cookie of a1</span></span>
<span class="line"><span style="color:#98C379;">        &quot;x6&quot;</span><span style="color:#ABB2BF;">: x_t,</span></span>
<span class="line"><span style="color:#98C379;">        &quot;x7&quot;</span><span style="color:#ABB2BF;">: x_s,</span></span>
<span class="line"><span style="color:#98C379;">        &quot;x8&quot;</span><span style="color:#ABB2BF;">: b1,  </span><span style="color:#7F848E;font-style:italic;"># localStorage.getItem(&quot;b1&quot;)</span></span>
<span class="line"><span style="color:#98C379;">        &quot;x9&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">mrc</span><span style="color:#ABB2BF;">(x_t </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> x_s </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> b1),</span></span>
<span class="line"><span style="color:#98C379;">        &quot;x10&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">,  </span><span style="color:#7F848E;font-style:italic;"># getSigCount</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">    encode_str </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> encodeUtf8</span><span style="color:#ABB2BF;">(json.</span><span style="color:#61AFEF;">dumps</span><span style="color:#ABB2BF;">(common, </span><span style="color:#E06C75;font-style:italic;">separators</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;,&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;:&#39;</span><span style="color:#ABB2BF;">)))</span></span>
<span class="line"><span style="color:#ABB2BF;">    x_s_common </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> b64Encode</span><span style="color:#ABB2BF;">(encode_str)</span></span>
<span class="line"><span style="color:#ABB2BF;">    x_b3_traceid </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> get_b3_trace_id</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#98C379;">        &quot;x-s&quot;</span><span style="color:#ABB2BF;">: x_s,</span></span>
<span class="line"><span style="color:#98C379;">        &quot;x-t&quot;</span><span style="color:#ABB2BF;">: x_t,</span></span>
<span class="line"><span style="color:#98C379;">        &quot;x-s-common&quot;</span><span style="color:#ABB2BF;">: x_s_common,</span></span>
<span class="line"><span style="color:#98C379;">        &quot;x-b3-traceid&quot;</span><span style="color:#ABB2BF;">: x_b3_traceid</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">def</span><span style="color:#61AFEF;"> get_b3_trace_id</span><span style="color:#ABB2BF;">():</span></span>
<span class="line"><span style="color:#ABB2BF;">    re </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;abcdef0123456789&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">    je </span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;"> 16</span></span>
<span class="line"><span style="color:#ABB2BF;">    e </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;&quot;</span></span>
<span class="line"><span style="color:#C678DD;">    for</span><span style="color:#ABB2BF;"> t </span><span style="color:#C678DD;">in</span><span style="color:#56B6C2;"> range</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">16</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">        e </span><span style="color:#56B6C2;">+=</span><span style="color:#ABB2BF;"> re[random.</span><span style="color:#61AFEF;">randint</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, je </span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">)]</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#ABB2BF;"> e</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">def</span><span style="color:#61AFEF;"> mrc</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;font-style:italic;">e</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">    ie </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> [</span></span>
<span class="line"><span style="color:#D19A66;">        0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1996959894</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3993919788</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2567524794</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">124634137</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1886057615</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3915621685</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        2657392035</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">249268274</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2044508324</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3772115230</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2547177864</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">162941995</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        2125561021</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3887607047</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2428444049</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">498536548</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1789927666</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">4089016648</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        2227061214</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">450548861</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1843258603</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">4107580753</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2211677639</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">325883990</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        1684777152</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">4251122042</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2321926636</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">335633487</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1661365465</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">4195302755</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        2366115317</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">997073096</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1281953886</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3579855332</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2724688242</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1006888145</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        1258607687</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3524101629</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2768942443</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">901097722</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1119000684</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3686517206</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        2898065728</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">853044451</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1172266101</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3705015759</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2882616665</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">651767980</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        1373503546</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3369554304</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3218104598</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">565507253</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1454621731</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3485111705</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        3099436303</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">671266974</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1594198024</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3322730930</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2970347812</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">795835527</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        1483230225</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3244367275</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3060149565</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1994146192</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">31158534</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2563907772</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        4023717930</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1907459465</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">112637215</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2680153253</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3904427059</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2013776290</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        251722036</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2517215374</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3775830040</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2137656763</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">141376813</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2439277719</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        3865271297</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1802195444</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">476864866</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2238001368</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">4066508878</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1812370925</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        453092731</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2181625025</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">4111451223</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1706088902</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">314042704</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2344532202</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        4240017532</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1658658271</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">366619977</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2362670323</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">4224994405</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1303535960</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        984961486</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2747007092</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3569037538</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1256170817</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1037604311</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2765210733</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        3554079995</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1131014506</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">879679996</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2909243462</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3663771856</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1141124467</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        855842277</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2852801631</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3708648649</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1342533948</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">654459306</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3188396048</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        3373015174</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1466479909</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">544179635</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3110523913</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3462522015</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1591671054</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        702138776</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2966460450</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3352799412</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1504918807</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">783551873</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3082640443</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        3233442989</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3988292384</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2596254646</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">62317068</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1957810842</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3939845945</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        2647816111</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">81470997</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1943803523</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3814918930</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2489596804</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">225274430</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        2053790376</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3826175755</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2466906013</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">167816743</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2097651377</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">4027552580</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        2265490386</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">503444072</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1762050814</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">4150417245</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2154129355</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">426522225</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        1852507879</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">4275313526</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2312317920</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">282753626</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1742555852</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">4189708143</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        2394877945</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">397917763</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1622183637</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3604390888</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2714866558</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">953729732</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        1340076626</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3518719985</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2797360999</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1068828381</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1219638859</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3624741850</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        2936675148</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">906185462</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1090812512</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3747672003</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2825379669</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">829329135</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        1181335161</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3412177804</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3160834842</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">628085408</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1382605366</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3423369109</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        3138078467</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">570562233</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1426400815</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3317316542</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2998733608</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">733239954</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        1555261956</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3268935591</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3050360625</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">752459403</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1541320221</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2607071920</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        3965973030</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1969922972</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">40735498</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2617837225</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3943577151</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1913087877</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        83908371</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2512341634</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3803740692</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2075208622</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">213261112</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2463272603</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        3855990285</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2094854071</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">198958881</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2262029012</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">4057260610</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1759359992</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        534414190</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2176718541</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">4139329115</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1873836001</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">414664567</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2282248934</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        4279200368</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1711684554</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">285281116</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2405801727</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">4167216745</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1634467795</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        376229701</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2685067896</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3608007406</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1308918612</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">956543938</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2808555105</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        3495958263</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1231636301</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1047427035</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2932959818</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3654703836</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1088359270</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        936918000</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2847714899</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3736837829</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1202900863</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">817233897</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3183342108</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        3401237130</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1404277552</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">615818150</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3134207493</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3453421203</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1423857449</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        601450431</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3009837614</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3294710456</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1567103746</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">711928724</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3020668471</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">        3272380065</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1510334235</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">755167117</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    ]</span></span>
<span class="line"><span style="color:#ABB2BF;">    o </span><span style="color:#56B6C2;">=</span><span style="color:#56B6C2;"> -</span><span style="color:#D19A66;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    def</span><span style="color:#61AFEF;"> right_without_sign</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;font-style:italic;">num</span><span style="color:#ABB2BF;">: </span><span style="color:#56B6C2;">int</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;font-style:italic;">bit</span><span style="color:#ABB2BF;">: </span><span style="color:#56B6C2;">int=</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">) -&gt; </span><span style="color:#56B6C2;">int</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">        val </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> ctypes.</span><span style="color:#61AFEF;">c_uint32</span><span style="color:#ABB2BF;">(num).value </span><span style="color:#56B6C2;">&gt;&gt;</span><span style="color:#ABB2BF;"> bit</span></span>
<span class="line"><span style="color:#D19A66;">        MAX32INT</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 4294967295</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#ABB2BF;"> (val </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> (</span><span style="color:#D19A66;">MAX32INT</span><span style="color:#56B6C2;"> +</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">)) </span><span style="color:#56B6C2;">%</span><span style="color:#ABB2BF;"> (</span><span style="color:#D19A66;">2</span><span style="color:#56B6C2;"> *</span><span style="color:#ABB2BF;"> (</span><span style="color:#D19A66;">MAX32INT</span><span style="color:#56B6C2;"> +</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">)) </span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;"> MAX32INT</span><span style="color:#56B6C2;"> -</span><span style="color:#D19A66;"> 1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    for</span><span style="color:#ABB2BF;"> n </span><span style="color:#C678DD;">in</span><span style="color:#56B6C2;"> range</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">57</span><span style="color:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#ABB2BF;">        o </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> ie[(o </span><span style="color:#56B6C2;">&amp;</span><span style="color:#D19A66;"> 255</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">^</span><span style="color:#56B6C2;"> ord</span><span style="color:#ABB2BF;">(e[n])] </span><span style="color:#56B6C2;">^</span><span style="color:#61AFEF;"> right_without_sign</span><span style="color:#ABB2BF;">(o, </span><span style="color:#D19A66;">8</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    rturn o </span><span style="color:#56B6C2;">^</span><span style="color:#56B6C2;"> -</span><span style="color:#D19A66;">1</span><span style="color:#56B6C2;"> ^</span><span style="color:#D19A66;"> 3988292384</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br></div></div><ol><li>这个<code>sign</code>函数没有像<code>window._webmsxyw</code> 方法一样，选择通过<code>self.playwright_page.evaluate</code>主动调用浏览器运行时中的<code>sign</code>相关方法，而是自己用 Python 实现。实现代码不再解释，就是逆向 JS 逻辑后，翻译成了 Python。</li><li>对于为何选择自己用 Python 实现而不主动调用浏览器中的 JS 方法，我也咨询了下作者，作者表示，这里的代码冗余了</li></ol><h2 id="其它" tabindex="-1"><strong>其它</strong> <a class="header-anchor" href="#其它" aria-label="Permalink to &quot;**其它**&quot;">​</a></h2><h3 id="反反爬虫" tabindex="-1"><strong>反反爬虫</strong> <a class="header-anchor" href="#反反爬虫" aria-label="Permalink to &quot;**反反爬虫**&quot;">​</a></h3><p>MediaCrawler 小红书爬虫，也做了一些反反爬虫措施，代码位于<code>media_platform/xhs/core.py</code> 中的 <code>start</code> 函数。</p><ol><li><p>通过注入<code>stealthjs</code>脚本，来反 headless 浏览器检测</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"> # https://github.com/berstend/puppeteer-extra/tree/master/packages/extract-stealth-evasions</span></span>
<span class="line"><span style="color:#C678DD;"> await</span><span style="color:#E5C07B;"> self</span><span style="color:#ABB2BF;">.browser_context.</span><span style="color:#61AFEF;">add_init_script</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">path</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;libs/stealth.min.js&quot;</span><span style="color:#ABB2BF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p>通过添加 <code>webId cookie</code> 来防止出现 <code>captcha</code> 滑块</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">await</span><span style="color:#E5C07B;"> self</span><span style="color:#ABB2BF;">.browser_context.</span><span style="color:#61AFEF;">add_cookies</span><span style="color:#ABB2BF;">([</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#98C379;">        &#39;name&#39;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;webId&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">        &#39;value&#39;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;xxx123&quot;</span><span style="color:#ABB2BF;">,  </span><span style="color:#7F848E;font-style:italic;"># any value</span></span>
<span class="line"><span style="color:#98C379;">        &#39;domain&#39;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;.xiaohongshu.com&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">        &#39;path&#39;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;/&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">])</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li><li><p>支持设置 ip 代理来更改 ip 地址</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> config.</span><span style="color:#D19A66;">ENABLE_IP_PROXY</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">    ip_proxy_pool </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> await</span><span style="color:#61AFEF;"> create_ip_pool</span><span style="color:#ABB2BF;">(config.</span><span style="color:#D19A66;">IP_PROXY_POOL_COUNT</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">enable_validate_ip</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">True</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    ip_proxy_info: IpInfoModel </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> await</span><span style="color:#ABB2BF;"> ip_proxy_pool.</span><span style="color:#61AFEF;">get_proxy</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">    playwright_proxy_format, httpx_proxy_format </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> self</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">format_proxy_info</span><span style="color:#ABB2BF;">(ip_proxy_info)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li></ol><h3 id="数据爬取" tabindex="-1"><strong>数据爬取</strong> <a class="header-anchor" href="#数据爬取" aria-label="Permalink to &quot;**数据爬取**&quot;">​</a></h3><p>通过 <code>httpx</code>库发起 http 请求，请求时带上<code>cookie</code>以及 <code>sign</code>相关参数。请求是直接请求的 API, 所以没有任何 html 解析逻辑，当请求成功后，就会对数据进行一些处理，然后将数据入库。相关主要逻辑位于 <code>media_platform/xhs/core.py</code> 以及 <code>media_platform/xhs/client.py</code> 。由于比较简单，不再展开。</p><h2 id="结语" tabindex="-1"><strong>结语</strong> <a class="header-anchor" href="#结语" aria-label="Permalink to &quot;**结语**&quot;">​</a></h2><p>MediaCrawler 小红书爬虫是基于小红书浏览器端协议，实现了<code>sign</code>参数的获取，以及登录态的获取。<code>sign</code>参数的获取没有完全逆向 JS 逻辑并用 Python 实现，而是通过<code>self.playwright_page.evaluate</code> 主动调用了部分 JS 函数(<code>window._webmsxyw</code>)。登录态的获取，也是基于 headless 浏览器实现，QRCode 登录需要人工操作；手机号登录可以通过短信转发软件或者短信接收接口实现自动化登录，但没有做验证码检验，验证失败重试。可以通过<code>stealthjs</code> 来反 headless 浏览器检测。</p><h1 id="爬虫代理" tabindex="-1">爬虫代理 <a class="header-anchor" href="#爬虫代理" aria-label="Permalink to &quot;爬虫代理&quot;">​</a></h1><blockquote><p>推荐个性价比很高的 IP 代理商：**<a href="https://yilian.top/**%EF%BC%8C%E9%9C%80%E8%A6%81%E4%BD%BF%E7%94%A8%E6%88%96%E8%80%85%E6%9B%B4%E6%8D%A2%E4%BB%A3%E7%90%86%E5%95%86%E7%9A%84%E5%8F%8B%E5%8F%8B%E4%BB%AC%E5%8F%AF%E4%BB%A5%E5%86%B2%E8%B5%B7%E6%9D%A5%E4%BA%86%EF%BC%9B" target="_blank" rel="noreferrer">https://yilian.top/**，需要使用或者更换代理商的友友们可以冲起来了；</a></p></blockquote><p><a href="https://mp.weixin.qq.com/s/ze9s2_mhOweqy75uhEq4FQ" target="_blank" rel="noreferrer">【爬虫福利】 代理平台：一连代理上线，给新人送福利了 (qq.com)</a></p>`,258),u=[F];function b(d,m,D,C,g,h){return a(),n("div",null,u)}const f=s(A,[["render",b]]);export{q as __pageData,f as default};
