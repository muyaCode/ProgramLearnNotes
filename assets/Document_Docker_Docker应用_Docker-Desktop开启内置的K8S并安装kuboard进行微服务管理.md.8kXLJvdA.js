import{_ as e,c as a,o as s,a3 as n}from"./chunks/framework.zGi9i9Bf.js";const o="/ProgramLearnNotes/assets/640-4894987.Coa9AkZq.webp",r="/ProgramLearnNotes/assets/640-1716210716408-21.Cj9uIhv4.webp",t="/ProgramLearnNotes/assets/640-1716210716408-22.PTmAbwlJ.webp",p="/ProgramLearnNotes/assets/640-1716210716408-23.CkoC_e_T.webp",c="/ProgramLearnNotes/assets/640-1716210716409-24.CkQcftzB.webp",l="/ProgramLearnNotes/assets/640-1716210716409-25.Djnmrr5B.webp",i="/ProgramLearnNotes/assets/640-1716210716409-26.B7QMtnM1.webp",d="/ProgramLearnNotes/assets/640-1716210716409-27.CWJiIZbL.webp",b="/ProgramLearnNotes/assets/640-1716210716409-28.Bkr8evlg.webp",u="/ProgramLearnNotes/assets/640-1716210716409-29.3zyV6tUD.webp",k="/ProgramLearnNotes/assets/640-1716210716409-30.DSX0x-JN.webp",m="/ProgramLearnNotes/assets/640-1716210716409-31.BN8aYrHT.webp",h="/ProgramLearnNotes/assets/640-1716210716409-32.CxZZdaSn.webp",g="/ProgramLearnNotes/assets/640-1716210716409-33.BP-b8smf.webp",q="/ProgramLearnNotes/assets/640-1716210716409-34.efluwshD.webp",D="/ProgramLearnNotes/assets/640-1716210716409-35.BcdZzcsQ.png",_="/ProgramLearnNotes/assets/640-1716210716409-36.DP3__9EN.webp",v="/ProgramLearnNotes/assets/640-1716210716409-37.neMg4Bvq.webp",w="/ProgramLearnNotes/assets/640-1716210716409-38.DAllRIr6.webp",y="/ProgramLearnNotes/assets/640-1716210716409-39.mRIz44YB.webp",x="/ProgramLearnNotes/assets/640-1716210716410-40.DFWKGOHH.webp",K="/ProgramLearnNotes/assets/640-1716210716410-41.DHzK-Tgw.webp",B=JSON.parse('{"title":"Docker-Desktop开启内置的K8S并安装kuboard进行微服务管理","description":"","frontmatter":{},"headers":[],"relativePath":"Document/Docker/Docker应用/Docker-Desktop开启内置的K8S并安装kuboard进行微服务管理.md","filePath":"Document/Docker/Docker应用/Docker-Desktop开启内置的K8S并安装kuboard进行微服务管理.md","lastUpdated":1717759497000}'),P={name:"Document/Docker/Docker应用/Docker-Desktop开启内置的K8S并安装kuboard进行微服务管理.md"},f=n('<h1 id="docker-desktop开启内置的k8s并安装kuboard进行微服务管理" tabindex="-1">Docker-Desktop开启内置的K8S并安装kuboard进行微服务管理 <a class="header-anchor" href="#docker-desktop开启内置的k8s并安装kuboard进行微服务管理" aria-label="Permalink to &quot;Docker-Desktop开启内置的K8S并安装kuboard进行微服务管理&quot;">​</a></h1><h2 id="摘要" tabindex="-1"><strong>摘要</strong> <a class="header-anchor" href="#摘要" aria-label="Permalink to &quot;**摘要**&quot;">​</a></h2><blockquote><ol><li>安装Docker Desktop</li><li>开启并启动Docker Desktop单节点K8S集群</li><li>使用Docker安装Kuboard</li><li>关联Kuboard和单节点K8S集群，使用Kuboard来管理单节点K8S集群</li><li>实战：部署一个<code>nginx deployment</code>应用程序</li></ol></blockquote><h2 id="安装-docker-desktop" tabindex="-1"><strong>安装 Docker Desktop</strong> <a class="header-anchor" href="#安装-docker-desktop" aria-label="Permalink to &quot;**安装 Docker Desktop**&quot;">​</a></h2><h4 id="docker-desktop-是什么" tabindex="-1"><strong>Docker Desktop 是什么？</strong> <a class="header-anchor" href="#docker-desktop-是什么" aria-label="Permalink to &quot;**Docker Desktop 是什么？**&quot;">​</a></h4><p>Docker Desktop 是 Docker 官方提供的桌面应用程序，它允许用户在个人计算机上安装并运行 Docker 引擎。Docker Desktop 支持 Windows 和 macOS 操作系统，通过它用户可以构建、共享和运行容器化应用程序。</p><p>Docker Desktop 提供了图形用户界面（GUI），使得管理容器、镜像、网络和卷等 Docker 对象变得更加直观和方便。它包括了 Docker Engine、Docker CLI 客户端、Docker Compose、Kubernetes（可选）、以及内置的 Dockerfile 编辑器等工具。</p><p>此外，Docker Desktop 还允许用户设置和使用不同的 Docker 镜像仓库，方便用户从远程仓库拉取或推送容器镜像。它还支持资源限制、网络配置、存储驱动选择等高级功能，以适应不同用户的需求。</p><h4 id="安装" tabindex="-1"><strong>安装</strong> <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;**安装**&quot;">​</a></h4><blockquote><p>安装 Docker Desktop for Windows 的步骤如下：</p></blockquote><p><strong>1. 下载 Docker Desktop Installer</strong>：访问 Docker 官方网站下载页面：Get Started with Docker 或者直接访问 Docker Hub 并下载适用于 Windows 的 Docker Desktop Installer。</p><p><strong>2. 运行安装程序</strong>：双击下载的 <code>Docker Desktop Installer.exe</code> 文件以运行安装程序。</p><p><strong>3. 安装要求</strong>：在安装过程中，确保勾选了<code>“Enable Hyper-V Windows Features”</code>（启用 <code>Hyper-V</code> 功能）或者<code>“Install required Windows components for WSL 2”</code>（为 WSL 2 安装所需的 Windows 组件）的选项。</p><p><strong>4. 完成安装</strong>：根据安装向导的提示完成安装，可能需要重启计算机。</p><p><strong>5. 使用 WSL 2 作为后端</strong>（如果需要）：如果你想使用 WSL 2 作为 Docker 的后端，可以在安装时或安装后在 Docker Desktop 的设置中选择“Use the WSL 2 based engine”（使用基于 WSL 2 的引擎）。</p><p><strong>6. 配置镜像源</strong>（可选）：为了加速下载 Docker 镜像，可以配置镜像源，如阿里云镜像加速地址。在 Docker Desktop 的设置中添加镜像源地址：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>{ &quot;registry-mirrors&quot;: [&quot;https://xxxx.mirror.aliyuncs.com&quot;] }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p>其中 <code>xxxx.mirror.aliyuncs.com</code> 需要替换为实际的加速器地址。</p></blockquote><p><strong>7. 验证安装</strong>：安装完成后，可以通过命令行运行 <code>docker version</code> 或 <code>docker-v</code> 来验证 Docker 是否安装成功。</p><h2 id="开启单节点k8s集群" tabindex="-1"><strong>开启单节点K8S集群</strong> <a class="header-anchor" href="#开启单节点k8s集群" aria-label="Permalink to &quot;**开启单节点K8S集群**&quot;">​</a></h2><p>Docker Desktop 自带了 Kubernetes 支持，可以通过 Docker Desktop 的应用程序界面开启 Kubernetes 集群。</p><h4 id="开启k8s" tabindex="-1"><strong>开启K8S</strong> <a class="header-anchor" href="#开启k8s" aria-label="Permalink to &quot;**开启K8S**&quot;">​</a></h4><p>在 Docker Desktop 应用程序中，找到并点击“设置”（Settings）选项，通常位于应用菜单栏或者 Docker 图标右键菜单中。切换到 Kubernetes 标签进行启动。</p><p><img src="'+o+'" alt="图片"></p><h4 id="验证-kubernetes-集群状态" tabindex="-1"><strong>验证 Kubernetes 集群状态</strong> <a class="header-anchor" href="#验证-kubernetes-集群状态" aria-label="Permalink to &quot;**验证 Kubernetes 集群状态**&quot;">​</a></h4><p>启动完成后，通常会在 Kubernetes 页面上显示 Kubernetes 集群的状态，比如<code>Running</code>或者<code>Active</code>。</p><p><img src="'+r+'" alt="图片"></p><h4 id="使用-kubectl" tabindex="-1"><strong>使用 kubectl</strong> <a class="header-anchor" href="#使用-kubectl" aria-label="Permalink to &quot;**使用 kubectl**&quot;">​</a></h4><p>Docker Desktop 启动 Kubernetes 后，会自动配置 kubectl 命令行工具，你可以在命令行中使用 kubectl 来管理你的 Kubernetes 集群。</p><blockquote><p>通过以下命令验证集群是否正确启动</p></blockquote><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>kubectl cluster-info</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+t+`" alt="图片"></p><h2 id="安装kuboard" tabindex="-1"><strong>安装Kuboard</strong> <a class="header-anchor" href="#安装kuboard" aria-label="Permalink to &quot;**安装Kuboard**&quot;">​</a></h2><h4 id="kuboard是什么" tabindex="-1"><strong>Kuboard是什么？</strong> <a class="header-anchor" href="#kuboard是什么" aria-label="Permalink to &quot;**Kuboard是什么？**&quot;">​</a></h4><p>Kuboard 是一款免费的 Kubernetes 管理工具，旨在帮助用户快速在 Kubernetes 上落地微服务。它提供了丰富的功能，包括但不限于 Kubernetes 基本管理功能、节点管理、名称空间管理、存储类/存储卷管理、控制器管理、Service/Ingress 管理、ConfigMap/Secret 管理、CustomerResourceDefinition 管理、问题诊断、容器日志及终端、认证与授权、CI/CD集成等。</p><p>此外，Kuboard 还支持多种认证方式、多集群管理、微服务分层展示、工作负载的直观展示和编辑、存储类型支持、丰富的互操作性以及操作审计等功能。Kuboard 通过图形化界面简化了 Kubernetes 的使用，让用户无需编写 <code>YAML</code> 文件即可完成应用程序的部署和管理，降低了 Kubernetes 的学习门槛，提高了运维的便捷性。</p><h4 id="安装-kuboard-v3-内建用户库" tabindex="-1"><strong>安装 Kuboard v3（内建用户库）</strong> <a class="header-anchor" href="#安装-kuboard-v3-内建用户库" aria-label="Permalink to &quot;**安装 Kuboard v3（内建用户库）**&quot;">​</a></h4><blockquote><p>安装文档：<a href="https://www.kuboard.cn/install/v3/install-built-in.html#%E9%83%A8%E7%BD%B2%E8%AE%A1%E5%88%92" target="_blank" rel="noreferrer">https://www.kuboard.cn/install/v3/install-built-in.html#部署计划</a></p></blockquote><blockquote><p>安装 <code>Kuboard v3.x</code> 版本的指令如下：</p></blockquote><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>docker run -d \\</span></span>
<span class="line"><span>  --restart=unless-stopped \\</span></span>
<span class="line"><span>  --name=kuboard \\</span></span>
<span class="line"><span>  -p 8089:80/tcp \\</span></span>
<span class="line"><span>  -p 10081:10081/tcp \\</span></span>
<span class="line"><span>  -e KUBOARD_ENDPOINT=&quot;http://192.168.3.29:8089&quot; \\</span></span>
<span class="line"><span>  -e KUBOARD_AGENT_SERVER_TCP_PORT=&quot;10081&quot; \\</span></span>
<span class="line"><span>  -v d:\\k8s:/data \\</span></span>
<span class="line"><span>  eipwork/kuboard:v3</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><blockquote><p>注意事项：</p></blockquote><ul><li>可以使用镜像<code>swr.cn-east-2.myhuaweicloud.com/kuboard/kuboard:v3</code>更快地完成镜像下载。</li><li>请不要使用 <code>127.0.0.1</code> 或者 <code>localhost</code> 作为内网 IP</li><li><code>Kuboard</code> 不需要和 <code>K8S</code> 在同一个网段，<code>Kuboard Agent</code> 甚至可以通过代理访问 Kuboard Server</li></ul><blockquote><p>安装结果</p></blockquote><p><img src="`+p+'" alt="图片"></p><blockquote><p>本地磁盘安装目录文件</p></blockquote><p><img src="'+c+'" alt="图片"></p><blockquote><p>容器运行状态</p></blockquote><p><img src="'+l+'" alt="图片"></p><h4 id="访问-kuboard-v3-x" tabindex="-1"><strong>访问 Kuboard v3.x</strong> <a class="header-anchor" href="#访问-kuboard-v3-x" aria-label="Permalink to &quot;**访问 Kuboard v3.x**&quot;">​</a></h4><blockquote><p>在浏览器输入 <a href="http://127.0.0.1:8089/" target="_blank" rel="noreferrer">http://127.0.0.1:8089/</a> 即可访问 <code>Kuboard v3.x</code> 的界面</p></blockquote><p><img src="'+i+'" alt="图片"></p><blockquote><p>登录方式。用户名：<code>admin</code> 密 码：<code>Kuboard123</code></p></blockquote><h4 id="添加-kubernetes-集群到-kuboard" tabindex="-1"><strong>添加 Kubernetes 集群到 Kuboard</strong> <a class="header-anchor" href="#添加-kubernetes-集群到-kuboard" aria-label="Permalink to &quot;**添加 Kubernetes 集群到 Kuboard**&quot;">​</a></h4><blockquote><p>使用<code>Kuboard Agent</code>方式添加</p></blockquote><p><img src="'+d+'" alt="图片"></p><ul><li>名称：<code>Tinywan-k8s</code></li><li>描述：随便写</li><li>Agent部署名称：<code>kuboard-agent-tinywan</code></li></ul><blockquote><p>等待准备导入状态</p></blockquote><p><img src="'+b+'" alt="图片"></p><h4 id="导入kuboard" tabindex="-1"><strong>导入Kuboard</strong> <a class="header-anchor" href="#导入kuboard" aria-label="Permalink to &quot;**导入Kuboard**&quot;">​</a></h4><blockquote><p>通过以下命令下载<code>kuboard-agent.yaml</code>文件</p></blockquote><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>curl -k &#39;http://192.168.3.29:8089/kuboard-api/cluster/Tinywan-k8s/kind/KubernetesCluster/Tinywan-k8s/resource/installAgentToKubernetes?token=igQyIcMwCTBhSXmIhaZ1h2IQ3PSNjrpW&#39; &gt; kuboard-agent.yaml</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p>下载结果</p></blockquote><p><img src="'+u+`" alt="图片"></p><blockquote><p>导入之前先要执行以下两个命令</p></blockquote><p>获取当前 Kubernetes 集群中的所有 <code>Pod</code></p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>PS C:\\Users\\Tinywan&gt; kubectl get pods</span></span>
<span class="line"><span>No resources found in default namespace.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>显示当前 Kubernetes 配置中所有上下文</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>PS C:\\Users\\Tinywan&gt; kubectl config get-contexts</span></span>
<span class="line"><span>CURRENT   NAME             CLUSTER          AUTHINFO         NAMESPACE</span></span>
<span class="line"><span>*         docker-desktop   docker-desktop   docker-desktop</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote><p>切换 <code>kubectl</code> 操作的上下文到名为 <code>docker-desktop</code> 的上下文</p></blockquote><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>PS C:\\Users\\Tinywan&gt; kubectl config use-context docker-desktop</span></span>
<span class="line"><span>Switched to context &quot;docker-desktop&quot;.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>获取（列出）当前 Kubernetes 集群中的所有节点（Node）的信息</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>PS C:\\Users\\Tinywan&gt; kubectl get nodes</span></span>
<span class="line"><span>NAME             STATUS   ROLES           AGE   VERSION</span></span>
<span class="line"><span>docker-desktop   Ready    control-plane   60m   v1.27.2</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote><p>将本地文件 <code>.\\kuboard-agent.yaml</code> 中定义的 <code>Kubernetes</code> 资源对象应用到 <code>Kubernetes</code> 集群中。</p></blockquote><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>PS C:\\Users\\Tinywan&gt; kubectl apply -f .\\kuboard-agent.yaml</span></span>
<span class="line"><span>namespace/kuboard created</span></span>
<span class="line"><span>serviceaccount/kuboard-admin created</span></span>
<span class="line"><span>clusterrolebinding.rbac.authorization.k8s.io/kuboard-admin-crb created</span></span>
<span class="line"><span>serviceaccount/kuboard-viewer created</span></span>
<span class="line"><span>clusterrolebinding.rbac.authorization.k8s.io/kuboard-viewer-crb created</span></span>
<span class="line"><span>deployment.apps/kuboard-agent-tinywan created</span></span>
<span class="line"><span>deployment.apps/kuboard-agent-tinywan-2 created</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><blockquote><p>安装完成，查看导入成功状态，已变成<code>已就绪</code>状态</p></blockquote><p><img src="`+k+'" alt="图片"></p><h4 id="请选择访问集群时所使用的身份-serviceaccount-kuboard-admin" tabindex="-1"><strong>请选择访问集群时所使用的身份 ServiceAccount kuboard admin</strong> <a class="header-anchor" href="#请选择访问集群时所使用的身份-serviceaccount-kuboard-admin" aria-label="Permalink to &quot;**请选择访问集群时所使用的身份 ServiceAccount kuboard admin**&quot;">​</a></h4><p><img src="'+m+'" alt="图片"></p><h4 id="进入集群" tabindex="-1"><strong>进入集群</strong> <a class="header-anchor" href="#进入集群" aria-label="Permalink to &quot;**进入集群**&quot;">​</a></h4><p><img src="'+h+'" alt="图片"></p><h2 id="部署-nginx-deployment应用程序" tabindex="-1"><strong>部署 Nginx Deployment应用程序</strong> <a class="header-anchor" href="#部署-nginx-deployment应用程序" aria-label="Permalink to &quot;**部署 Nginx Deployment应用程序**&quot;">​</a></h2><blockquote><p>官方教程：<a href="https://kuboard.cn/learning/k8s-basics/deploy-app.html#%E5%9C%A8-kubernetes-%E4%B8%8A%E9%83%A8%E7%BD%B2%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F" target="_blank" rel="noreferrer">https://kuboard.cn/learning/k8s-basics/deploy-app.html#在-kubernetes-上部署第一个应用程序</a></p></blockquote><h4 id="选择默认命名空间" tabindex="-1"><strong>选择默认命名空间</strong> <a class="header-anchor" href="#选择默认命名空间" aria-label="Permalink to &quot;**选择默认命名空间**&quot;">​</a></h4><p>选择 使用<code>ServiceAccount kuboard-admin </code>并<code>点击 </code>default<code>名称空间，将切换到</code>default `名称空间首页，如下所示：</p><p><img src="'+g+'" alt="图片"></p><h4 id="创建工作负载" tabindex="-1"><strong>创建工作负载</strong> <a class="header-anchor" href="#创建工作负载" aria-label="Permalink to &quot;**创建工作负载**&quot;">​</a></h4><p>点击左侧菜单的 创建工作负载 ，将打开工作负载编辑器，添加【基本信息】如下图所示：</p><p><img src="'+q+'" alt="图片"></p><p>添加【容器信息】如下图所示：</p><p><img src="'+D+'" alt="图片"></p><ul><li>容器名称：<code>tinywan2024nginx</code></li><li>容器镜像：<code>nginx:1.26.0-alpine</code></li><li>容器端口：<code>80</code></li></ul><blockquote><p>点击保存</p></blockquote><p><img src="'+_+'" alt="图片"></p><h4 id="查看应用运行时" tabindex="-1"><strong>查看应用运行时</strong> <a class="header-anchor" href="#查看应用运行时" aria-label="Permalink to &quot;**查看应用运行时**&quot;">​</a></h4><blockquote><p>此时可查看到该应用的部署结果，如下图所示：</p></blockquote><p><img src="'+v+'" alt="图片"></p><blockquote><p>点击上图中的<code>代理</code>按钮，可以直接测试部署结果。通过代理访问已部署的 nginx 服务时，默认显示结果如下所示：</p></blockquote><p><img src="'+w+`" alt="图片"></p><h4 id="使用-curl-访问" tabindex="-1"><strong>使用 curl 访问</strong> <a class="header-anchor" href="#使用-curl-访问" aria-label="Permalink to &quot;**使用 curl 访问**&quot;">​</a></h4><blockquote><p>执行如下 curl 指令，可以访问 <code>Pod : default/tinywan20240428-748cc6b49b-qtlcn</code></p></blockquote><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>curl -X GET -i \\</span></span>
<span class="line"><span>    --cookie &quot;KuboardToken=eyJhbGciOiJSUzI1NiIsImtpZCI6IjExY2ExZTI3Mjg3NGVkZmM5OTllYzVkYjNlMzEyYTZkODY3MDkyN2EifQ.eyJpc3MiOiJodHRwOi8vMTkyLjE2OC4zLjI5OjgwODkvc3NvIiwic3ViIjoiQ2dWaFpHMXBiaElIWkdWbVlYVnNkQSIsImF1ZCI6Imt1Ym9hcmQtc3NvIiwiZXhwIjoxNzE0NzkwODMyLCJpYXQiOjE3MTQxODYwMzIsImF0X2hhc2giOiIwQ2h0NWZkUE1MWTdoYVdqb2E1TWZnIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsImdyb3VwcyI6WyJhZG1pbmlzdHJhdG9ycyJdLCJuYW1lIjoiU3lzdGVtIEFkbWluaXN0cmF0b3IiLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJhZG1pbiJ9.TPKgWKb6IHbYNwpIrUz8bMA_rTfWr-VM6iMfoKCDBevGnNuVqSEC22DPCmmTQNOB9pmbIjdfCvYwjaAQZ3nytmi6yD-tl7aV8UDxOF3G8adyhT-1WTwt9CqZJlz5yKByscco6DcUj1QMEi9gcieGkGf9oWlUBdNcbxyZ2rOeAZP37UiCX6jK62T790KISpNRvoXY1hTFJCf_WaQs66ip1e6vKJPCEkhqIVhAAd0eqJ4l8Hl89h2Tts7k3BiFThRfB4ogAVMgndy1aXLq6sNziSci0Pn_pAGvs4tD5sEJYG92-HDUsD1F_-TIBownh3zJVR9Icad6mW7ZipA7ts-jzg; KuboardProxy=Li4yMDI0LTA0LTI3XzIyOjMyOjI0Lk1UQXVNUzR3TGpFeC5mYWxzZS4zYmVkMjU1NGZkZjRiOGQ2YjMxMDM0YTVmYzkwMTdiOA==&quot; \\</span></span>
<span class="line"><span>    http://127.0.0.1:8089/k8s-proxy/Tinywan-k8s/api/v1/namespaces/default/pods/http:tinywan20240428-748cc6b49b-qtlcn:80/proxy/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><img src="`+y+'" alt="图片"></p><h4 id="尝试修改一下-index-html" tabindex="-1"><strong>尝试修改一下 index.html</strong> <a class="header-anchor" href="#尝试修改一下-index-html" aria-label="Permalink to &quot;**尝试修改一下 index.html**&quot;">​</a></h4><p><img src="'+x+'" alt="图片"></p><blockquote><p>再次访问</p></blockquote><p><img src="'+K+'" alt="图片"></p>',106),C=[f];function N(S,I,T,E,A,L){return s(),a("div",null,C)}const M=e(P,[["render",N]]);export{B as __pageData,M as default};
