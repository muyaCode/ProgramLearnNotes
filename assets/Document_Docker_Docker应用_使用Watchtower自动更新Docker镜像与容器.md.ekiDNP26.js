import{_ as n,c as a,o as s,a3 as e}from"./chunks/framework.zGi9i9Bf.js";const k=JSON.parse('{"title":"使用Watchtower自动更新Docker镜像与容器","description":"","frontmatter":{},"headers":[],"relativePath":"Document/Docker/Docker应用/使用Watchtower自动更新Docker镜像与容器.md","filePath":"Document/Docker/Docker应用/使用Watchtower自动更新Docker镜像与容器.md","lastUpdated":1717759497000}'),r={name:"Document/Docker/Docker应用/使用Watchtower自动更新Docker镜像与容器.md"},p=e(`<h1 id="使用watchtower自动更新docker镜像与容器" tabindex="-1">使用Watchtower自动更新Docker镜像与容器 <a class="header-anchor" href="#使用watchtower自动更新docker镜像与容器" aria-label="Permalink to &quot;使用Watchtower自动更新Docker镜像与容器&quot;">​</a></h1><h2 id="概述" tabindex="-1"><strong>概述</strong> <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;**概述**&quot;">​</a></h2><p>Docker 容器的部署有一种在手机上装 App 的感觉，但 Docker 容器并不会像手机 App 那样会自动更新，而如果我们需要更新容器一般需要以下四个步骤：</p><ul><li>停止容器：<code>docker stop</code></li><li>删除容器：<code>docker rm</code></li><li>更新镜像：<code>docker pull</code></li><li>启动容器：<code>docker run</code></li></ul><p>停止容器这个步骤可以在删除容器时使用 -f 参数来代替，即使这样还是需要三个步骤。如果部署了大量的容器需要更新使用这种传统的方式工作量是巨大的。</p><h2 id="watchtower" tabindex="-1"><strong>Watchtower</strong> <a class="header-anchor" href="#watchtower" aria-label="Permalink to &quot;**Watchtower**&quot;">​</a></h2><p>Watchtower 是一款实现自动化更新 Docker 镜像与容器的实用工具，它本身也是一个 Docker 镜像，主要用来监控运行中的 Docker 容器的镜像是否需要更新。当 Watchtower 检测到容器的镜像有更新时，它会发送 SIGTERM 信号优雅地结束正在运行的容器，然后根据设定的参数自动重新启动容器，包括使用相同的参数和配置。这个过程无需用户介入，可以自动完成，从而实现 Docker 容器的自动更新。</p><p>Watchtower 的工作方式是定期轮询 Docker 守护进程，检查容器的镜像是否有新的版本可用。如果有新版本，Watchtower 将自动拉取新镜像，并根据需要重启容器。这个工具对于希望保持容器始终运行最新镜像的用户来说非常有用，特别是在需要持续集成和持续部署的环境中。</p><blockquote><p>官网地址：<a href="https://containrrr.dev/watchtower" target="_blank" rel="noreferrer">https://containrrr.dev/watchtower</a></p></blockquote><h2 id="基本使用" tabindex="-1"><strong>基本使用</strong> <a class="header-anchor" href="#基本使用" aria-label="Permalink to &quot;**基本使用**&quot;">​</a></h2><h3 id="更新宿主机的所有容器" tabindex="-1"><strong>更新宿主机的所有容器</strong> <a class="header-anchor" href="#更新宿主机的所有容器" aria-label="Permalink to &quot;**更新宿主机的所有容器**&quot;">​</a></h3><blockquote><p>使用以下命令，更新宿主机的所有容器，也包括 Watch­tower 本身。</p></blockquote><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>docker run -d  \\</span></span>
<span class="line"><span>    --name watchtower \\</span></span>
<span class="line"><span>    --volume /var/run/docker.sock:/var/run/docker.sock \\</span></span>
<span class="line"><span>    containrrr/watchtower</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="指定某个容器进行监视" tabindex="-1"><strong>指定某个容器进行监视</strong> <a class="header-anchor" href="#指定某个容器进行监视" aria-label="Permalink to &quot;**指定某个容器进行监视**&quot;">​</a></h3><blockquote><p>如果指向监视某一个容器进行自定更新，则在上述命令后面加上容器名即可。</p></blockquote><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>docker run -d \\</span></span>
<span class="line"><span>    --name watchtower \\</span></span>
<span class="line"><span>    -v /var/run/docker.sock:/var/run/docker.sock \\</span></span>
<span class="line"><span>    containrrr/watchtower \\</span></span>
<span class="line"><span>    miniboard</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="指定容器的更新频率" tabindex="-1"><strong>指定容器的更新频率</strong> <a class="header-anchor" href="#指定容器的更新频率" aria-label="Permalink to &quot;**指定容器的更新频率**&quot;">​</a></h3><blockquote><p>Watchtower 默认情况下 24 小时会检查一次镜像更新。设置--interval 选项更新时间，默认单位秒。</p></blockquote><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>docker run -d \\</span></span>
<span class="line"><span>    --name watchtower \\</span></span>
<span class="line"><span>    -v /var/run/docker.sock:/var/run/docker.sock \\</span></span>
<span class="line"><span>    containrrr/watchtower \\</span></span>
<span class="line"><span>    --interval 6</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>可以使用<code>--schedule</code>选项， 设定定时更新任务，定时任务为6 字段来表示执行时间，第一个字段表示秒。</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>docker run -d \\</span></span>
<span class="line"><span>    --name watchtower \\</span></span>
<span class="line"><span>    -v /var/run/docker.sock:/var/run/docker.sock \\</span></span>
<span class="line"><span>    containrrr/watchtower \\</span></span>
<span class="line"><span>    --schedule &quot;0 30 20 * * 5&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="自定清理旧镜像" tabindex="-1"><strong>自定清理旧镜像</strong> <a class="header-anchor" href="#自定清理旧镜像" aria-label="Permalink to &quot;**自定清理旧镜像**&quot;">​</a></h3><blockquote><p>可以使用<code>--cleanup</code>选项，这样每次更新都会把旧的镜像清理掉。</p></blockquote><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>docker run -d \\</span></span>
<span class="line"><span>    --name watchtower \\</span></span>
<span class="line"><span>    -v /var/run/docker.sock:/var/run/docker.sock \\</span></span>
<span class="line"><span>    containrrr/watchtower \\</span></span>
<span class="line"><span>    --cleanup</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>用于清理无用的Docker卷。它会删除所有没有关联到任何容器的卷，以释放磁盘空间。</p><h3 id="配置自动更新频率" tabindex="-1"><strong>配置自动更新频率</strong> <a class="header-anchor" href="#配置自动更新频率" aria-label="Permalink to &quot;**配置自动更新频率**&quot;">​</a></h3><p>Watchtower 默认每 5 分钟轮询一次,可以使用以下参数配置更新的频率.</p><ul><li><code>--interval</code>,<code>-i</code>配置更新周期,默认300秒.</li><li><code>--schedule</code>,<code>-s</code>配置定时更新,使用<code>Cron表达式</code>,例如<code>&quot;0 0 1 * * *&quot;</code>.即每天凌晨1点更新.</li></ul><p><strong>每2小时更新一次</strong></p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>docker run -d \\</span></span>
<span class="line"><span>    --name watchtower \\</span></span>
<span class="line"><span>    --restart always \\</span></span>
<span class="line"><span>    -v /var/run/docker.sock:/var/run/docker.sock \\</span></span>
<span class="line"><span>    containrrr/watchtower \\</span></span>
<span class="line"><span>    --cleanup \\</span></span>
<span class="line"><span>    -i 7200</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><strong>每天凌晨3点更新</strong></p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>docker run -d \\</span></span>
<span class="line"><span>    --name watchtower \\</span></span>
<span class="line"><span>    --restart always \\</span></span>
<span class="line"><span>    -e TZ=Asia/Shanghai \\</span></span>
<span class="line"><span>    -v /var/run/docker.sock:/var/run/docker.sock \\</span></span>
<span class="line"><span>    containrrr/watchtower \\</span></span>
<span class="line"><span>    --cleanup \\</span></span>
<span class="line"><span>    -s &quot;0 0 3 * * *&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="手动更新" tabindex="-1"><strong>手动更新</strong> <a class="header-anchor" href="#手动更新" aria-label="Permalink to &quot;**手动更新**&quot;">​</a></h3><p>使用手动更新的方式,运行一次<code>Watch­tower</code>容器来更新所需的容器,更新后会自动删除本次运行的<code>Watch­tower</code>容器.只需要加上<code>--rm</code>和<code>--run-once</code>参数即可.同时也可以配合以上<code>指定容器</code>或指<code>定排除容器</code>的参数来使用.</p><p><strong>更新所有容器</strong></p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>docker run --rm \\</span></span>
<span class="line"><span>    -v /var/run/docker.sock:/var/run/docker.sock \\</span></span>
<span class="line"><span>    containrrr/watchtower \\</span></span>
<span class="line"><span>    --cleanup \\</span></span>
<span class="line"><span>    --run-once</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>更新指定容器</strong></p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>docker run --rm \\</span></span>
<span class="line"><span>    -v /var/run/docker.sock:/var/run/docker.sock \\</span></span>
<span class="line"><span>    containrrr/watchtower \\</span></span>
<span class="line"><span>    --cleanup \\</span></span>
<span class="line"><span>    --run-once \\</span></span>
<span class="line"><span>    nginx redis</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,38),c=[p];function l(o,t,i,d,u,b){return s(),a("div",null,c)}const m=n(r,[["render",l]]);export{k as __pageData,m as default};
