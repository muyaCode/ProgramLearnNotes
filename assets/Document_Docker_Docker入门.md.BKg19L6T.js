import{_ as s,c as a,o as e,a3 as n}from"./chunks/framework.zGi9i9Bf.js";const l="/ProgramLearnNotes/assets/640.ElVyI2WX.webp",o="/ProgramLearnNotes/assets/640-1715166746148-36.BiVTUMzG.webp",r="/ProgramLearnNotes/assets/640-1715166777151-39.BuYavvjY.webp",p="/ProgramLearnNotes/assets/640-1715166777151-40.B-9yampx.webp",t="/ProgramLearnNotes/assets/640-1715166777151-41.CSM-NPfr.webp",c="/ProgramLearnNotes/assets/640-1715166777151-42.DT6peltt.webp",i="/ProgramLearnNotes/assets/640-1715166777151-43.B6ubv1cW.webp",d="/ProgramLearnNotes/assets/640-1715166777151-44.DIZK0GEs.webp",u="/ProgramLearnNotes/assets/640-1715166777151-45.Dw4jTnFj.webp",b="/ProgramLearnNotes/assets/640-1715166978780-60.q2T_pIIg.webp",h="/ProgramLearnNotes/assets/640-1715166978780-61.D6k84see.webp",m="/ProgramLearnNotes/assets/image-20240508191845661.BHTDEePh.png",y="/ProgramLearnNotes/assets/640-1715166978780-65.C17hPHZY.webp",k="/ProgramLearnNotes/assets/640-1715166978780-66.MYZooiRi.webp",C="/ProgramLearnNotes/assets/640-1715166978780-67.BlFCuqrS.webp",g="/ProgramLearnNotes/assets/640-1715166978780-68.Dymxjpvt.webp",v="/ProgramLearnNotes/assets/640-1715166978780-69.Cn4VHPfJ.webp",D="/ProgramLearnNotes/assets/640-1715166978780-70.tdbe771W.webp",A="/ProgramLearnNotes/assets/640-1715166978780-71.DmZgQWkg.webp",f="/ProgramLearnNotes/assets/640-1715166978780-72.B_M7HSAe.gif",L=JSON.parse('{"title":"Docker 入门","description":"","frontmatter":{},"headers":[],"relativePath":"Document/Docker/Docker入门.md","filePath":"Document/Docker/Docker入门.md","lastUpdated":1717759497000}'),F={name:"Document/Docker/Docker入门.md"},q=n('<h1 id="docker-入门" tabindex="-1">Docker 入门 <a class="header-anchor" href="#docker-入门" aria-label="Permalink to &quot;Docker 入门&quot;">​</a></h1><h2 id="相关网址" tabindex="-1">相关网址 <a class="header-anchor" href="#相关网址" aria-label="Permalink to &quot;相关网址&quot;">​</a></h2><p>Docker 官网：<a href="https://www.docker.com" target="_blank" rel="noreferrer">https://www.docker.com</a></p><p>docker 库：<a href="https://hub.docker" target="_blank" rel="noreferrer">https://hub.docker</a>,com</p><h2 id="docker-简介" tabindex="-1">Docker 简介 <a class="header-anchor" href="#docker-简介" aria-label="Permalink to &quot;Docker 简介&quot;">​</a></h2><p>Docker 是一种容器化平台，允许开发人员将应用程序及其所有依赖项打包到一个称为 Docker 镜像的可移植容器中。这使得应用程序可以在任何地方以相同的方式运行，而无需担心环境差异或依赖问题。</p><p>Docker 是一个开源的引擎，可以轻松的为任何应用创建一个轻量级的、可移植的、自给自足的容器。开发者在笔记本上编译测试通过的容器可以批量地在生产环境中部署，包括 VMs (虚拟机) 、bare metal、OpenStack 集群和其他的基础应用平台。</p><p>Docker 通常用于如下场景：</p><ul><li>web 应用的自动化打包和发布 ;</li><li>自动化测试和持续集成、发布；</li><li>在服务型环境中部署和调整数据库或其他的后台应用；</li><li>从头编译或者扩展现有的 OpenShift 或 Cloud Foundry 平台来搭建自己的 PaaS 环境。</li></ul><h2 id="微服务的核心思想" tabindex="-1">微服务的核心思想 <a class="header-anchor" href="#微服务的核心思想" aria-label="Permalink to &quot;微服务的核心思想&quot;">​</a></h2><h2 id="docker-vs-vm" tabindex="-1">Docker vs VM <a class="header-anchor" href="#docker-vs-vm" aria-label="Permalink to &quot;Docker vs VM&quot;">​</a></h2><p>VM：</p><ul><li>运行在宿主机之上的完整的操作系统</li><li>运行自身操作系统会占用较多的资源</li></ul><p>Docker :</p><ul><li>Docker 更加轻量高效</li><li>对系统资源的利用率很高</li><li>比虚拟机技术更为轻便、快捷</li><li>隔离效果不如 VM</li></ul><h2 id="docker-的相关概念" tabindex="-1">Docker 的相关概念 <a class="header-anchor" href="#docker-的相关概念" aria-label="Permalink to &quot;Docker 的相关概念&quot;">​</a></h2><p>Docker 是 CS 架构，主要有两个概念</p><p>Docker daemon:</p><ul><li>运行在宿主机上</li><li>Docker 守护进程</li><li>用户通过 Docker client(Docker 命令)与 Docker daemon 交互</li></ul><p>Docker client:</p><ul><li>Docker 命令行工具，是用户使用 Docker 的主要方式</li><li>Docker client 与 Docker daemon 通信并将结果返回给用户</li><li>Docker client 也可以通过 socket 或者 RESTful api 访问远程的 Docker daemon</li></ul><h2 id="安装与-hello-world" tabindex="-1">安装与 Hello world <a class="header-anchor" href="#安装与-hello-world" aria-label="Permalink to &quot;安装与 Hello world&quot;">​</a></h2><h2 id="常用命令与-dockerfile" tabindex="-1">常用命令与 Dockerfile <a class="header-anchor" href="#常用命令与-dockerfile" aria-label="Permalink to &quot;常用命令与 Dockerfile&quot;">​</a></h2><p>Dockerfile 概念</p><p>Dockerfile 文件格式</p><p>构建镜像</p><p>镜像标签</p><p>修改容器内容</p><h2 id="docker-hub" tabindex="-1">Docker Hub <a class="header-anchor" href="#docker-hub" aria-label="Permalink to &quot;Docker Hub&quot;">​</a></h2><p>docker 库：<a href="https://hub.docker" target="_blank" rel="noreferrer">https://hub.docker</a>,com</p><h2 id="实战-打包一个-web-服务器" tabindex="-1">实战 :打包一个 WEB 服务器 <a class="header-anchor" href="#实战-打包一个-web-服务器" aria-label="Permalink to &quot;实战 :打包一个 WEB 服务器&quot;">​</a></h2><h2 id="微服务到底是什么" tabindex="-1">微服务到底是什么 <a class="header-anchor" href="#微服务到底是什么" aria-label="Permalink to &quot;微服务到底是什么&quot;">​</a></h2><p>微服务属于架构层面的设计模式</p><p>微服务的设计概念以业务功能为主</p><p>微服务独立提供对应的业务功能</p><p>微服务不拘泥于具体的实现语言</p><p>微服务架构 ~ 模块化开发 + 分布式计算</p><p>微服务一一集成与部署</p><ul><li>持续集成一 jekins</li><li>虚拟化一一虚拟机</li><li>容器-Docker</li></ul><h2 id="k8s-kubernetes-入门" tabindex="-1">K8S(Kubernetes)入门 <a class="header-anchor" href="#k8s-kubernetes-入门" aria-label="Permalink to &quot;K8S(Kubernetes)入门&quot;">​</a></h2><p>官网：<a href="https://www.kubernetes.org.cn/k8s" target="_blank" rel="noreferrer">https://www.kubernetes.org.cn/k8s</a></p><h3 id="什么是-k8s" tabindex="-1">什么是 K8s <a class="header-anchor" href="#什么是-k8s" aria-label="Permalink to &quot;什么是 K8s&quot;">​</a></h3><ul><li>Kubernetes，因为首尾字母中间有 8 个字符，所以被简写成 K8s。</li><li>k8s 是底层资源与容器间的一个抽象层，如果和单机架构类比，可以算作是一个分布式时代的 Linux。</li><li>K8s 是 Google 开源的容器集群管理系统。在 Docker 技术的基础上，为容器化的应用提供部署运行、资源调度、服务发现和动态伸缩等一系列完整功能，提高了大规模容器集群管理的便捷性。</li></ul><h3 id="k8s-的特点" tabindex="-1">K8S 的特点 <a class="header-anchor" href="#k8s-的特点" aria-label="Permalink to &quot;K8S 的特点&quot;">​</a></h3><p>k8s 是一个管理容器的工具，也是管理应用整个生命周期的一个工具应用更新从创建应用，应用的部署，应用提供服务，扩容缩容应用，而且可以做到故障自愈。</p><ul><li>可移植：支持公有云，私有云，混合云</li><li>可扩展：模块化，热插拨，可组合</li><li>自愈：自动替换，自动重启，自动复制，自动扩展</li></ul><h3 id="k8s-的管理步骤" tabindex="-1">K8S 的管理步骤 <a class="header-anchor" href="#k8s-的管理步骤" aria-label="Permalink to &quot;K8S 的管理步骤&quot;">​</a></h3><p>在 k8s 进行管理应用的时候，基本步骤是：</p><ol><li>创建集群</li><li>部署应用</li><li>发布应用</li><li>扩展应用</li><li>更新应用</li></ol><h3 id="k8s-的架构结构" tabindex="-1">K8S 的架构结构 <a class="header-anchor" href="#k8s-的架构结构" aria-label="Permalink to &quot;K8S 的架构结构&quot;">​</a></h3><ul><li>生态系统</li><li>接口层</li><li>管理层</li><li>应用层</li><li>核心层</li></ul><h3 id="安装-k8s" tabindex="-1">安装 K8S <a class="header-anchor" href="#安装-k8s" aria-label="Permalink to &quot;安装 K8S&quot;">​</a></h3><p>在 Linux 下安装单机版的集群环境</p><p>以 root 身份执行以下操作 :</p><p>1、关闭 Linux 防火墙</p><ul><li>systemctI stop firewalld</li><li>systemctl disable firewalld</li></ul><p>2、安装 Kubernetes 和依赖组件 etcd</p><ul><li>yum install -y etcd kubernetes</li></ul><p>3、修改配置</p><ul><li>Docker 配置文件：<code>/etc/sysconfig/docker</code>，<code>OPTIONS=&#39;&#39;--selinux-enabled=false --insecure-registry gcr.io&#39;</code></li><li>Kubernetes apiservce 配置文件：<code>/etc/kubernetes/apiserver</code>，把 --admission-control 参数中的 ServiceAccount 删除</li></ul><p>4、按顺序启动所有的服务</p><ul><li>systemctl start etcd</li><li>systemctl start docker</li><li>systemctl start kube-apiserver</li><li>systemctl start kube-controller-manager</li><li>systemctl start kube-scheduler</li><li>systemctl start kubelet</li><li>systemctl start kube-proxy</li></ul><h1 id="portainer-将-docker、docker-compose、kubernetes-三者统一管理的平台" tabindex="-1">portainer：将 Docker、Docker-compose、Kubernetes 三者统一管理的平台 <a class="header-anchor" href="#portainer-将-docker、docker-compose、kubernetes-三者统一管理的平台" aria-label="Permalink to &quot;portainer：将 Docker、Docker-compose、Kubernetes 三者统一管理的平台&quot;">​</a></h1><p>自 2013 年发布以来，Docker 获得了广泛的关注和应用。在过去的近十年中，Docker 也逐渐改变了软件开发和部署的方式，至今采用容器已经成为很多企业软件标准的规范之一。从单机的 Docker，到单机编排的 Docker-compose，再到集群编排调度的 Docker-Swarm 和 Kubernetes，在这十年中容器的技术也发生了很多的变化，随着 Docker-Swarm 的落败，Kubernetes 成为容器编排标准。结合企业自身业务，很多企业目前面向不同的场景对容器的使用大概分为以下三种场景：</p><ul><li>**Docker 独立使用:**主要用于创建和管理单个容器。对于单个应用和测试应用部署非常便捷高效。</li><li>**Docker-compose 服务模式：**主要用于创建和管理多容器应用，可以轻松地启动、停止、重新部署整个服务。</li><li>**Kubernetes 集群调度：**用于管理和调度编排容器，更适合需要高度自动化和大规模容器管理和复杂应用的部署和管理。</li></ul><p><img src="'+l+`" alt="图片"></p><p>由此可见，无论单机 Docker 还是服务编排 Docker-compose，还是集群调度编排的 Kubernetes，在企业里面有着相应的应用场景，几种部署模式并存。那么随之而来的一个问题就是，企业如何统一管理零散这些环境。所以，今天给大家介绍一个能够统一管理这些的平台-Portainer。</p><h2 id="_01-portainer-介绍" tabindex="-1"><strong>01</strong> portainer 介绍 <a class="header-anchor" href="#_01-portainer-介绍" aria-label="Permalink to &quot;**01** portainer 介绍&quot;">​</a></h2><p>一句话介绍 Portainer：能够将 Docker，Docker-compose，Kubernetes 统一管理的平台，通过简单易用的 UI 界面，消除使用 CLI、编写 YAML 的复杂性。</p><h3 id="🏠-项目信息" tabindex="-1">🏠 项目信息 <a class="header-anchor" href="#🏠-项目信息" aria-label="Permalink to &quot;🏠 项目信息&quot;">​</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># Github地址</span></span>
<span class="line"><span style="color:#61AFEF;">https://github.com/portainer/portainer</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 官网地址</span></span>
<span class="line"><span style="color:#61AFEF;">https://www.portainer.io/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="🚀-功能特性" tabindex="-1">🚀 功能特性 <a class="header-anchor" href="#🚀-功能特性" aria-label="Permalink to &quot;🚀 功能特性&quot;">​</a></h3><ul><li>提供直观界面使用 Docker 的全部功能，可以构建、发布和部署容器映像、管理网络和卷，以及配置跨集群的扩展。支持通过 RBAC、注册表管理和外部身份验证支持等功能。</li><li>直观的 Kubernetes 管理平台界面，允许管理员快速管理和维护集群，支持管理集群的服务帐户、角色和角色绑定，以及集群角色和集群角色绑定，而无需退出命令行。</li></ul><h3 id="🛠-系统架构" tabindex="-1">🛠 系统架构 <a class="header-anchor" href="#🛠-系统架构" aria-label="Permalink to &quot;🛠 系统架构&quot;">​</a></h3><p>Portainer 由两个部分组成：Portainer Server 和 Portainer Agent。Portainer Agent 部署到集需要管理的每个节点，并在 Portainer Server 中配置需要纳管环境的 Agent 连接信息。</p><p><strong><img src="`+o+`" alt="图片"></strong></p><h2 id="_02-portainer-安装" tabindex="-1">02 portainer 安装 <a class="header-anchor" href="#_02-portainer-安装" aria-label="Permalink to &quot;02 portainer 安装&quot;">​</a></h2><h3 id="server-端安装" tabindex="-1">Server 端安装 <a class="header-anchor" href="#server-端安装" aria-label="Permalink to &quot;Server 端安装&quot;">​</a></h3><p>首先，创建 Portainer Server 存储数据卷：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> volume</span><span style="color:#98C379;"> create</span><span style="color:#98C379;"> portainer_data</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>然后，下载并运行 Portainer Server 容器：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> run</span><span style="color:#D19A66;"> -d</span><span style="color:#D19A66;"> -p</span><span style="color:#98C379;"> 8000:8000</span><span style="color:#D19A66;"> -p</span><span style="color:#98C379;"> 9443:9443</span><span style="color:#D19A66;"> --name</span><span style="color:#98C379;"> portainer</span><span style="color:#D19A66;"> --restart=always</span><span style="color:#D19A66;"> -v</span><span style="color:#98C379;"> /var/run/docker.sock:/var/run/docker.sock</span><span style="color:#D19A66;"> -v</span><span style="color:#98C379;"> portainer_data:/data</span><span style="color:#98C379;"> portainer/portainer-ce:latest</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>最后，通过运行 docker ps 命令来检查 Portainer Server 容器是否已启动：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">root@server:~#</span><span style="color:#98C379;"> docker</span><span style="color:#98C379;"> ps</span></span>
<span class="line"><span style="color:#61AFEF;">CONTAINER</span><span style="color:#98C379;"> ID</span><span style="color:#98C379;">   IMAGE</span><span style="color:#98C379;">                          COMMAND</span><span style="color:#98C379;">                  CREATED</span><span style="color:#98C379;">       STATUS</span><span style="color:#98C379;">      PORTS</span><span style="color:#98C379;">                                                                                  NAMES</span></span>
<span class="line"><span style="color:#61AFEF;">de5b28eb2fa9</span><span style="color:#98C379;">   portainer/portainer-ce:latest</span><span style="color:#98C379;">  &quot;/portainer&quot;</span><span style="color:#D19A66;">             2</span><span style="color:#98C379;"> weeks</span><span style="color:#98C379;"> ago</span><span style="color:#98C379;">   Up</span><span style="color:#D19A66;"> 9</span><span style="color:#98C379;"> days</span><span style="color:#98C379;">   0.0.0.0:8000</span><span style="color:#ABB2BF;">-&gt;</span><span style="color:#98C379;">8000/tcp,</span><span style="color:#98C379;"> :::8000</span><span style="color:#ABB2BF;">-&gt;</span><span style="color:#98C379;">8000/tcp,</span><span style="color:#98C379;"> 0.0.0.0:9443</span><span style="color:#ABB2BF;">-&gt;</span><span style="color:#98C379;">9443/tcp,</span><span style="color:#98C379;"> :::9443</span><span style="color:#ABB2BF;">-&gt;</span><span style="color:#98C379;">9443/tcp</span><span style="color:#98C379;">   portainer</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>启动完成后，通过打开浏览器访问 <a href="https://localhost:9443" target="_blank" rel="noreferrer">https://localhost:9443</a> 登录，并进行初始化创建账号：</p><p><img src="`+r+'" alt="图片"></p><h3 id="agent-端安装" tabindex="-1">Agent 端安装 <a class="header-anchor" href="#agent-端安装" aria-label="Permalink to &quot;Agent 端安装&quot;">​</a></h3><p>Portainer Agent 安装到需要纳管的 Docker 主机或者 Kubernetes 集群中。在界面选择创建环境：</p><p><img src="'+p+'" alt="图片"></p><p>选择需要添加的平台类型（灰色无法选择的为企业版本，我们不用管）：</p><p><img src="'+t+`" alt="图片"></p><h2 id="一、docker-主机接入管理" tabindex="-1">一、Docker 主机接入管理： <a class="header-anchor" href="#一、docker-主机接入管理" aria-label="Permalink to &quot;一、Docker 主机接入管理：&quot;">​</a></h2><p>在需要纳管的主机上运行以下命令：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> run</span><span style="color:#D19A66;"> -d</span><span style="color:#56B6C2;"> \\</span></span>
<span class="line"><span style="color:#D19A66;">  -p</span><span style="color:#98C379;"> 9001:9001</span><span style="color:#56B6C2;"> \\</span></span>
<span class="line"><span style="color:#D19A66;">  --name</span><span style="color:#98C379;"> portainer_agent</span><span style="color:#56B6C2;"> \\</span></span>
<span class="line"><span style="color:#D19A66;">  --restart=always</span><span style="color:#56B6C2;"> \\</span></span>
<span class="line"><span style="color:#D19A66;">  -v</span><span style="color:#98C379;"> /var/run/docker.sock:/var/run/docker.sock</span><span style="color:#56B6C2;"> \\</span></span>
<span class="line"><span style="color:#D19A66;">  -v</span><span style="color:#98C379;"> /var/lib/docker/volumes:/var/lib/docker/volumes</span><span style="color:#56B6C2;"> \\</span></span>
<span class="line"><span style="color:#98C379;">  portainer/agent:2.19.4</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>部署后，将主机信息填入下图中：</p><p><img src="`+c+'" alt="图片"></p><p>填入后，即可对这台 Docker 主机进行管理：</p><p><img src="'+i+`" alt="图片"></p><h2 id="二、kubernetes-集群接入管理" tabindex="-1">二、Kubernetes 集群接入管理 <a class="header-anchor" href="#二、kubernetes-集群接入管理" aria-label="Permalink to &quot;二、Kubernetes 集群接入管理&quot;">​</a></h2><p>在需要纳管的 K8S 集群中，选择 NodePort 或者 load balancer 方式暴露端口，通过 Kubectl 上运行以下的命令：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 采用NodePort方式</span></span>
<span class="line"><span style="color:#61AFEF;">kubectl</span><span style="color:#98C379;"> apply</span><span style="color:#D19A66;"> -f</span><span style="color:#98C379;"> https://downloads.portainer.io/ce2-19/portainer-agent-k8s-nodeport.yaml</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>部署后，将集群信息填入下图中：</p><p><img src="`+d+'" alt="图片"></p><p>填入后，即可对接入的 K8S 集群进行管理：</p><p><img src="'+u+'" alt="图片"></p><h2 id="_03-最后" tabindex="-1">03 最后 <a class="header-anchor" href="#_03-最后" aria-label="Permalink to &quot;03 最后&quot;">​</a></h2><p>Portainer 作为是一个可视化的 Docker 和 K8S 操作界面，功能非常全面，比如支持通过模板快速部署应用、容器镜像网络数据卷的基本操作、事件日志收集、集群和 SVC 等集中管理和操作、统一仓库管理、登录用户管理和权限控制等功能。这边就不进行一一说明和展示了，基本能满足中小型企业对容器和 k8s 管理的全部需求。</p><p>唯一遗憾的是官方没有提供中文界面，但是有大神提供了中文部署版本的镜像</p><h1 id="kubernetes-安全合规分析的命令行工具" tabindex="-1">Kubernetes 安全合规分析的命令行工具 <a class="header-anchor" href="#kubernetes-安全合规分析的命令行工具" aria-label="Permalink to &quot;Kubernetes 安全合规分析的命令行工具&quot;">​</a></h1><p>Kubernetes 成为了容器编排的标准。很多企业都通过自建，或者云托管的方式建设了 Kubernetes 平台，但是由于 Kubernetes 的复杂性，很多企业在基于 Kubernetes 部署业务应用时，为了便利并没有配置或者开启集群的安全功能，如网络策略和 Pod 安全标准等。导致经常出现以下常见的安全问题：</p><ul><li>**未授权访问：**未授权的访问是最常见的安全问题之一。在 Kubernetes 中，未授权的访问可能会导致未经授权的用户或系统对集群、pods、服务等资源进行未授权的操作，如访问、修改或删除等。</li><li>**敏感数据暴露：**敏感数据暴露是指 Kubernetes 集群中的敏感信息如密码、API 密钥、证书等未正确保护，这些信息可能会被未授权的用户或系统获取。</li><li>**容器逃逸：**容器逃逸是指一个容器试图访问并不属于它的资源。在 Kubernetes 中，容器逃逸可能会导致容器访问宿主机或其他容器的资源。</li><li>**系统权限过高：**在 Kubernetes 集群中，某些服务或容器可能会以 root 用户权限运行，这可能会导致未授权的用户获取到过高的权限，从而可能会对宿主机造成威胁。</li></ul><p>基于对 2023 CVE 中关于 Kubernetes 安全问题的统计，上述安全问题也&quot;高居榜首&quot;。</p><p><img src="'+b+'" alt="图片"></p><p><em>2023 年 *Kubernetes* 常见漏洞类型（数据来源：<strong>cve.mitre.org</strong>）</em></p><p>*备注：</p><ul><li><p><em>CWE-20：输入验证不当</em></p><p><em>CWE-200：将敏感信息暴露给未经授权的参与者</em></p><p><em>CWE-269：权限管理不当</em></p><p><em>CWE-863：授权不正确</em></p><p><em>CWE-862：缺少授权</em></p></li></ul><p>据 ARMO 分析，2018 年至 2023 年间，Kubernetes 中的漏洞数量增加了 440% 。</p><p>_报告地址：<a href="https://www.armosec.io/blog/kubernetes-vulnerabilities-2023/_" target="_blank" rel="noreferrer">https://www.armosec.io/blog/kubernetes-vulnerabilities-2023/_</a></p><p><img src="'+h+`" alt="图片"></p><p><em>Kubernetes 漏洞趋势 （数据来源：cve.mitre.org）</em></p><p>Kubernetes 的安全管理成为了企业迫在眉睫的事情。很多企业也开始逐步引入 Kubernetes 安全扫描工具以此来提升 Kubernetes 的安全性。所以今天给大家介绍一个能够针对 Kubernetes 进行全面安全扫描的工具-Kubescape</p><h2 id="_01-kubescape-介绍" tabindex="-1">01 Kubescape 介绍 <a class="header-anchor" href="#_01-kubescape-介绍" aria-label="Permalink to &quot;01 Kubescape 介绍&quot;">​</a></h2><p>一句话介绍 Kubescape：一个开源 Kubernetes 安全扫描工具，支持 CI/CD 管流水线 和 IDE 集成，支持安全配置分析、漏洞扫描、风险分析、安全合规性分析等，简单易用的 CLI 界面、灵活的输出格式。</p><h3 id="🏠-项目信息-1" tabindex="-1">🏠 项目信息 <a class="header-anchor" href="#🏠-项目信息-1" aria-label="Permalink to &quot;🏠 项目信息&quot;">​</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># Github地址</span></span>
<span class="line"><span style="color:#61AFEF;">https://github.com/kubescape/kubescape</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 项目地址</span></span>
<span class="line"><span style="color:#61AFEF;">https://kubescape.io/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="🚀-功能特性-1" tabindex="-1">🚀 功能特性 <a class="header-anchor" href="#🚀-功能特性-1" aria-label="Permalink to &quot;🚀 功能特性&quot;">​</a></h3><ul><li>支持安全扫描结果存储在集群内</li><li>从 CLI 扫描容器镜像中的漏洞</li><li>支持扫描集群中所有镜像的漏洞</li><li>支持设置集群安全扫描基线</li><li>发现高风险工作负载（如果受到威胁，可能造成危害的工作负载）</li><li>支持 Helm chart 部署，提供连续扫描</li><li>支持独立显示每个工作负载、每个命名空间和每个集群指标</li><li>支持输出 Prometheus 格式指标</li><li>支持通过 Prometheus Alertmanager 发出告警</li></ul><h3 id="🔥-使用场景" tabindex="-1">🔥 使用场景 <a class="header-anchor" href="#🔥-使用场景" aria-label="Permalink to &quot;🔥 使用场景&quot;">​</a></h3><p>支持在编码阶段、CI 阶段、CD 阶段、部署阶段进行扫描。Kubescape Operator 还可以通过 Helm 安装。支持连续扫描、镜像漏洞扫描、运行时分析、网络策略生成等。Kubescape 支持 GitHub Action。很容易将 Kubescape 集成到 CI/CD 流水线中。</p><p><img src="`+m+'" alt="image-20240508191845661"></p><h3 id="🛠-系统架构-1" tabindex="-1">🛠 系统架构 <a class="header-anchor" href="#🛠-系统架构-1" aria-label="Permalink to &quot;🛠 系统架构&quot;">​</a></h3><h4 id="组件架构" tabindex="-1">组件架构 <a class="header-anchor" href="#组件架构" aria-label="Permalink to &quot;组件架构&quot;">​</a></h4><p><img src="'+y+'" alt="图片"></p><h4 id="命令行界面" tabindex="-1">命令行界面 <a class="header-anchor" href="#命令行界面" aria-label="Permalink to &quot;命令行界面&quot;">​</a></h4><p><img src="'+k+'" alt="图片"></p><h4 id="operator-逻辑" tabindex="-1">Operator 逻辑 <a class="header-anchor" href="#operator-逻辑" aria-label="Permalink to &quot;Operator 逻辑&quot;">​</a></h4><p><img src="'+C+`" alt="图片"></p><h2 id="_02-kubescape-安装" tabindex="-1">02 Kubescape 安装 <a class="header-anchor" href="#_02-kubescape-安装" aria-label="Permalink to &quot;02 Kubescape 安装&quot;">​</a></h2><h3 id="一、开始安装" tabindex="-1">一、开始安装 <a class="header-anchor" href="#一、开始安装" aria-label="Permalink to &quot;一、开始安装&quot;">​</a></h3><p>Kubescape 的最佳方法是将其下载到用于管理 Kubernetes 集群的机器上，不建议直接安装到 kube-master 上。</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>curl -s https://raw.githubusercontent.com/kubescape/kubescape/master/install.sh | /bin/bash</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>因为会从 Github 下载二进制执行文件，所以如果网络不通的同学，需要自行解决 Github 访问问题，或者直接在 Github 下载二进制文件后放入 /usr/bin 目录。</p><h3 id="二、离线环境配置-可选" tabindex="-1">二、离线环境配置（可选） <a class="header-anchor" href="#二、离线环境配置-可选" aria-label="Permalink to &quot;二、离线环境配置（可选）&quot;">​</a></h3><p><em>如果安装 kubescape 的机器可以访问 Github，则不需要这步</em></p><ul><li><p>下载所有扫描标准依赖</p><p>1.下载所有框架并将其保存在本地目录中。如果没有指定路径，将保存在<code>~/.kubescape</code>.</p></li></ul><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>kubescape download artifacts --output path/to/local/dir</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>2.使用下载离线框架进行扫描：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">kubescape</span><span style="color:#98C379;"> scan</span><span style="color:#D19A66;"> --use-artifacts-from</span><span style="color:#98C379;"> path/to/local/dir</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><strong>下载单个扫描标准框架</strong></li></ul><ol><li>下载并保存在文件。如未指定文件，另存为 <code>~/.kubescape/&lt;framework name&gt;.json</code></li></ol><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">kubescape</span><span style="color:#98C379;"> download</span><span style="color:#98C379;"> framework</span><span style="color:#98C379;"> nsa</span><span style="color:#D19A66;"> --output</span><span style="color:#98C379;"> /path/nsa.json</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="2"><li>使用下载的框架进行扫描：</li></ol><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">kubescape</span><span style="color:#98C379;"> scan</span><span style="color:#98C379;"> framework</span><span style="color:#98C379;"> nsa</span><span style="color:#D19A66;"> --use-from</span><span style="color:#98C379;"> /path/nsa.json</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="三、持续扫描监控" tabindex="-1">三、持续扫描监控 <a class="header-anchor" href="#三、持续扫描监控" aria-label="Permalink to &quot;三、持续扫描监控&quot;">​</a></h3><p>如果需要 kubescape 持续的扫描监控集群，那么就需要安装 kubescape Operator。</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">helm</span><span style="color:#98C379;"> repo</span><span style="color:#98C379;"> add</span><span style="color:#98C379;"> kubescape</span><span style="color:#98C379;"> https://kubescape.github.io/helm-charts/</span><span style="color:#ABB2BF;"> ; </span><span style="color:#61AFEF;">helm</span><span style="color:#98C379;"> repo</span><span style="color:#98C379;"> update</span><span style="color:#ABB2BF;"> ; </span><span style="color:#61AFEF;">helm</span><span style="color:#98C379;"> upgrade</span><span style="color:#D19A66;"> --install</span><span style="color:#98C379;"> kubescape</span><span style="color:#98C379;"> kubescape/kubescape-operator</span><span style="color:#D19A66;"> -n</span><span style="color:#98C379;"> kubescape</span><span style="color:#D19A66;"> --create-namespace</span><span style="color:#D19A66;"> --set</span><span style="color:#98C379;"> clusterName=\`</span><span style="color:#61AFEF;">kubectl</span><span style="color:#98C379;"> config current-context\`</span><span style="color:#61AFEF;"> --set</span><span style="color:#98C379;"> capabilities.continuousScan=enable</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>验证是否安装成功：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">$</span><span style="color:#98C379;"> kubectl</span><span style="color:#98C379;"> get</span><span style="color:#98C379;"> pods</span><span style="color:#D19A66;"> -n</span><span style="color:#98C379;"> kubescape</span></span>
<span class="line"><span style="color:#61AFEF;">kubescape</span><span style="color:#98C379;">     kubescape-548d6b4577-qshb5</span><span style="color:#98C379;">                          1/1</span><span style="color:#98C379;">     Running</span><span style="color:#D19A66;">   0</span><span style="color:#98C379;">               60m</span></span>
<span class="line"><span style="color:#61AFEF;">kubescape</span><span style="color:#98C379;">     kubevuln-6779c9d74b-wfgqf</span><span style="color:#98C379;">                           1/1</span><span style="color:#98C379;">     Running</span><span style="color:#D19A66;">   0</span><span style="color:#98C379;">               60m</span></span>
<span class="line"><span style="color:#61AFEF;">kubescape</span><span style="color:#98C379;">     operator-5d745b5b84-ts7zq</span><span style="color:#98C379;">                           1/1</span><span style="color:#98C379;">     Running</span><span style="color:#D19A66;">   0</span><span style="color:#98C379;">               60m</span></span>
<span class="line"><span style="color:#61AFEF;">kubescape</span><span style="color:#98C379;">     storage-59567854fd-hg8n8</span><span style="color:#98C379;">                            1/1</span><span style="color:#98C379;">     Running</span><span style="color:#D19A66;">   0</span><span style="color:#98C379;">               60m</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="_03-kubescape-使用" tabindex="-1">03 Kubescape 使用 <a class="header-anchor" href="#_03-kubescape-使用" aria-label="Permalink to &quot;03 Kubescape 使用&quot;">​</a></h2><h3 id="一、扫描命令使用" tabindex="-1">一、扫描命令使用 <a class="header-anchor" href="#一、扫描命令使用" aria-label="Permalink to &quot;一、扫描命令使用&quot;">​</a></h3><p><strong>快速扫描：</strong></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">kubescape</span><span style="color:#98C379;"> scan</span><span style="color:#D19A66;"> --verbose</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="`+g+'" alt="图片"></p><ul><li><strong>使用 NSA 框架</strong>扫描 ：</li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">kubescape</span><span style="color:#98C379;"> scan</span><span style="color:#98C379;"> framework</span><span style="color:#98C379;"> nsa</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+v+`" alt="图片"></p><ul><li><strong>使用 MITRE ATT&amp;CK® 框架扫描：</strong></li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">kubescape</span><span style="color:#98C379;"> scan</span><span style="color:#98C379;"> framework</span><span style="color:#98C379;"> mitre</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><strong>扫描特定项</strong></li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">kubescape</span><span style="color:#98C379;"> scan</span><span style="color:#98C379;"> control</span><span style="color:#98C379;"> &quot;Privileged container&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><strong>指定 cluster.conf 扫描集群</strong></li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">kubescape</span><span style="color:#98C379;"> scan</span><span style="color:#D19A66;"> --kubeconfig</span><span style="color:#98C379;"> cluster.conf</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><strong>指定扫描集群中某些 namespace</strong></li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">kubescape</span><span style="color:#98C379;"> scan</span><span style="color:#D19A66;"> --include-namespaces</span><span style="color:#98C379;"> development,staging,production</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><strong>扫描排除集群中某些 namespace</strong></li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">kubescape</span><span style="color:#98C379;"> scan</span><span style="color:#D19A66;"> --exclude-namespaces</span><span style="color:#98C379;"> kube-system,kube-public</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><strong>部署前扫描本地 YAML/JSON 文件：</strong></li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">kubescape</span><span style="color:#98C379;"> scan</span><span style="color:#E5C07B;"> *</span><span style="color:#98C379;">.yaml</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><strong>扫描 Git 存储库中清单文件：</strong></li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">kubescape</span><span style="color:#98C379;"> scan</span><span style="color:#98C379;"> https://github.com/kubescape/kubescape</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><strong>扫描 Helm Charts</strong></li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">kubescape</span><span style="color:#98C379;"> scan</span><span style="color:#ABB2BF;"> &lt;</span><span style="color:#98C379;">/path/to/director</span><span style="color:#ABB2BF;">y&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><strong>指定格式输出</strong></li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#Jaso格式</span></span>
<span class="line"><span style="color:#61AFEF;">kubescape</span><span style="color:#98C379;"> scan</span><span style="color:#D19A66;"> --format</span><span style="color:#98C379;"> json</span><span style="color:#D19A66;"> --format-version</span><span style="color:#98C379;"> v2</span><span style="color:#D19A66;"> --output</span><span style="color:#98C379;"> results.json</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">#PDF格式</span></span>
<span class="line"><span style="color:#61AFEF;">kubescape</span><span style="color:#98C379;"> scan</span><span style="color:#D19A66;"> --format</span><span style="color:#98C379;"> pdf</span><span style="color:#D19A66;"> --output</span><span style="color:#98C379;"> results.pdf</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">#XML格式</span></span>
<span class="line"><span style="color:#61AFEF;">kubescape</span><span style="color:#98C379;"> scan</span><span style="color:#D19A66;"> --format</span><span style="color:#98C379;"> junit</span><span style="color:#D19A66;"> --output</span><span style="color:#98C379;"> results.xml</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">#Prometheus metrics</span></span>
<span class="line"><span style="color:#61AFEF;">kubescape</span><span style="color:#98C379;"> scan</span><span style="color:#D19A66;"> --format</span><span style="color:#98C379;"> prometheus</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">#html格式</span></span>
<span class="line"><span style="color:#61AFEF;">kubescape</span><span style="color:#98C379;"> scan</span><span style="color:#D19A66;"> --format</span><span style="color:#98C379;"> html</span><span style="color:#D19A66;"> --output</span><span style="color:#98C379;"> results.html</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><img src="`+D+'" alt="图片"></p><p>html 报告</p><p><img src="'+A+'" alt="图片"></p><p>pdf 报告</p><h3 id="二、指标解读" tabindex="-1">二、指标解读 <a class="header-anchor" href="#二、指标解读" aria-label="Permalink to &quot;二、指标解读&quot;">​</a></h3><p>Kubescape 提供两个重要指标来评估合规性：</p><ul><li>控制合规性分数：该分数衡量框架内各个控制的合规性。它是通过评估传递的资源与根据该控制评估的资源总数的比率来计算的。</li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">kubescape</span><span style="color:#98C379;"> scan</span><span style="color:#D19A66;"> --compliance-threshold</span><span style="color:#ABB2BF;"> &lt;</span><span style="color:#98C379;">SCORE_VALUE[float32</span><span style="color:#ABB2BF;">]&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>框架合规性分数：此分数提供集群对特定框架合规性的总体评估。它是通过计算框架内所有控制的控制合规性分数的平均值来计算的。</li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">kubescape</span><span style="color:#98C379;"> scan</span><span style="color:#98C379;"> framework</span><span style="color:#ABB2BF;"> &lt;</span><span style="color:#98C379;">FRAMEWORK_NAM</span><span style="color:#ABB2BF;">E&gt; </span><span style="color:#D19A66;">--compliance-threshold</span><span style="color:#ABB2BF;"> &lt;</span><span style="color:#98C379;">SCORE_VALUE[float32</span><span style="color:#ABB2BF;">]&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Kubescape 扫描并提供合规性分数如下：</p><p><img src="'+f+'" alt="图片"></p><h2 id="_04-最后" tabindex="-1">04 最后 <a class="header-anchor" href="#_04-最后" aria-label="Permalink to &quot;04 最后&quot;">​</a></h2><p>作为 Kubernetes 安全扫描工具，Kubescape 能够支持包括风险分析、安全合规、RBAC 规范扫描和容器漏洞扫描等功能。Kubescape 支持扫描部署前的 Helm Charts、Yaml 等文件，和正在运行中的 Kubernetes ，并且提供了简单易用的 CLI 界面，很容易和 DveOps 、CI/CD 等集成，提升 Kubernetes 的安全合规能力。</p><h1 id="教程" tabindex="-1">教程 <a class="header-anchor" href="#教程" aria-label="Permalink to &quot;教程&quot;">​</a></h1><p><a href="https://nystudio107.com/blog/dock-life-using-docker-for-all-the-things" target="_blank" rel="noreferrer">纽约工作室 107 |Dock Life：将 Docker 用于所有事情！ (nystudio107.com)</a></p><p><a href="https://mp.weixin.qq.com/s/R2-tFb3uXLp3ZTUvHpSPOA" target="_blank" rel="noreferrer">全网对 Docker 命令总结最全的文章，秒收藏！ (qq.com)</a></p>',201),_=[q];function P(w,x,E,K,B,S){return e(),a("div",null,_)}const I=s(F,[["render",P]]);export{L as __pageData,I as default};
